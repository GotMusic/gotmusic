# GotMusic - Environment Variables Example
# Copy this file to .env.local and update with your actual values
# See: README.md for full environment variables table

# =============================================================================
# DATABASE (Required)
# =============================================================================

# PostgreSQL connection string (required for all environments)
# Format: postgresql://username:password@host:port/database?options
DATABASE_URL=postgresql://postgres:postgres@localhost:5432/gotmusic_dev

# =============================================================================
# ADMIN AUTHENTICATION (Development)
# =============================================================================

# Basic auth credentials for /admin/* and /api/upload/* routes
# These are only used in development; production uses proper auth
ADMIN_USER=admin
ADMIN_PASS=dev_password_changeme

# =============================================================================
# STORAGE (Optional - defaults to stub)
# =============================================================================

# Storage mode: stub (development), s3 (AWS S3), or r2 (Cloudflare R2)
GM_STORAGE_MODE=stub
STORAGE_DRIVER=stub

# Public CDN Base URL (recommended for production)
# Used to generate public URLs for uploaded files
# STORAGE_PUBLIC_BASE=https://cdn.gotmusic.app
# NEXT_PUBLIC_STORAGE_PUBLIC_BASE=https://cdn.gotmusic.app

# --- AWS S3 Configuration ---
# STORAGE_BUCKET=your-s3-bucket-name
# AWS_REGION=us-east-1
# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key
# AWS_CLOUDFRONT_DOMAIN=https://d123456789abcd.cloudfront.net

# --- Cloudflare R2 Configuration ---
# R2_ACCOUNT_ID=your-r2-account-id
# R2_ACCESS_KEY_ID=your-r2-access-key-id
# R2_SECRET_ACCESS_KEY=your-r2-secret-access-key
# R2_PUBLIC_DOMAIN=https://pub-abc123def456.r2.dev
# STORAGE_BUCKET=your-r2-bucket-name

# =============================================================================
# BLOCKCHAIN / WEB3 (Planned Integrations)
# =============================================================================

# Base Network RPC URLs
# NEXT_PUBLIC_BASE_RPC=https://sepolia.base.org
# NEXT_PUBLIC_BASE_CHAIN_ID=84532

# Blockscout Explorer (for transaction/attestation links)
# NEXT_PUBLIC_BLOCKSCOUT_URL=https://base-sepolia.blockscout.com

# Ethereum Attestation Service (EAS)
# EAS_CHAIN_ID=84532
# EAS_SCHEMA_VENDOR=0x...
# EAS_SCHEMA_LICENSE=0x...

# Lit Protocol (for encrypted storage access control)
# LIT_NETWORK=datil-test
# NEXT_PUBLIC_LIT_NETWORK=datil-test

# Lighthouse (encrypted blob storage)
# LIGHTHOUSE_API_KEY=your-api-key

# Avail Nexus (cross-chain intent execution)
# AVAIL_NEXUS_CONFIG=https://nexus.avail.com/config.json

# PYUSD (payment token)
# PYUSD_CONTRACT_ADDRESS=0x...
# PYUSD_DECIMALS=6

# =============================================================================
# FEATURE FLAGS (Optional)
# =============================================================================

# Show mock receipt data in development
# NEXT_PUBLIC_SHOW_MOCK_RECEIPT=true

# Enable admin panel (default: true in development, false in production)
# NEXT_PUBLIC_ENABLE_ADMIN=true

# =============================================================================
# DEVELOPMENT / DEBUGGING (Optional)
# =============================================================================

# Disable Next.js telemetry
NEXT_TELEMETRY_DISABLED=1

# Node environment (auto-detected, can override)
# NODE_ENV=development

# =============================================================================
# CI/CD (GitHub Actions)
# =============================================================================

# GitHub token (automatically provided in CI)
# GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}

# Gitleaks license (for Organizations only)
# GITLEAKS_LICENSE=${{ secrets.GITLEAKS_LICENSE }}

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file:
#    cp .env.example .env.local

# 2. Update DATABASE_URL with your PostgreSQL connection

# 3. (Optional) Configure storage if not using stub mode

# 4. Initialize database:
#    yarn workspace @gotmusic/web db:push
#    yarn workspace @gotmusic/web db:seed

# 5. Start development:
#    yarn dev
