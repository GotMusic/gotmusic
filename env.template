# GotMusic - Environment Variables Template
# Copy this file to .env.local and update the values

# =============================================================================
# DATABASE (PostgreSQL Required)
# =============================================================================

# PostgreSQL connection string
# Examples for different providers:
# - Neon (Recommended): postgresql://user:pass@ep-xxx.us-east-1.aws.neon.tech/neondb?sslmode=require&pgbouncer=true
# - Supabase: postgresql://postgres:pass@db.xxx.supabase.co:5432/postgres
# - Railway: postgresql://postgres:pass@containers-us-west-xxx.railway.app:5432/railway
# - Local: postgresql://postgres:password@localhost:5432/gotmusic_dev
DATABASE_URL=postgresql://postgres:password@localhost:5432/gotmusic_dev

# Neon Database URL (for production and development)
# Get this from your Neon dashboard: https://console.neon.tech/
# Use the pooled connection string for better performance
NEON_DATABASE_URL=postgresql://user:pass@ep-xxx.us-east-1.aws.neon.tech/neondb?sslmode=require&pgbouncer=true

# =============================================================================
# SESSION SECURITY (Required for Production)
# =============================================================================

# Secret key for signing session cookies (32+ random bytes)
# Generate with: openssl rand -base64 32
# NEVER commit this to version control
SESSION_SECRET=your-super-secret-session-key-change-in-production

# =============================================================================
# ADMIN AUTHENTICATION (Development Only)
# =============================================================================

# Basic auth for /admin/* and /api/upload/* routes
# Disabled in production by default
ADMIN_USER=admin
ADMIN_PASS=password

# =============================================================================
# STORAGE (Optional - defaults to stub for development)
# =============================================================================

# Storage driver: stub, s3, r2, uploadthing
STORAGE_DRIVER=stub

# Public CDN Base URL (recommended for production)
# This is the base URL for serving uploaded files publicly
# STORAGE_PUBLIC_BASE=https://cdn.gotmusic.app
# NEXT_PUBLIC_STORAGE_PUBLIC_BASE=https://cdn.gotmusic.app

# UploadThing Configuration (Modern file upload service)
# Get your token from: https://uploadthing.com/dashboard
UPLOADTHING_TOKEN=your-uploadthing-token-here
UPLOADTHING_APP_ID=your-uploadthing-app-id-here

# S3 Configuration (if using S3)
STORAGE_BUCKET=your-bucket-name
STORAGE_REGION=us-east-1
STORAGE_ACCESS_KEY_ID=your-access-key
STORAGE_SECRET_ACCESS_KEY=your-secret-key
# AWS_CLOUDFRONT_DOMAIN=https://d123456.cloudfront.net

# Cloudflare R2 Configuration (if using R2)
# R2_ACCOUNT_ID=your-account-id
# R2_ACCESS_KEY_ID=your-access-key
# R2_SECRET_ACCESS_KEY=your-secret-key
# R2_PUBLIC_DOMAIN=https://pub-abc123.r2.dev

# =============================================================================
# DEVELOPMENT SETUP
# =============================================================================

# 1. Copy this file: cp env.template .env.local
# 2. Update DATABASE_URL with your PostgreSQL connection
# 3. Run: yarn workspace @gotmusic/web db:push && yarn workspace @gotmusic/web db:seed
# 4. Start dev server: yarn dev
