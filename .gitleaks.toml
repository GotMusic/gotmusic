# Gitleaks Configuration for GotMusic
# Scans for secrets, API keys, and other sensitive data in commits and staged files
# See: https://github.com/gitleaks/gitleaks

title = "GotMusic Secret Scanning"

# Focus on high-signal secret detection only (no default rules to avoid false positives)
[[rules]]
id = "generic-api-key"
description = "Generic API Key"
regex = '''(?i)(api_key|apikey|api-key)['\"]?\s*[:=]\s*['\"]?[a-z0-9]{20,}['\"]?'''
secretGroup = 1
keywords = ["api", "key"]

[[rules]]
id = "private-key"
description = "Private Key"
regex = '''-----BEGIN\s+[A-Z\s]+\s+PRIVATE\s+KEY-----'''
keywords = ["private", "key"]

[[rules]]
id = "github-token"
description = "GitHub Token"
regex = '''ghp_[0-9A-Za-z]{36}'''
keywords = ["github", "token"]

[allowlist]
description = "Allowlist for safe patterns and test data"

# Paths to ignore (test fixtures, examples, docs)
paths = [
  '''\btests?/fixtures/.*''',
  '''\bexamples?/.*''',
  '''\.test\.(ts|js|tsx|jsx)$''',
  '''\.spec\.(ts|js|tsx|jsx)$''',
  '''\b__tests__/.*''',
  '''\bdocs/.*\.md$''',
  '''\bdocs\.d/.*\.md$''',
  '''README\.md$''',  # Ignore README.md to avoid example values
]

# Safe patterns that look like secrets but aren't
regexes = [
  # Yarn cache checksums
  '''[0-9a-f]{40,}\.zip''',
  # GitHub Actions example tokens
  '''secrets\.GITHUB_TOKEN''',
  '''secrets\.PROJECT_TOKEN''',
  # Environment variable placeholders
  '''your-[a-z-]+-(key|id|secret)''',
  '''NEXT_PUBLIC_[A-Z_]+''',
  # PostgreSQL connection strings in templates/examples
  '''postgresql://postgres:password@localhost''',
  '''postgresql://user:pass@''',
  # Common placeholder values
  '''(example|test|demo|fake|stub|placeholder)\.(com|org|dev)''',
  # AWS example keys
  '''AKIAIMNOJVGFDXXXE4OA''',
  '''AKIAIOSFODNN7EXAMPLE''',
  # Sidekiq example secrets
  '''BUNDLE_ENTERPRISE__CONTRIBSYS__COM''',
]

# Specific commits to ignore (if needed for historical reasons)
commits = []

# Stopwords that indicate a false positive
stopwords = []

