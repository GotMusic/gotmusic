name: CI/CD Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true  # Cancel old runs when new ones start

jobs:
  # 1. Security & Quality Checks
  security-quality:
    name: Security & Quality
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate
          test "$(yarn -v)" = "4.3.1"

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build tokens
        run: yarn tokens:build

      - name: Install Gitleaks
        run: |
          # Install gitleaks for secret scanning
          curl -sSfL https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz | tar -xz
          sudo mv gitleaks /usr/local/bin/
          gitleaks version

      - name: Security checks
        run: |
          yarn sec:console
          yarn sec:secrets
          echo "✅ Security checks passed"

      - name: Code quality
        run: |
          yarn biome format --write .
          yarn biome check . --files-ignore-unknown=true
          yarn typecheck
          echo "✅ Code quality checks passed"

  # 2. Build & Test
  build-test:
    name: Build & Unit
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: security-quality
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate

      - name: Compute changed files
        id: changes
        uses: tj-actions/changed-files@v45
        with:
          files_yaml: |
            web:
              - apps/web/**
              - packages/ui/**
              - packages/api/**
              - turbo.json
              - yarn.lock
            docs:
              - docs/**
              - docs.d/**
              - "**/*.md"

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            ~/.cache/node/corepack
            .yarn/cache
            .turbo
            apps/web/.next/cache
          key: cideps-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('turbo.json') }}
          restore-keys: |
            cideps-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-
            cideps-${{ runner.os }}-

      - name: Install deps
        run: yarn install --immutable

      - name: Build shared packages
        if: steps.changes.outputs.web_any_changed == 'true'
        run: |
          yarn tokens:build
          yarn workspace @gotmusic/api build
          yarn workspace @gotmusic/ui build

      - name: Assert single middleware
        run: |
          set -e
          COUNT=$(find apps/web -maxdepth 2 -name 'middleware.ts' | wc -l)
          echo "Found $COUNT middleware.ts files"
          if [ "$COUNT" -ne 1 ]; then
            echo "::error::You must have exactly ONE apps/web/middleware.ts"
            find apps/web -name 'middleware.ts' -print
            exit 1
          fi

      - name: Build web (Next)
        if: steps.changes.outputs.web_any_changed == 'true'
        working-directory: apps/web
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: "1"
        run: |
          pwd && ls -la
          yarn build
          echo "Listing .next:"
          ls -la .next || true

      - name: Tar build output
        if: steps.changes.outputs.web_any_changed == 'true'
        run: |
          tar -C apps/web -czf web-build-${{ github.run_id }}.tgz .next

      - name: Upload build artifact
        if: steps.changes.outputs.web_any_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: web-build-${{ github.run_id }}
          path: web-build-${{ github.run_id }}.tgz
          retention-days: 7

  # 3. E2E Tests
  e2e-tests:
    name: E2E (change-aware)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: build-test
    services:
      postgres:
        image: public.ecr.aws/docker/library/postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: gotmusic_test
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate

      - name: Compute changed files (same as build)
        id: changes
        uses: tj-actions/changed-files@v45
        with:
          files_yaml: |
            web:
              - apps/web/**
              - packages/ui/**
              - packages/api/**
              - turbo.json
              - yarn.lock
            docs:
              - docs/**
              - docs.d/**
              - "**/*.md"

      - name: Short-circuit if web not changed (still run tiny sanity)
        if: steps.changes.outputs.web_any_changed != 'true'
        run: |
          echo "Web not changed. Skipping E2E."
          exit 0

      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            ~/.cache/node/corepack
            .yarn/cache
            .turbo
            apps/web/.next/cache
          key: cideps-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('turbo.json') }}

      - name: Cache Playwright
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: pw-${{ runner.os }}-${{ hashFiles('apps/web/package.json') }}

      - name: Install deps
        run: yarn install --immutable

      - name: Install Playwright
        run: yarn dlx playwright install --with-deps

      - name: Setup DB
        working-directory: apps/web
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/gotmusic_test
        run: |
          yarn db:push
          yarn db:seed

      - name: Download build
        uses: actions/download-artifact@v4
        with:
          name: web-build-${{ github.run_id }}
          path: .

      - name: Unpack build
        run: |
          tar -xzf web-build-${{ github.run_id }}.tgz
          ls -la apps/web/.next || (echo "::error::.next missing after unpack" && exit 1)

      - name: Start web
        working-directory: apps/web
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/gotmusic_test
          GM_STORAGE_MODE: stub
          NEXT_TELEMETRY_DISABLED: "1"
          NEXT_PUBLIC_SHOW_MOCK_RECEIPT: "true"
          NEXT_PUBLIC_BASE_URL: "http://127.0.0.1:4123"
          NEXT_PUBLIC_API_URL: "http://127.0.0.1:4123"
          READINESS_REQUIRE_SEED: "true"
        run: yarn start -p 4123 &

      - name: Wait for server (no trailing slashes)
        run: |
          yarn dlx wait-on http://127.0.0.1:4123/api/healthz -t 180000
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" http://127.0.0.1:4123/api/readiness || true)
            if [ "$code" = "200" ]; then echo "ready"; exit 0; fi
            sleep 2
          done
          echo "::error::Server not ready"; exit 1

      - name: Choose test grep (change-aware)
        id: pwgrep
        run: |
          # default: public tests
          G="@public"
          # if studio or auth-related files changed, widen
          if [[ "${{ steps.changes.outputs.web_all_changed_files }}" =~ "apps/web/src/app/studio" ]] || \
             [[ "${{ steps.changes.outputs.web_all_changed_files }}" =~ "apps/web/src/lib/session" ]] || \
             [[ "${{ steps.changes.outputs.web_all_changed_files }}" =~ "apps/web/middleware.ts" ]]; then
            G="@public|@studio|@auth"
          fi
          echo "GREP=$G" >> $GITHUB_OUTPUT

      - name: Run E2E
        working-directory: apps/web
        env:
          PW_PORT: "4123"
          PW_BASE_URL: "http://127.0.0.1:4123"
          NODE_ENV: "test"
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/gotmusic_test
          GM_STORAGE_MODE: "stub"
        run: |
          yarn playwright test --reporter=html -g "${{ steps.pwgrep.outputs.GREP }}"

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_id }}
          path: apps/web/playwright-report
          retention-days: 7

  # 4. Performance & Quality
  performance-quality:
    name: Performance & Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-test
    continue-on-error: true  # Non-blocking
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            ~/.cache/node/corepack
            .yarn/cache
            .turbo
          key: yarn-turbo-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('turbo.json') }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: |
          yarn tokens:build
          yarn workspace @gotmusic/api build
          yarn workspace @gotmusic/ui build

      - name: Performance analysis
        run: |
          yarn perf:analyze || echo "Performance analysis completed with warnings"
          yarn perf:ci || echo "Performance CI completed with warnings"

      - name: Upload performance reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports
          path: |
            .e18e-report.json
            .e18e-recommendations.md
            .ci-performance-report.json
          retention-days: 7

  # 5. Storybook (Non-blocking)
  storybook:
    name: Storybook
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build-test
    continue-on-error: true  # Non-blocking
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.3.1 --activate

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.yarn/berry/cache
            ~/.cache/node/corepack
            .yarn/cache
            .turbo
          key: yarn-turbo-${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('turbo.json') }}

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build packages
        run: |
          yarn tokens:build
          yarn workspace @gotmusic/api build
          yarn workspace @gotmusic/ui build

      - name: Build Storybook
        run: yarn workspace @gotmusic/web storybook:build

      - name: Upload Storybook
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: apps/web/storybook-static
          retention-days: 7
