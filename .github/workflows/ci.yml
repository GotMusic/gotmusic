name: ci
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: gotmusic_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/gotmusic_test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20 }
      - name: Enable Corepack
        run: corepack enable
      - name: Install
        run: yarn install --immutable
      - name: Build tokens
        run: yarn tokens:build
      - name: Biome format (write)
        run: yarn biome:fix
      - name: Lint (Biome)
        run: yarn biome:lint
      - name: Typecheck
        run: yarn typecheck || true
      - name: Unit tests
        run: yarn test --if-present || true
      - name: Tokens parity
        run: yarn tokens:check
      - name: Install Playwright
        run: npx playwright install --with-deps
      - name: Database migrations
        run: yarn workspace @gotmusic/web db:push
      - name: Database seed
        run: yarn workspace @gotmusic/web db:seed
      - name: Database test
        run: yarn workspace @gotmusic/web db:test
      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ github.run_number }}
          path: apps/web/playwright-report/
          retention-days: 7
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ github.run_number }}
          path: apps/web/test-results/
          retention-days: 7
