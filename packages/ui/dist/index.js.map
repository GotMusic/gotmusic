{"version":3,"sources":["../src/theme/Provider.tsx","../src/primitives/Slot.tsx","../src/primitives/VisuallyHidden.tsx","../src/a11y/Announcer.tsx","../src/utils/cn.ts","../src/utils/cva.ts","../src/utils/a11y.ts","../src/layout/Card.tsx","../src/layout/Button.tsx","../src/layout/CatalogGrid.tsx","../src/data/Badge.tsx","../src/data/Tag.tsx","../src/media/Waveform.tsx","../src/media/Player.tsx","../src/icons/index.ts","../src/media/MiniPlayer.tsx","../src/media/PlayerControls.tsx","../src/media/ProgressBar.tsx","../src/media/CatalogCard.tsx","../src/feedback/Skeleton.tsx","../src/forms/Field.tsx","../src/forms/Input.tsx","../src/forms/Select.tsx","../src/forms/Checkbox.tsx","../src/forms/Slider.tsx","../src/Button.tsx","../src/forms/CatalogFilters.tsx","../src/upload/FileUpload.tsx","../src/upload/UploadProgress.tsx","../src/upload/ValidationFeedback.tsx","../src/asset/AssetTile.tsx","../src/asset/AssetStatus.tsx","../src/asset/MetadataPanel.tsx","../src/asset/AssetActions.tsx","../src/asset/AssetPreview.tsx","../src/pricing/PriceInput.tsx","../src/pricing/CurrencySelector.tsx","../src/pricing/PriceValidator.tsx","../src/pricing/PriceRange.tsx","../src/admin/FeatureFlag.tsx","../src/admin/AuditLog.tsx","../src/admin/HealthStatus.tsx","../src/user/UserRole.tsx","../src/user/PermissionMatrix.tsx","../src/user/UserStatus.tsx","../src/core/Button.tsx","../src/core/Card.tsx","../src/core/Input.tsx","../src/core/Select.tsx","../src/core/Checkbox.tsx","../src/feedback/Toast.tsx","../src/feedback/Modal.tsx","../src/feedback/Alert.tsx","../src/feedback/Banner.tsx","../src/feedback/EmptyState.tsx","../src/commerce/BuyButton.tsx","../src/commerce/PriceDisplay.tsx","../src/commerce/CheckoutCTA.tsx","../src/commerce/PaymentMethod.tsx","../src/commerce/ReceiptPanel.tsx","../src/Card.tsx"],"sourcesContent":["\"use client\";\n\nimport { createContext, useEffect, useState } from \"react\";\n\nexport type Theme = \"dark\" | \"light\" | \"high-contrast\";\n\ninterface ThemeContextValue {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  systemTheme: Theme;\n}\n\nconst ThemeContext = createContext<ThemeContextValue | undefined>(undefined);\n\nconst STORAGE_KEY = \"gotmusic-theme\";\n\nfunction getSystemTheme(): Theme {\n  if (typeof window === \"undefined\") return \"dark\";\n\n  const darkQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n  const contrastQuery = window.matchMedia(\"(prefers-contrast: more)\");\n\n  if (contrastQuery.matches) return \"high-contrast\";\n  return darkQuery.matches ? \"dark\" : \"light\";\n}\n\nfunction getStoredTheme(): Theme | null {\n  if (typeof window === \"undefined\") return null;\n\n  try {\n    const stored = localStorage.getItem(STORAGE_KEY);\n    if (stored === \"dark\" || stored === \"light\" || stored === \"high-contrast\") {\n      return stored;\n    }\n  } catch {\n    // localStorage access might be blocked\n  }\n\n  return null;\n}\n\nfunction storeTheme(theme: Theme): void {\n  try {\n    localStorage.setItem(STORAGE_KEY, theme);\n  } catch {\n    // localStorage access might be blocked\n  }\n}\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n}\n\nexport function ThemeProvider({ children, defaultTheme = \"dark\" }: ThemeProviderProps) {\n  const [systemTheme, setSystemTheme] = useState<Theme>(() => getSystemTheme());\n  const [theme, setThemeState] = useState<Theme>(() => {\n    const stored = getStoredTheme();\n    return stored ?? defaultTheme;\n  });\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const darkQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    const contrastQuery = window.matchMedia(\"(prefers-contrast: more)\");\n\n    const handleChange = () => {\n      const newSystemTheme = getSystemTheme();\n      setSystemTheme(newSystemTheme);\n    };\n\n    darkQuery.addEventListener(\"change\", handleChange);\n    contrastQuery.addEventListener(\"change\", handleChange);\n\n    return () => {\n      darkQuery.removeEventListener(\"change\", handleChange);\n      contrastQuery.removeEventListener(\"change\", handleChange);\n    };\n  }, []);\n\n  // Apply theme to document\n  useEffect(() => {\n    const root = window.document.documentElement;\n\n    root.classList.remove(\"dark\", \"light\", \"high-contrast\");\n    root.classList.add(theme);\n\n    // Set data attribute for CSS\n    root.setAttribute(\"data-theme\", theme);\n  }, [theme]);\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n    storeTheme(newTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, systemTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = React.useContext(ThemeContext);\n\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n\n  return context;\n}\n\n// Re-export React for the hook\nimport * as React from \"react\";\n","import { Slot as RadixSlot } from \"@radix-ui/react-slot\";\nimport type React from \"react\";\n\ninterface SlotProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * If true, merges props onto the immediate child element instead of rendering a wrapper.\n   * Enables composition patterns like rendering a button as a link.\n   */\n  asChild?: boolean;\n  children: React.ReactNode;\n}\n\n/**\n * Slot component for polymorphic composition\n *\n * Allows components to be rendered as different elements while maintaining their props.\n *\n * @example\n * // Default: renders as span\n * <Slot>Content</Slot>\n *\n * @example\n * // asChild: renders as Link, merges props\n * <Slot asChild>\n *   <Link href=\"/catalog\">Browse</Link>\n * </Slot>\n */\nexport function Slot({ asChild = false, children, ...props }: SlotProps) {\n  const Comp = asChild ? RadixSlot : \"span\";\n  return <Comp {...props}>{children}</Comp>;\n}\n\nexport type { SlotProps };\n","import type * as React from \"react\";\n\ninterface VisuallyHiddenProps {\n  /**\n   * Content to hide visually but keep accessible to screen readers\n   */\n  children: React.ReactNode;\n  /**\n   * HTML element to render (default: span)\n   */\n  as?: keyof React.JSX.IntrinsicElements;\n}\n\n/**\n * VisuallyHidden - Screen reader only content\n *\n * Hides content visually while keeping it accessible to assistive technologies.\n * Uses CSS clip-path technique (not display:none) to ensure screen reader compatibility.\n *\n * @example\n * <button>\n *   <span aria-hidden=\"true\">▶</span>\n *   <VisuallyHidden>Play audio preview</VisuallyHidden>\n * </button>\n *\n * @example\n * // Skip to main content link\n * <VisuallyHidden as=\"a\" href=\"#main\">\n *   Skip to main content\n * </VisuallyHidden>\n */\nexport function VisuallyHidden({ children, as = \"span\" }: VisuallyHiddenProps) {\n  const Comp = as as React.ElementType;\n  return (\n    <Comp\n      style={{\n        position: \"absolute\",\n        width: \"1px\",\n        height: \"1px\",\n        padding: 0,\n        margin: \"-1px\",\n        overflow: \"hidden\",\n        clip: \"rect(0, 0, 0, 0)\",\n        whiteSpace: \"nowrap\",\n        border: 0,\n      }}\n    >\n      {children}\n    </Comp>\n  );\n}\n\nexport type { VisuallyHiddenProps };\n","\"use client\";\n\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport type React from \"react\";\n\ntype Politeness = \"polite\" | \"assertive\";\n\ninterface Announcement {\n  id: string;\n  message: string;\n  politeness: Politeness;\n}\n\ninterface AnnouncerContextValue {\n  announce: (message: string, politeness?: Politeness) => void;\n}\n\nconst AnnouncerContext = createContext<AnnouncerContextValue | undefined>(undefined);\n\ninterface AnnouncerProviderProps {\n  children: React.ReactNode;\n}\n\n/**\n * AnnouncerProvider - Manages live region announcements\n *\n * Provides a singleton announcer for programmatic screen reader announcements.\n * Must be placed near the root of your app.\n *\n * @example\n * <AnnouncerProvider>\n *   <App />\n * </AnnouncerProvider>\n */\nexport function AnnouncerProvider({ children }: AnnouncerProviderProps) {\n  const [announcements, setAnnouncements] = useState<Announcement[]>([]);\n\n  const announce = useCallback((message: string, politeness: Politeness = \"polite\") => {\n    const id = Math.random().toString(36).slice(2, 11);\n    const announcement: Announcement = { id, message, politeness };\n\n    setAnnouncements((prev) => [...prev, announcement]);\n\n    // Clear announcement after it's been read\n    // Screen readers typically read within 1-2 seconds\n    setTimeout(() => {\n      setAnnouncements((prev) => prev.filter((a) => a.id !== id));\n    }, 5000);\n  }, []);\n\n  return (\n    <AnnouncerContext.Provider value={{ announce }}>\n      {children}\n      <LiveRegion announcements={announcements} />\n    </AnnouncerContext.Provider>\n  );\n}\n\ninterface LiveRegionProps {\n  announcements: Announcement[];\n}\n\nfunction LiveRegion({ announcements }: LiveRegionProps) {\n  // Separate announcements by politeness level\n  const politeMessages = announcements.filter((a) => a.politeness === \"polite\");\n  const assertiveMessages = announcements.filter((a) => a.politeness === \"assertive\");\n\n  return (\n    <>\n      {/* Polite announcements - don't interrupt */}\n      {/* biome-ignore lint/a11y/useSemanticElements: Live regions require div with role for proper screen reader support */}\n      <div\n        role=\"status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n        style={{\n          position: \"absolute\",\n          width: \"1px\",\n          height: \"1px\",\n          padding: 0,\n          margin: \"-1px\",\n          overflow: \"hidden\",\n          clip: \"rect(0, 0, 0, 0)\",\n          whiteSpace: \"nowrap\",\n          border: 0,\n        }}\n      >\n        {politeMessages.map((announcement) => (\n          <div key={announcement.id}>{announcement.message}</div>\n        ))}\n      </div>\n\n      {/* Assertive announcements - interrupt current speech */}\n      <div\n        role=\"alert\"\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        style={{\n          position: \"absolute\",\n          width: \"1px\",\n          height: \"1px\",\n          padding: 0,\n          margin: \"-1px\",\n          overflow: \"hidden\",\n          clip: \"rect(0, 0, 0, 0)\",\n          whiteSpace: \"nowrap\",\n          border: 0,\n        }}\n      >\n        {assertiveMessages.map((announcement) => (\n          <div key={announcement.id}>{announcement.message}</div>\n        ))}\n      </div>\n    </>\n  );\n}\n\n/**\n * useAnnouncer - Hook for programmatic announcements\n *\n * @example\n * const { announce } = useAnnouncer();\n *\n * // Polite announcement (doesn't interrupt)\n * announce(\"Loading complete\");\n *\n * // Assertive announcement (interrupts)\n * announce(\"Error: Invalid input\", \"assertive\");\n */\nexport function useAnnouncer() {\n  const context = useContext(AnnouncerContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAnnouncer must be used within an AnnouncerProvider\");\n  }\n\n  return context;\n}\n\ninterface AnnouncerProps {\n  /**\n   * Message to announce\n   */\n  message: string;\n  /**\n   * Politeness level\n   * - \"polite\": Announce when user is idle (default)\n   * - \"assertive\": Interrupt current speech\n   */\n  politeness?: Politeness;\n  /**\n   * Clear announcement after this duration (ms)\n   * Default: 5000ms\n   */\n  clearAfter?: number;\n}\n\n/**\n * Announcer - Declarative live region announcement\n *\n * @example\n * // Polite announcement\n * <Announcer message=\"Loading complete\" />\n *\n * @example\n * // Assertive announcement\n * <Announcer message=\"Error occurred!\" politeness=\"assertive\" />\n *\n * @example\n * // Custom clear duration\n * <Announcer message=\"Saved\" clearAfter={3000} />\n */\nexport function Announcer({ message, politeness = \"polite\", clearAfter = 5000 }: AnnouncerProps) {\n  const { announce } = useAnnouncer();\n\n  useEffect(() => {\n    if (message) {\n      announce(message, politeness);\n    }\n  }, [message, politeness, announce]);\n\n  return null;\n}\n\nexport type { Politeness, AnnouncerProps };\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Utility for merging Tailwind CSS classes\n *\n * Combines clsx for conditional classes with tailwind-merge for proper precedence.\n *\n * @example\n * cn(\"px-2 py-1\", isActive && \"bg-primary\", className)\n * // → \"px-2 py-1 bg-primary <additional-classes>\"\n *\n * @example\n * cn(\"px-2\", \"px-4\") // → \"px-4\" (tailwind-merge handles conflicts)\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import { type VariantProps, cva } from \"class-variance-authority\";\n\n/**\n * CVA (Class Variance Authority) utility for consistent component variants\n *\n * This utility provides a standardized way to create component variants\n * using the GotMusic design token system.\n *\n * Usage:\n * ```tsx\n * const buttonVariants = cva(\"base-classes\", {\n *   variants: {\n *     variant: { primary: \"bg-brand-primary\", secondary: \"bg-bg-elevated\" },\n *     size: { sm: \"h-9\", md: \"h-10\", lg: \"h-11\" }\n *   }\n * });\n * ```\n */\nexport { cva, type VariantProps };\n","import type React from \"react\";\n\nlet idCounter = 0;\n\n/**\n * Generate a unique ID for accessibility attributes\n *\n * Useful for aria-describedby, aria-labelledby, and other ARIA relationships.\n *\n * @param prefix - Optional prefix for the ID\n * @returns A unique ID string\n *\n * @example\n * const hintId = generateId(\"hint\");\n * // → \"hint-1\", \"hint-2\", etc.\n *\n * <input aria-describedby={hintId} />\n * <span id={hintId}>Enter your name</span>\n */\nexport function generateId(prefix = \"a11y\"): string {\n  idCounter += 1;\n  return `${prefix}-${idCounter}`;\n}\n\n/**\n * Merge multiple refs into a single ref callback\n *\n * Allows passing multiple refs to a single element, useful when combining\n * forwarded refs with local refs.\n *\n * @param refs - Array of refs to merge\n * @returns A ref callback that updates all provided refs\n *\n * @example\n * const localRef = useRef<HTMLDivElement>(null);\n * const mergedRef = mergeRefs(localRef, forwardedRef);\n *\n * <div ref={mergedRef}>Content</div>\n */\nexport function mergeRefs<T>(...refs: Array<React.Ref<T> | undefined>): React.RefCallback<T> {\n  return (value: T) => {\n    for (const ref of refs) {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T>).current = value;\n      }\n    }\n  };\n}\n\n/**\n * Check if an element is a valid interactive element\n *\n * @param element - Element to check\n * @returns True if element is interactive (button, link, input, etc.)\n */\nexport function isInteractive(element: HTMLElement): boolean {\n  const interactiveTags = [\"A\", \"BUTTON\", \"INPUT\", \"SELECT\", \"TEXTAREA\"];\n  const hasTabIndex = element.hasAttribute(\"tabindex\");\n  const hasRole = element.hasAttribute(\"role\");\n\n  return (\n    interactiveTags.includes(element.tagName) ||\n    hasTabIndex ||\n    (hasRole &&\n      [\"button\", \"link\", \"checkbox\", \"radio\"].includes(element.getAttribute(\"role\") || \"\"))\n  );\n}\n\n/**\n * Get the computed accessible name of an element\n *\n * @param element - Element to get name for\n * @returns The accessible name string\n */\nexport function getAccessibleName(element: HTMLElement): string {\n  // Check aria-label first\n  const ariaLabel = element.getAttribute(\"aria-label\");\n  if (ariaLabel) return ariaLabel;\n\n  // Check aria-labelledby\n  const labelledBy = element.getAttribute(\"aria-labelledby\");\n  if (labelledBy) {\n    const labelElement = document.getElementById(labelledBy);\n    if (labelElement) return labelElement.textContent || \"\";\n  }\n\n  // For inputs, check associated label\n  if (element instanceof HTMLInputElement) {\n    const id = element.id;\n    if (id) {\n      const label = document.querySelector(`label[for=\"${id}\"]`);\n      if (label) return label.textContent || \"\";\n    }\n  }\n\n  // Fall back to text content\n  return element.textContent || \"\";\n}\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst cardVariants = cva(\"rounded-lg border bg-card text-card-foreground\", {\n  variants: {\n    variant: {\n      default: \"border-border\",\n      elevated: \"border-border shadow-md\",\n      outlined: \"border-border bg-transparent\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n  },\n});\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof cardVariants> {}\n\nconst Card = forwardRef<HTMLDivElement, CardProps>(({ className, variant, ...props }, ref) => (\n  <div ref={ref} className={cn(cardVariants({ variant }), className)} {...props} />\n));\nCard.displayName = \"Card\";\n\nexport { Card, cardVariants };\n","import { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-brand-primary text-brand-primary-foreground hover:bg-brand-primary/90\",\n        secondary: \"bg-bg-muted text-fg hover:bg-bg-muted/80\",\n        ghost: \"hover:bg-bg-muted hover:text-fg\",\n        link: \"text-fg underline-offset-4 hover:underline\",\n      },\n      size: {\n        sm: \"h-9 px-3\",\n        md: \"h-10 px-4 py-2\",\n        lg: \"h-11 px-8\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean;\n  loading?: boolean;\n}\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    { className, variant, size, asChild = false, loading = false, children, disabled, ...props },\n    ref,\n  ) => {\n    const Comp = asChild ? Slot : \"button\";\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        disabled={disabled || loading}\n        aria-busy={loading}\n        {...props}\n      >\n        {loading && (\n          <svg\n            className=\"mr-2 h-4 w-4 animate-spin\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            aria-hidden=\"true\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n        )}\n        {children}\n      </Comp>\n    );\n  },\n);\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n","\"use client\";\n\nimport type * as React from \"react\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface CatalogGridProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof catalogGridVariants> {\n  /**\n   * Number of columns for different screen sizes\n   */\n  columns?: {\n    default?: number;\n    sm?: number;\n    md?: number;\n    lg?: number;\n    xl?: number;\n  };\n  /**\n   * Whether to show loading skeleton\n   */\n  loading?: boolean;\n  /**\n   * Number of skeleton items to show when loading\n   */\n  skeletonCount?: number;\n  /**\n   * Empty state content\n   */\n  emptyState?: React.ReactNode;\n  /**\n   * Whether the grid is scrollable\n   */\n  scrollable?: boolean;\n}\n\nconst catalogGridVariants = cva(\"grid\", {\n  variants: {\n    gap: {\n      sm: \"gap-2\",\n      md: \"gap-4\",\n      lg: \"gap-6\",\n    },\n    scrollable: {\n      true: \"overflow-x-auto\",\n      false: \"\",\n    },\n  },\n  defaultVariants: {\n    gap: \"md\",\n    scrollable: false,\n  },\n});\n\nexport function CatalogGrid({\n  children,\n  columns = { default: 1, sm: 2, md: 3, lg: 4 },\n  gap,\n  loading = false,\n  skeletonCount = 6,\n  emptyState,\n  scrollable,\n  className,\n  ...props\n}: CatalogGridProps) {\n  const gridClasses = cn(\n    catalogGridVariants({ gap, scrollable }),\n    // Responsive columns\n    columns.default && `grid-cols-${columns.default}`,\n    columns.sm && `sm:grid-cols-${columns.sm}`,\n    columns.md && `md:grid-cols-${columns.md}`,\n    columns.lg && `lg:grid-cols-${columns.lg}`,\n    columns.xl && `xl:grid-cols-${columns.xl}`,\n    className,\n  );\n\n  if (loading) {\n    return (\n      <div className={gridClasses} {...props}>\n        {Array.from({ length: skeletonCount }, (_, i) => (\n          <div\n            key={`skeleton-item-${i + 1}`}\n            className=\"animate-pulse rounded-lg border bg-bg-muted/20 h-32\"\n            data-testid=\"catalog-grid-skeleton\"\n          />\n        ))}\n      </div>\n    );\n  }\n\n  if (emptyState) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-12 text-center\">\n        {emptyState}\n      </div>\n    );\n  }\n\n  return (\n    <div className={gridClasses} {...props}>\n      {children}\n    </div>\n  );\n}\n\n// Skeleton component for loading states\nexport function CatalogGridSkeleton({\n  count = 6,\n  className,\n}: {\n  count?: number;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\", className)}>\n      {Array.from({ length: count }, (_, i) => (\n        <div\n          key={`empty-skeleton-${i + 1}`}\n          className=\"animate-pulse rounded-lg border bg-bg-muted/20 h-32\"\n          data-testid=\"catalog-grid-skeleton\"\n        />\n      ))}\n    </div>\n  );\n}\n\n// Empty state component\nexport function CatalogGridEmpty({\n  title = \"No items found\",\n  description = \"Try adjusting your filters or search terms.\",\n  action,\n  className,\n}: {\n  title?: string;\n  description?: string;\n  action?: React.ReactNode;\n  className?: string;\n}) {\n  return (\n    <div className={cn(\"flex flex-col items-center justify-center py-12 text-center\", className)}>\n      <div className=\"w-16 h-16 rounded-full bg-bg-muted/20 flex items-center justify-center mb-4\">\n        <svg\n          className=\"w-8 h-8 text-fg-muted\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          role=\"img\"\n          aria-label=\"No items found icon\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.29-1.009-5.824-2.709\"\n          />\n        </svg>\n      </div>\n      <h3 className=\"text-lg font-semibold text-fg-default mb-2\">{title}</h3>\n      <p className=\"text-fg-muted mb-4 max-w-sm\">{description}</p>\n      {action}\n    </div>\n  );\n}\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        success: \"border-transparent bg-green-500 text-white\",\n        warning: \"border-transparent bg-yellow-500 text-white\",\n        danger: \"border-transparent bg-red-500 text-white\",\n        info: \"border-transparent bg-blue-500 text-white\",\n        neutral: \"border-transparent bg-gray-500 text-white\",\n      },\n    },\n    defaultVariants: {\n      variant: \"neutral\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nconst Badge = forwardRef<HTMLDivElement, BadgeProps>(({ className, variant, ...props }, ref) => (\n  <div ref={ref} className={cn(badgeVariants({ variant }), className)} {...props} />\n));\nBadge.displayName = \"Badge\";\n\nexport { Badge, badgeVariants };\n","import { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nexport interface TagProps extends React.HTMLAttributes<HTMLDivElement> {\n  onClose?: () => void;\n}\n\nconst Tag = forwardRef<HTMLDivElement, TagProps>(\n  ({ className, children, onClose, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"inline-flex items-center gap-1 rounded-full bg-fg/10 px-2 py-1 text-sm text-fg/80 hover:bg-fg/20\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      {onClose && (\n        <button\n          type=\"button\"\n          onClick={onClose}\n          className=\"ml-1 h-4 w-4 rounded-full hover:bg-fg/30 focus:outline-none focus:ring-1 focus:ring-fg/50\"\n          aria-label=\"Remove tag\"\n        >\n          <svg\n            className=\"h-3 w-3\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n            aria-hidden=\"true\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          </svg>\n        </button>\n      )}\n    </div>\n  ),\n);\nTag.displayName = \"Tag\";\n\nexport { Tag };\n","\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nexport interface WaveformProps extends React.HTMLAttributes<HTMLDivElement> {\n  data?: number[];\n  bins?: number;\n}\n\n// Generate realistic mock waveform data (64 bins)\nconst MOCK_BINS = Array.from({ length: 64 }, (_, i) => {\n  // Create a natural-looking waveform with peaks and valleys\n  const phase = (i / 64) * Math.PI * 2;\n  const base = Math.sin(phase) * 0.3 + 0.5;\n  const noise = Math.random() * 0.2;\n  return Math.min(1, Math.max(0.15, base + noise));\n});\n\nconst Waveform = forwardRef<HTMLDivElement, WaveformProps>(\n  ({ className, data, bins = 64, ...props }, ref) => {\n    // Use provided data or fall back to mock\n    const waveformData = data && data.length > 0 ? data : MOCK_BINS;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\"flex items-end gap-0.5 h-16 w-full\", className)}\n        role=\"img\"\n        aria-label=\"Audio waveform visualization\"\n        {...props}\n      >\n        {waveformData.slice(0, bins).map((value, index) => (\n          <div\n            key={`waveform-${\n              // biome-ignore lint/suspicious/noArrayIndexKey: static waveform data\n              index\n            }`}\n            className={cn(\n              \"flex-1 min-h-[15%] rounded-sm transition-all duration-150\",\n              \"bg-[var(--audio-waveform-fill,rgba(230,234,242,0.9))]\",\n              \"hover:bg-[var(--color-brand-accent,#5BD0FF)]\",\n            )}\n            style={{\n              height: `${Math.max(15, value * 100)}%`,\n            }}\n            aria-hidden=\"true\"\n          />\n        ))}\n      </div>\n    );\n  },\n);\n\nWaveform.displayName = \"Waveform\";\n\nexport { Waveform };\n","\"use client\";\n\nimport { forwardRef, useEffect, useRef, useState } from \"react\";\nimport { Download, Pause, Play, Spinner, Volume } from \"../icons\";\nimport { cn } from \"../utils\";\n\nexport interface PlayerProps extends React.HTMLAttributes<HTMLDivElement> {\n  src: string;\n  title: string;\n  clamp?: number; // 30 for preview, undefined for full\n  onEnd?: () => void;\n  showDownload?: boolean;\n}\n\nconst Player = forwardRef<HTMLDivElement, PlayerProps>(\n  ({ className, src, title, clamp, onEnd, showDownload = false, ...props }, ref) => {\n    const audioRef = useRef<HTMLAudioElement>(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const [volume, setVolume] = useState(1);\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Handle time updates\n    useEffect(() => {\n      const audio = audioRef.current;\n      if (!audio) return;\n\n      const handleTimeUpdate = () => {\n        const time = audio.currentTime;\n        setCurrentTime(time);\n\n        // Check clamp limit\n        if (clamp && time >= clamp) {\n          audio.pause();\n          setIsPlaying(false);\n          onEnd?.();\n        }\n      };\n\n      const handleLoadedMetadata = () => {\n        setDuration(audio.duration);\n        setIsLoading(false);\n      };\n\n      const handleEnded = () => {\n        setIsPlaying(false);\n        onEnd?.();\n      };\n\n      const handleLoadStart = () => {\n        setIsLoading(true);\n      };\n\n      audio.addEventListener(\"timeupdate\", handleTimeUpdate);\n      audio.addEventListener(\"loadedmetadata\", handleLoadedMetadata);\n      audio.addEventListener(\"ended\", handleEnded);\n      audio.addEventListener(\"loadstart\", handleLoadStart);\n\n      return () => {\n        audio.removeEventListener(\"timeupdate\", handleTimeUpdate);\n        audio.removeEventListener(\"loadedmetadata\", handleLoadedMetadata);\n        audio.removeEventListener(\"ended\", handleEnded);\n        audio.removeEventListener(\"loadstart\", handleLoadStart);\n      };\n    }, [clamp, onEnd]);\n\n    // Handle play/pause\n    const togglePlay = async () => {\n      const audio = audioRef.current;\n      if (!audio) return;\n\n      if (isPlaying) {\n        audio.pause();\n        setIsPlaying(false);\n      } else {\n        try {\n          await audio.play();\n          setIsPlaying(true);\n        } catch (error) {\n          console.error(\"Playback failed:\", error);\n        }\n      }\n    };\n\n    // Handle seek (only in full mode)\n    const handleSeek = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const audio = audioRef.current;\n      if (!audio || clamp) return; // No seeking in preview mode\n\n      const newTime = Number.parseFloat(e.target.value);\n      audio.currentTime = newTime;\n      setCurrentTime(newTime);\n    };\n\n    // Handle volume change\n    const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const audio = audioRef.current;\n      if (!audio) return;\n\n      const newVolume = Number.parseFloat(e.target.value);\n      audio.volume = newVolume;\n      setVolume(newVolume);\n    };\n\n    // Handle keyboard\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (e.code === \"Space\") {\n        e.preventDefault();\n        togglePlay();\n      }\n    };\n\n    const formatTime = (seconds: number) => {\n      const mins = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n    };\n\n    const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n\n    return (\n      <section\n        ref={ref}\n        className={cn(\n          \"flex flex-col gap-3 p-4\",\n          \"bg-[var(--color-bg-elevated,#121520)]\",\n          \"border border-[var(--border-subtle,rgba(255,255,255,0.10))]\",\n          \"rounded-[var(--radius-lg,16px)]\",\n          \"shadow-[var(--shadow-2,0_8px_32px_0_rgba(0,0,0,0.35))]\",\n          className,\n        )}\n        aria-label={`Audio player for ${title}`}\n        {...props}\n      >\n        {/* Hidden audio element */}\n        <audio ref={audioRef} src={src} preload=\"metadata\">\n          <track kind=\"captions\" src=\"\" label=\"No captions available\" />\n        </audio>\n\n        {/* Play/Pause Button */}\n        <div className=\"flex items-center gap-3\">\n          <button\n            type=\"button\"\n            onClick={togglePlay}\n            disabled={isLoading}\n            className={cn(\n              \"flex items-center justify-center w-10 h-10\",\n              \"rounded-full bg-[var(--color-brand-primary,#6AE6A6)]\",\n              \"text-[var(--color-fg-inverse,#0B0D12)]\",\n              \"hover:bg-[var(--color-brand-primary-hover,#5ADFA0)]\",\n              \"active:scale-95\",\n              \"disabled:opacity-50 disabled:cursor-not-allowed\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n              \"transition-all duration-150\",\n            )}\n            aria-label={isPlaying ? `Pause ${title}` : `Play ${title}`}\n            aria-pressed={isPlaying}\n          >\n            {isLoading ? (\n              <Spinner className=\"w-5 h-5 animate-spin\" aria-hidden=\"true\" />\n            ) : isPlaying ? (\n              <Pause className=\"w-5 h-5\" aria-hidden=\"true\" />\n            ) : (\n              <Play className=\"w-5 h-5\" aria-hidden=\"true\" />\n            )}\n          </button>\n\n          {/* Time Display */}\n          <div className=\"flex items-center gap-2 text-sm text-[var(--color-fg-muted,#A9B1C1)]\">\n            <span aria-label={`Current time: ${formatTime(currentTime)}`}>\n              {formatTime(currentTime)}\n            </span>\n            <span aria-hidden=\"true\">/</span>\n            <span\n              aria-label={`Duration: ${formatTime(clamp ? Math.min(clamp, duration) : duration)}`}\n            >\n              {formatTime(clamp ? Math.min(clamp, duration) : duration)}\n            </span>\n          </div>\n\n          {/* Download Button (optional) */}\n          {showDownload && !clamp && (\n            <a\n              href={src}\n              download={title}\n              className={cn(\n                \"ml-auto p-2\",\n                \"text-[var(--color-fg-muted,#A9B1C1)]\",\n                \"hover:text-[var(--color-fg,#E6EAF2)]\",\n                \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                \"rounded-[var(--radius-sm,8px)]\",\n                \"transition-colors duration-150\",\n              )}\n              aria-label={`Download ${title}`}\n            >\n              <Download className=\"w-4 h-4\" aria-hidden=\"true\" />\n            </a>\n          )}\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max={clamp ? clamp : duration}\n            value={currentTime}\n            onChange={handleSeek}\n            disabled={!!clamp} // No seeking in preview mode\n            className={cn(\n              \"flex-1 h-2 rounded-lg appearance-none cursor-pointer\",\n              \"bg-[var(--color-bg-muted,#0F131B)]\",\n              \"disabled:cursor-not-allowed disabled:opacity-50\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n            )}\n            role=\"progressbar\"\n            aria-valuenow={currentTime}\n            aria-valuemin={0}\n            aria-valuemax={clamp ? clamp : duration}\n            aria-label=\"Audio progress\"\n          />\n        </div>\n\n        {/* Volume Control (hidden on mobile) */}\n        <div className=\"hidden sm:flex items-center gap-2\">\n          <Volume className=\"w-4 h-4 text-[var(--color-fg-muted,#A9B1C1)]\" aria-hidden=\"true\" />\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.1\"\n            value={volume}\n            onChange={handleVolumeChange}\n            className={cn(\n              \"w-20 h-2 rounded-lg appearance-none cursor-pointer\",\n              \"bg-[var(--color-bg-muted,#0F131B)]\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n            )}\n            aria-label=\"Volume\"\n            aria-valuenow={Math.round(volume * 100)}\n            aria-valuemin={0}\n            aria-valuemax={100}\n          />\n        </div>\n      </section>\n    );\n  },\n);\n\nPlayer.displayName = \"Player\";\n\nexport { Player };\n","// Re-export lucide-react icons with consistent naming\nexport {\n  Play,\n  Pause,\n  ChevronRight,\n  ChevronDown,\n  Tag as TagIcon,\n  Music,\n  Download,\n  Loader2 as Spinner,\n  Volume2 as Volume,\n  VolumeX as VolumeMute,\n  VolumeX,\n  SkipBack,\n  SkipForward,\n  Check,\n  CheckCircle,\n  CreditCard,\n  Lock,\n  ShoppingCart,\n  X,\n  XCircle,\n  ArrowRight,\n  Star,\n  Wallet,\n  ExternalLink,\n  Upload,\n  AlertCircle,\n  AlertTriangle,\n  File,\n  Clock,\n  Info,\n  Archive,\n  Copy,\n  Edit,\n  Globe,\n  MoreHorizontal,\n  MoreVertical,\n  Trash2,\n  Archive as Unarchive,\n  Save,\n} from \"lucide-react\";\n\n// Placeholder exports for custom SVGR icons (to be implemented)\n// These will be replaced with actual SVG components later\nexport { Play as Wave } from \"lucide-react\";\nexport { Activity as Bpm } from \"lucide-react\";\nexport { Music2 as KeySig } from \"lucide-react\";\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport { Pause, Play, Volume, VolumeX } from \"../icons\";\nimport { cn } from \"../utils\";\n\nexport interface MiniPlayerProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onVolumeChange\"> {\n  src: string;\n  title: string;\n  artist?: string;\n  coverUrl?: string;\n  isPlaying?: boolean;\n  currentTime?: number;\n  duration?: number;\n  volume?: number;\n  isMuted?: boolean;\n  isExpanded?: boolean;\n  isDocked?: boolean;\n  onPlayPause?: () => void;\n  onSeek?: (time: number) => void;\n  onVolumeChange?: (volume: number) => void;\n  onToggleMute?: () => void;\n  onToggleExpand?: () => void;\n  onClose?: () => void;\n}\n\nconst MiniPlayer = forwardRef<HTMLDivElement, MiniPlayerProps>(\n  (\n    {\n      className,\n      src,\n      title,\n      artist,\n      coverUrl,\n      isPlaying = false,\n      currentTime = 0,\n      duration = 0,\n      volume = 0.8,\n      isMuted = false,\n      isExpanded = false,\n      isDocked = false,\n      onPlayPause,\n      onSeek,\n      onVolumeChange,\n      onToggleMute,\n      onToggleExpand,\n      onClose,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isHovered, setIsHovered] = useState(false);\n\n    const formatTime = (seconds: number) => {\n      const mins = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n    };\n\n    const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center gap-3 p-3\",\n          \"bg-[var(--color-bg-elevated,#121520)]\",\n          \"border border-[var(--border-subtle,rgba(255,255,255,0.10))]\",\n          \"rounded-[var(--radius-lg,16px)]\",\n          \"shadow-[var(--shadow-2,0_8px_32px_0_rgba(0,0,0,0.35))]\",\n          \"transition-all duration-300\",\n          isDocked && \"fixed bottom-4 left-4 right-4 z-50\",\n          isExpanded && \"w-full\",\n          !isExpanded && \"w-80\",\n          className,\n        )}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        aria-label={`Mini player for ${title}`}\n        {...props}\n      >\n        {/* Cover Art */}\n        {coverUrl && (\n          <div className=\"flex-shrink-0 w-12 h-12 rounded-lg overflow-hidden\">\n            <img src={coverUrl} alt={`${title} cover`} className=\"w-full h-full object-cover\" />\n          </div>\n        )}\n\n        {/* Track Info */}\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center gap-2\">\n            <h4 className=\"text-sm font-medium text-[var(--color-fg,#E6EAF2)] truncate\">{title}</h4>\n            {onClose && (\n              <button\n                type=\"button\"\n                onClick={onClose}\n                className=\"flex-shrink-0 p-1 text-[var(--color-fg-muted,#A9B1C1)] hover:text-[var(--color-fg,#E6EAF2)]\"\n                aria-label=\"Close mini player\"\n              >\n                ×\n              </button>\n            )}\n          </div>\n          {artist && (\n            <p className=\"text-xs text-[var(--color-fg-muted,#A9B1C1)] truncate\">{artist}</p>\n          )}\n        </div>\n\n        {/* Controls */}\n        <div className=\"flex items-center gap-2\">\n          {/* Play/Pause Button */}\n          <button\n            type=\"button\"\n            onClick={onPlayPause}\n            className={cn(\n              \"flex items-center justify-center w-8 h-8\",\n              \"rounded-full bg-[var(--color-brand-primary,#6AE6A6)]\",\n              \"text-[var(--color-fg-inverse,#0B0D12)]\",\n              \"hover:bg-[var(--color-brand-primary-hover,#5ADFA0)]\",\n              \"active:scale-95\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n              \"transition-all duration-150\",\n            )}\n            aria-label={isPlaying ? \"Pause\" : \"Play\"}\n            aria-pressed={isPlaying}\n          >\n            {isPlaying ? (\n              <Pause className=\"w-4 h-4\" aria-hidden=\"true\" />\n            ) : (\n              <Play className=\"w-4 h-4\" aria-hidden=\"true\" />\n            )}\n          </button>\n\n          {/* Volume Control (expanded only) */}\n          {isExpanded && (\n            <div className=\"flex items-center gap-1\">\n              <button\n                type=\"button\"\n                onClick={onToggleMute}\n                className=\"p-1 text-[var(--color-fg-muted,#A9B1C1)] hover:text-[var(--color-fg,#E6EAF2)]\"\n                aria-label={isMuted ? \"Unmute\" : \"Mute\"}\n              >\n                {isMuted ? (\n                  <VolumeX className=\"w-4 h-4\" aria-hidden=\"true\" />\n                ) : (\n                  <Volume className=\"w-4 h-4\" aria-hidden=\"true\" />\n                )}\n              </button>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                value={isMuted ? 0 : volume}\n                onChange={(e) => onVolumeChange?.(Number.parseFloat(e.target.value))}\n                className={cn(\n                  \"w-16 h-1 rounded-lg appearance-none cursor-pointer\",\n                  \"bg-[var(--color-bg-muted,#0F131B)]\",\n                  \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                )}\n                aria-label=\"Volume\"\n              />\n            </div>\n          )}\n\n          {/* Expand/Collapse Button */}\n          {onToggleExpand && (\n            <button\n              type=\"button\"\n              onClick={onToggleExpand}\n              className=\"p-1 text-[var(--color-fg-muted,#A9B1C1)] hover:text-[var(--color-fg,#E6EAF2)]\"\n              aria-label={isExpanded ? \"Collapse\" : \"Expand\"}\n            >\n              <div\n                className={cn(\n                  \"w-4 h-4 transition-transform duration-200\",\n                  isExpanded ? \"rotate-180\" : \"rotate-0\",\n                )}\n                aria-hidden=\"true\"\n              >\n                ▲\n              </div>\n            </button>\n          )}\n        </div>\n\n        {/* Progress Bar (expanded only) */}\n        {isExpanded && (\n          <div className=\"absolute bottom-0 left-0 right-0 p-3 pt-0\">\n            <div className=\"flex items-center gap-2 text-xs text-[var(--color-fg-muted,#A9B1C1)]\">\n              <span>{formatTime(currentTime)}</span>\n              <div className=\"flex-1 h-1 bg-[var(--color-bg-muted,#0F131B)] rounded-lg overflow-hidden\">\n                <div\n                  className=\"h-full bg-[var(--color-brand-primary,#6AE6A6)] transition-all duration-150\"\n                  style={{ width: `${progress}%` }}\n                />\n              </div>\n              <span>{formatTime(duration)}</span>\n            </div>\n          </div>\n        )}\n\n        {/* Seek Bar (expanded only) */}\n        {isExpanded && onSeek && (\n          <div className=\"absolute bottom-0 left-0 right-0 p-3 pt-0\">\n            <input\n              type=\"range\"\n              min=\"0\"\n              max={duration}\n              value={currentTime}\n              onChange={(e) => onSeek(Number.parseFloat(e.target.value))}\n              className={cn(\n                \"w-full h-1 rounded-lg appearance-none cursor-pointer\",\n                \"bg-[var(--color-bg-muted,#0F131B)]\",\n                \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n              )}\n              aria-label=\"Seek\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nMiniPlayer.displayName = \"MiniPlayer\";\n\nexport { MiniPlayer };\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport { Download, Pause, Play, SkipBack, SkipForward, Volume, VolumeX } from \"../icons\";\nimport { cn } from \"../utils\";\n\nexport interface PlayerControlsProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onVolumeChange\"> {\n  isPlaying?: boolean;\n  currentTime?: number;\n  duration?: number;\n  volume?: number;\n  playbackRate?: number;\n  isMuted?: boolean;\n  isLoading?: boolean;\n  hasError?: boolean;\n  showDownload?: boolean;\n  showSkip?: boolean;\n  showSpeed?: boolean;\n  onPlayPause?: () => void;\n  onSeek?: (time: number) => void;\n  onVolumeChange?: (volume: number) => void;\n  onToggleMute?: () => void;\n  onSkipBack?: () => void;\n  onSkipForward?: () => void;\n  onSpeedChange?: (rate: number) => void;\n  onDownload?: () => void;\n}\n\nconst SPEED_OPTIONS = [0.5, 0.75, 1, 1.25, 1.5, 2];\n\nconst PlayerControls = forwardRef<HTMLDivElement, PlayerControlsProps>(\n  (\n    {\n      className,\n      isPlaying = false,\n      currentTime = 0,\n      duration = 0,\n      volume = 0.8,\n      playbackRate = 1,\n      isMuted = false,\n      isLoading = false,\n      hasError = false,\n      showDownload = false,\n      showSkip = false,\n      showSpeed = false,\n      onPlayPause,\n      onSeek,\n      onVolumeChange,\n      onToggleMute,\n      onSkipBack,\n      onSkipForward,\n      onSpeedChange,\n      onDownload,\n      ...props\n    },\n    ref,\n  ) => {\n    const [showSpeedMenu, setShowSpeedMenu] = useState(false);\n\n    const formatTime = (seconds: number) => {\n      const mins = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n    };\n\n    const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n\n    const handleSeek = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newTime = Number.parseFloat(e.target.value);\n      onSeek?.(newTime);\n    };\n\n    const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newVolume = Number.parseFloat(e.target.value);\n      onVolumeChange?.(newVolume);\n    };\n\n    const handleSpeedChange = (rate: number) => {\n      onSpeedChange?.(rate);\n      setShowSpeedMenu(false);\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex flex-col gap-3 p-4\",\n          \"bg-[var(--color-bg-elevated,#121520)]\",\n          \"border border-[var(--border-subtle,rgba(255,255,255,0.10))]\",\n          \"rounded-[var(--radius-lg,16px)]\",\n          \"shadow-[var(--shadow-2,0_8px_32px_0_rgba(0,0,0,0.35))]\",\n          className,\n        )}\n        aria-label=\"Player controls\"\n        {...props}\n      >\n        {/* Main Controls Row */}\n        <div className=\"flex items-center justify-between\">\n          {/* Left Controls */}\n          <div className=\"flex items-center gap-2\">\n            {showSkip && (\n              <button\n                type=\"button\"\n                onClick={onSkipBack}\n                disabled={isLoading}\n                className={cn(\n                  \"flex items-center justify-center w-8 h-8\",\n                  \"rounded-full bg-[var(--color-bg-muted,#0F131B)]\",\n                  \"text-[var(--color-fg-muted,#A9B1C1)]\",\n                  \"hover:bg-[var(--color-bg-hover,#1A1F2E)]\",\n                  \"hover:text-[var(--color-fg,#E6EAF2)]\",\n                  \"active:scale-95\",\n                  \"disabled:opacity-50 disabled:cursor-not-allowed\",\n                  \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                  \"transition-all duration-150\",\n                )}\n                aria-label=\"Skip back 10 seconds\"\n              >\n                <SkipBack className=\"w-4 h-4\" aria-hidden=\"true\" />\n              </button>\n            )}\n\n            {/* Play/Pause Button */}\n            <button\n              type=\"button\"\n              onClick={onPlayPause}\n              disabled={isLoading || hasError}\n              className={cn(\n                \"flex items-center justify-center w-12 h-12\",\n                \"rounded-full bg-[var(--color-brand-primary,#6AE6A6)]\",\n                \"text-[var(--color-fg-inverse,#0B0D12)]\",\n                \"hover:bg-[var(--color-brand-primary-hover,#5ADFA0)]\",\n                \"active:scale-95\",\n                \"disabled:opacity-50 disabled:cursor-not-allowed\",\n                \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                \"transition-all duration-150\",\n              )}\n              aria-label={isPlaying ? \"Pause\" : \"Play\"}\n              aria-pressed={isPlaying}\n            >\n              {isLoading ? (\n                <div className=\"w-6 h-6 animate-spin\" aria-hidden=\"true\">\n                  ⟳\n                </div>\n              ) : isPlaying ? (\n                <Pause className=\"w-6 h-6\" aria-hidden=\"true\" />\n              ) : (\n                <Play className=\"w-6 h-6\" aria-hidden=\"true\" />\n              )}\n            </button>\n\n            {showSkip && (\n              <button\n                type=\"button\"\n                onClick={onSkipForward}\n                disabled={isLoading}\n                className={cn(\n                  \"flex items-center justify-center w-8 h-8\",\n                  \"rounded-full bg-[var(--color-bg-muted,#0F131B)]\",\n                  \"text-[var(--color-fg-muted,#A9B1C1)]\",\n                  \"hover:bg-[var(--color-bg-hover,#1A1F2E)]\",\n                  \"hover:text-[var(--color-fg,#E6EAF2)]\",\n                  \"active:scale-95\",\n                  \"disabled:opacity-50 disabled:cursor-not-allowed\",\n                  \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                  \"transition-all duration-150\",\n                )}\n                aria-label=\"Skip forward 10 seconds\"\n              >\n                <SkipForward className=\"w-4 h-4\" aria-hidden=\"true\" />\n              </button>\n            )}\n          </div>\n\n          {/* Center - Time Display */}\n          <div className=\"flex items-center gap-2 text-sm text-[var(--color-fg-muted,#A9B1C1)]\">\n            <span aria-label={`Current time: ${formatTime(currentTime)}`}>\n              {formatTime(currentTime)}\n            </span>\n            <span aria-hidden=\"true\">/</span>\n            <span aria-label={`Duration: ${formatTime(duration)}`}>{formatTime(duration)}</span>\n          </div>\n\n          {/* Right Controls */}\n          <div className=\"flex items-center gap-2\">\n            {/* Speed Control */}\n            {showSpeed && (\n              <div className=\"relative\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowSpeedMenu(!showSpeedMenu)}\n                  className={cn(\n                    \"px-3 py-1 text-sm\",\n                    \"bg-[var(--color-bg-muted,#0F131B)]\",\n                    \"text-[var(--color-fg-muted,#A9B1C1)]\",\n                    \"hover:bg-[var(--color-bg-hover,#1A1F2E)]\",\n                    \"hover:text-[var(--color-fg,#E6EAF2)]\",\n                    \"rounded-[var(--radius-sm,8px)]\",\n                    \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                    \"transition-all duration-150\",\n                  )}\n                  aria-label=\"Playback speed\"\n                  aria-expanded={showSpeedMenu}\n                >\n                  {playbackRate}x\n                </button>\n                {showSpeedMenu && (\n                  <div className=\"absolute bottom-full right-0 mb-2 p-2 bg-[var(--color-bg-elevated,#121520)] border border-[var(--border-subtle,rgba(255,255,255,0.10))] rounded-lg shadow-lg z-10\">\n                    {SPEED_OPTIONS.map((rate) => (\n                      <button\n                        key={rate}\n                        type=\"button\"\n                        onClick={() => handleSpeedChange(rate)}\n                        className={cn(\n                          \"block w-full px-3 py-1 text-sm text-left\",\n                          \"hover:bg-[var(--color-bg-hover,#1A1F2E)]\",\n                          \"rounded-[var(--radius-sm,8px)]\",\n                          \"transition-colors duration-150\",\n                          rate === playbackRate &&\n                            \"bg-[var(--color-brand-primary,#6AE6A6)] text-[var(--color-fg-inverse,#0B0D12)]\",\n                        )}\n                      >\n                        {rate}x\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            )}\n\n            {/* Download Button */}\n            {showDownload && (\n              <button\n                type=\"button\"\n                onClick={onDownload}\n                className={cn(\n                  \"flex items-center justify-center w-8 h-8\",\n                  \"rounded-full bg-[var(--color-bg-muted,#0F131B)]\",\n                  \"text-[var(--color-fg-muted,#A9B1C1)]\",\n                  \"hover:bg-[var(--color-bg-hover,#1A1F2E)]\",\n                  \"hover:text-[var(--color-fg,#E6EAF2)]\",\n                  \"active:scale-95\",\n                  \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n                  \"transition-all duration-150\",\n                )}\n                aria-label=\"Download\"\n              >\n                <Download className=\"w-4 h-4\" aria-hidden=\"true\" />\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"flex items-center gap-2\">\n          <input\n            type=\"range\"\n            min=\"0\"\n            max={duration}\n            value={currentTime}\n            onChange={handleSeek}\n            disabled={isLoading || hasError}\n            className={cn(\n              \"flex-1 h-2 rounded-lg appearance-none cursor-pointer\",\n              \"bg-[var(--color-bg-muted,#0F131B)]\",\n              \"disabled:cursor-not-allowed disabled:opacity-50\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n            )}\n            role=\"progressbar\"\n            aria-valuenow={currentTime}\n            aria-valuemin={0}\n            aria-valuemax={duration}\n            aria-label=\"Audio progress\"\n          />\n        </div>\n\n        {/* Volume Control */}\n        <div className=\"flex items-center gap-2\">\n          <button\n            type=\"button\"\n            onClick={onToggleMute}\n            className={cn(\n              \"flex items-center justify-center w-8 h-8\",\n              \"rounded-full bg-[var(--color-bg-muted,#0F131B)]\",\n              \"text-[var(--color-fg-muted,#A9B1C1)]\",\n              \"hover:bg-[var(--color-bg-hover,#1A1F2E)]\",\n              \"hover:text-[var(--color-fg,#E6EAF2)]\",\n              \"active:scale-95\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n              \"transition-all duration-150\",\n            )}\n            aria-label={isMuted ? \"Unmute\" : \"Mute\"}\n          >\n            {isMuted ? (\n              <VolumeX className=\"w-4 h-4\" aria-hidden=\"true\" />\n            ) : (\n              <Volume className=\"w-4 h-4\" aria-hidden=\"true\" />\n            )}\n          </button>\n          <input\n            type=\"range\"\n            min=\"0\"\n            max=\"1\"\n            step=\"0.1\"\n            value={isMuted ? 0 : volume}\n            onChange={handleVolumeChange}\n            className={cn(\n              \"w-24 h-2 rounded-lg appearance-none cursor-pointer\",\n              \"bg-[var(--color-bg-muted,#0F131B)]\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-[var(--color-brand-accent,#5BD0FF)]\",\n            )}\n            aria-label=\"Volume\"\n            aria-valuenow={Math.round((isMuted ? 0 : volume) * 100)}\n            aria-valuemin={0}\n            aria-valuemax={100}\n          />\n          <span className=\"text-xs text-[var(--color-fg-muted,#A9B1C1)] w-8\">\n            {Math.round((isMuted ? 0 : volume) * 100)}%\n          </span>\n        </div>\n\n        {/* Error State */}\n        {hasError && (\n          <div className=\"text-sm text-[var(--color-destructive,#FF6B6B)] text-center\">\n            Failed to load audio. Please try again.\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nPlayerControls.displayName = \"PlayerControls\";\n\nexport { PlayerControls };\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport { cn } from \"../utils\";\n\nexport interface ProgressBarProps extends React.HTMLAttributes<HTMLDivElement> {\n  currentTime?: number;\n  duration?: number;\n  bufferedTime?: number;\n  isLoading?: boolean;\n  isBuffering?: boolean;\n  hasError?: boolean;\n  isInteractive?: boolean;\n  showTime?: boolean;\n  showBuffered?: boolean;\n  onSeek?: (time: number) => void;\n  onHover?: (time: number) => void;\n  onLeave?: () => void;\n}\n\nconst ProgressBar = forwardRef<HTMLDivElement, ProgressBarProps>(\n  (\n    {\n      className,\n      currentTime = 0,\n      duration = 0,\n      bufferedTime = 0,\n      isLoading = false,\n      isBuffering = false,\n      hasError = false,\n      isInteractive = true,\n      showTime = true,\n      showBuffered = true,\n      onSeek,\n      onHover,\n      onLeave,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isHovered, setIsHovered] = useState(false);\n    const [hoverTime, setHoverTime] = useState(0);\n\n    const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n    const bufferedProgress = duration > 0 ? (bufferedTime / duration) * 100 : 0;\n\n    const formatTime = (seconds: number) => {\n      const mins = Math.floor(seconds / 60);\n      const secs = Math.floor(seconds % 60);\n      return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n    };\n\n    const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (!isInteractive) return;\n\n      const rect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const percentage = x / rect.width;\n      const time = percentage * duration;\n      setHoverTime(time);\n      onHover?.(time);\n    };\n\n    const handleMouseLeave = () => {\n      setIsHovered(false);\n      setHoverTime(0);\n      onLeave?.();\n    };\n\n    const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (!isInteractive || !onSeek) return;\n\n      const rect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const percentage = x / rect.width;\n      const time = percentage * duration;\n      onSeek(time);\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (!isInteractive || !onSeek) return;\n\n      const step = duration * 0.05; // 5% step\n      let newTime = currentTime;\n\n      switch (e.key) {\n        case \"ArrowLeft\":\n          e.preventDefault();\n          newTime = Math.max(0, currentTime - step);\n          onSeek(newTime);\n          break;\n        case \"ArrowRight\":\n          e.preventDefault();\n          newTime = Math.min(duration, currentTime + step);\n          onSeek(newTime);\n          break;\n        case \"Home\":\n          e.preventDefault();\n          onSeek(0);\n          break;\n        case \"End\":\n          e.preventDefault();\n          onSeek(duration);\n          break;\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\"flex flex-col gap-2\", \"w-full\", className)}\n        aria-label=\"Audio progress\"\n        {...props}\n      >\n        {/* Time Display */}\n        {showTime && (\n          <div className=\"flex justify-between text-xs text-[var(--color-fg-muted,#A9B1C1)]\">\n            <span aria-label={`Current time: ${formatTime(currentTime)}`}>\n              {formatTime(currentTime)}\n            </span>\n            <span aria-label={`Duration: ${formatTime(duration)}`}>{formatTime(duration)}</span>\n          </div>\n        )}\n\n        {/* Progress Bar Container */}\n        <div className=\"relative\">\n          {/* Background Track */}\n          <div\n            className={cn(\n              \"w-full h-2 rounded-lg overflow-hidden\",\n              \"bg-[var(--color-bg-muted,#0F131B)]\",\n              \"relative\",\n            )}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n            onClick={handleClick}\n            onKeyDown={handleKeyDown}\n            tabIndex={isInteractive ? 0 : -1}\n            role={isInteractive ? \"slider\" : \"progressbar\"}\n            aria-valuenow={currentTime}\n            aria-valuemin={0}\n            aria-valuemax={duration}\n            aria-label=\"Audio progress\"\n            aria-disabled={!isInteractive}\n          >\n            {/* Buffered Progress */}\n            {showBuffered && bufferedProgress > 0 && (\n              <div\n                className=\"absolute top-0 left-0 h-full bg-[var(--color-bg-hover,#1A1F2E)] transition-all duration-150\"\n                style={{ width: `${bufferedProgress}%` }}\n                aria-hidden=\"true\"\n              />\n            )}\n\n            {/* Current Progress */}\n            <div\n              className={cn(\n                \"absolute top-0 left-0 h-full transition-all duration-150\",\n                \"bg-[var(--color-brand-primary,#6AE6A6)]\",\n                hasError && \"bg-[var(--color-destructive,#FF6B6B)]\",\n                isBuffering && \"animate-pulse\",\n              )}\n              style={{ width: `${progress}%` }}\n              aria-hidden=\"true\"\n            />\n\n            {/* Hover Indicator */}\n            {isHovered && isInteractive && (\n              <div\n                className=\"absolute top-0 h-full w-0.5 bg-[var(--color-brand-accent,#5BD0FF)] transition-all duration-150\"\n                style={{ left: `${(hoverTime / duration) * 100}%` }}\n                aria-hidden=\"true\"\n              />\n            )}\n\n            {/* Loading Indicator */}\n            {isLoading && (\n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <div className=\"w-4 h-4 animate-spin rounded-full border-2 border-[var(--color-brand-primary,#6AE6A6)] border-t-transparent\" />\n              </div>\n            )}\n\n            {/* Buffering Indicator */}\n            {isBuffering && !isLoading && (\n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <div className=\"flex gap-1\">\n                  <div className=\"w-1 h-1 bg-[var(--color-brand-primary,#6AE6A6)] rounded-full animate-bounce\" />\n                  <div className=\"w-1 h-1 bg-[var(--color-brand-primary,#6AE6A6)] rounded-full animate-bounce [animation-delay:0.1s]\" />\n                  <div className=\"w-1 h-1 bg-[var(--color-brand-primary,#6AE6A6)] rounded-full animate-bounce [animation-delay:0.2s]\" />\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Hover Time Tooltip */}\n          {isHovered && isInteractive && (\n            <div\n              className=\"absolute bottom-full mb-2 px-2 py-1 text-xs bg-[var(--color-bg-elevated,#121520)] text-[var(--color-fg,#E6EAF2)] rounded border border-[var(--border-subtle,rgba(255,255,255,0.10))] shadow-lg pointer-events-none z-10\"\n              style={{ left: `${(hoverTime / duration) * 100}%`, transform: \"translateX(-50%)\" }}\n            >\n              {formatTime(hoverTime)}\n            </div>\n          )}\n        </div>\n\n        {/* Status Indicators */}\n        <div className=\"flex items-center justify-between text-xs\">\n          <div className=\"flex items-center gap-2\">\n            {isLoading && (\n              <span className=\"text-[var(--color-brand-primary,#6AE6A6)]\">Loading...</span>\n            )}\n            {isBuffering && !isLoading && (\n              <span className=\"text-[var(--color-brand-primary,#6AE6A6)]\">Buffering...</span>\n            )}\n            {hasError && (\n              <span className=\"text-[var(--color-destructive,#FF6B6B)]\">Error loading audio</span>\n            )}\n          </div>\n\n          {showBuffered && bufferedTime > 0 && (\n            <span className=\"text-[var(--color-fg-muted,#A9B1C1)]\">\n              Buffered: {formatTime(bufferedTime)}\n            </span>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nProgressBar.displayName = \"ProgressBar\";\n\nexport { ProgressBar };\n","\"use client\";\n\nimport type * as React from \"react\";\nimport { Tag } from \"../data/Tag\";\nimport { ChevronRight, Pause, Play } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface CatalogCardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof catalogCardVariants> {\n  id: string;\n  title: string;\n  producer: string;\n  price: string; // \"$2.99\"\n  bpm?: number;\n  keySig?: string; // \"C minor\"\n  tags?: string[];\n  artworkUrl?: string;\n  previewUrl?: string; // 30s clip\n  onPreviewToggle?: (id: string) => void;\n  isPlaying?: boolean;\n  onOpen?: (id: string) => void;\n}\n\nconst catalogCardVariants = cva(\n  \"group relative overflow-hidden rounded-md border transition-transform duration-150 will-change-transform focus-within:outline focus-within:outline-2 focus-within:outline-brand-accent hover:translate-y-[-1px]\",\n  {\n    variants: {\n      variant: {\n        default: \"border-border-emphasis bg-bg-elevated shadow-ambient-2\",\n        compact: \"border-border-subtle bg-bg-elevated shadow-ambient-1\",\n        minimal: \"border-border-hairline bg-bg-elevated\",\n      },\n      size: {\n        sm: \"p-2\",\n        md: \"p-3\",\n        lg: \"p-4\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport function CatalogCard({\n  id,\n  title,\n  producer,\n  price,\n  bpm,\n  keySig,\n  tags = [],\n  artworkUrl,\n  isPlaying,\n  onPreviewToggle,\n  onOpen,\n  variant,\n  size,\n  className,\n  ...props\n}: CatalogCardProps) {\n  return (\n    <article\n      className={cn(catalogCardVariants({ variant, size }), className)}\n      data-testid=\"catalog-card\"\n      {...props}\n    >\n      <div className=\"flex gap-3\">\n        {/* Artwork */}\n        <div\n          className={cn(\n            \"h-16 w-16 shrink-0 overflow-hidden rounded-md\",\n            !artworkUrl && \"bg-bg-muted\",\n          )}\n          aria-hidden\n        >\n          {artworkUrl ? (\n            <img src={artworkUrl} alt=\"\" className=\"h-full w-full object-cover\" />\n          ) : (\n            <div className=\"h-full w-full bg-gradient-to-br from-brand-primary/10 to-brand-accent/10\" />\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"min-w-0 flex-1\">\n          <h3 className=\"truncate text-fg-default text-base font-semibold\">{title}</h3>\n          <p className=\"truncate text-fg-muted text-sm\">{producer}</p>\n\n          <div className=\"mt-2 flex flex-wrap items-center gap-2\">\n            {typeof bpm === \"number\" && (\n              <Tag className=\"text-xs px-1.5 py-0.5 bg-bg-muted text-fg-muted\">{bpm} BPM</Tag>\n            )}\n            {keySig && (\n              <Tag className=\"text-xs px-1.5 py-0.5 bg-bg-muted text-fg-muted\">{keySig}</Tag>\n            )}\n            {tags.slice(0, 3).map((t) => (\n              <Tag key={t} className=\"text-xs px-1.5 py-0.5 bg-brand-primary/20 text-brand-primary\">\n                {t}\n              </Tag>\n            ))}\n            {tags.length > 3 && (\n              <Tag className=\"text-xs px-1.5 py-0.5 bg-bg-muted text-fg-subtle\">\n                +{tags.length - 3}\n              </Tag>\n            )}\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex h-16 w-16 shrink-0 flex-col items-end justify-between\">\n          <button\n            type=\"button\"\n            aria-label={\n              isPlaying ? `Pause preview of ${title}` : `Play 30-second preview of ${title}`\n            }\n            className={cn(\n              \"grid h-9 w-9 place-content-center rounded-md border\",\n              \"border-border-subtle bg-bg-muted\",\n              \"hover:bg-brand-primary/10 active:scale-[0.98]\",\n              \"focus:outline-none focus-visible:ring-2 focus-visible:ring-brand-accent\",\n              \"transition-all duration-150\",\n            )}\n            onClick={() => onPreviewToggle?.(id)}\n            data-testid=\"preview-toggle\"\n          >\n            {isPlaying ? (\n              <Pause className=\"h-4 w-4\" aria-hidden=\"true\" />\n            ) : (\n              <Play className=\"h-4 w-4\" aria-hidden=\"true\" />\n            )}\n          </button>\n\n          <div className=\"text-right\">\n            <div className=\"text-fg-default text-sm font-semibold\">{price}</div>\n            <button\n              type=\"button\"\n              className=\"inline-flex items-center gap-1 text-brand-accent text-xs hover:opacity-90 focus:underline focus:outline-none\"\n              onClick={() => onOpen?.(id)}\n              aria-label={`Open details for ${title}`}\n            >\n              Details <ChevronRight className=\"h-3.5 w-3.5\" aria-hidden=\"true\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </article>\n  );\n}\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst skeletonVariants = cva(\"animate-pulse rounded-md bg-muted\", {\n  variants: {\n    variant: {\n      default: \"bg-muted\",\n      subtle: \"bg-muted/50\",\n      strong: \"bg-muted/80\",\n    },\n    size: {\n      sm: \"h-4\",\n      md: \"h-6\",\n      lg: \"h-8\",\n      xl: \"h-12\",\n    },\n    shape: {\n      rectangle: \"rounded-md\",\n      circle: \"rounded-full\",\n      text: \"rounded-sm\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n    shape: \"rectangle\",\n  },\n});\n\nexport interface SkeletonProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof skeletonVariants> {\n  lines?: number;\n  width?: string | number;\n  height?: string | number;\n}\n\nconst Skeleton = forwardRef<HTMLDivElement, SkeletonProps>(\n  ({ className, variant, size, shape, lines = 1, width, height, style, ...props }, ref) => {\n    const customStyle = {\n      width: width || (shape === \"circle\" ? height || \"2rem\" : \"100%\"),\n      height: height || (shape === \"circle\" ? width || \"2rem\" : undefined),\n      ...style,\n    };\n\n    if (lines > 1) {\n      return (\n        <div className=\"space-y-2\" ref={ref}>\n          {Array.from({ length: lines }, (_, index) => (\n            <div\n              key={`skeleton-${Date.now()}-${index}`}\n              className={cn(skeletonVariants({ variant, size, shape }), className)}\n              style={customStyle}\n              {...props}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(skeletonVariants({ variant, size, shape }), className)}\n        style={customStyle}\n        {...props}\n      />\n    );\n  },\n);\nSkeleton.displayName = \"Skeleton\";\n\nexport { Skeleton, skeletonVariants };\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst fieldVariants = cva(\"flex flex-col gap-1\", {\n  variants: {\n    size: {\n      sm: \"gap-1\",\n      md: \"gap-2\",\n      lg: \"gap-3\",\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n  },\n});\n\nexport interface FieldProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof fieldVariants> {\n  label?: string;\n  error?: string;\n  required?: boolean;\n  disabled?: boolean;\n  htmlFor?: string;\n}\n\nconst Field = forwardRef<HTMLDivElement, FieldProps>(\n  ({ className, label, error, required, disabled, htmlFor, children, size, ...props }, ref) => {\n    return (\n      <div ref={ref} className={cn(fieldVariants({ size, className }))} {...props}>\n        {label && (\n          <label\n            htmlFor={htmlFor}\n            className={cn(\n              \"text-sm font-medium\",\n              disabled\n                ? \"text-[var(--color-state-disabled-fg,rgba(230,234,242,0.35))]\"\n                : \"text-[var(--color-fg,#E6EAF2)]\",\n              error && \"text-[var(--color-semantic-danger,#F97066)]\",\n            )}\n          >\n            {label}\n            {required && (\n              <span className=\"ml-1 text-[var(--color-semantic-danger,#F97066)]\">*</span>\n            )}\n          </label>\n        )}\n        {children}\n        {error && (\n          <p\n            className=\"text-xs text-[var(--color-semantic-danger,#F97066)]\"\n            role=\"alert\"\n            id={htmlFor ? `${htmlFor}-error` : undefined}\n            aria-live=\"polite\"\n          >\n            {error}\n          </p>\n        )}\n      </div>\n    );\n  },\n);\n\nField.displayName = \"Field\";\n\nexport { Field };\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst inputVariants = cva(\n  [\n    \"flex w-full border transition-colors\",\n    \"rounded-[var(--radius-sm,8px)]\",\n    \"bg-[var(--color-bg-muted,#0F131B)]\",\n    \"text-[var(--color-fg,#E6EAF2)]\",\n    \"placeholder:text-[var(--color-fg-muted,#A9B1C1)]\",\n    \"focus:outline-none focus:ring-2 focus:ring-[var(--color-brand-accent,#5BD0FF)]\",\n    \"focus:border-[var(--color-brand-accent,#5BD0FF)]\",\n    \"disabled:cursor-not-allowed disabled:opacity-50\",\n  ].join(\" \"),\n  {\n    variants: {\n      size: {\n        sm: \"h-8 px-2 text-xs\",\n        md: \"h-9 px-3 text-sm\",\n        lg: \"h-10 px-4 text-base\",\n      },\n      variant: {\n        default: \"border-[var(--border-subtle,rgba(255,255,255,0.10))]\",\n        error:\n          \"border-[var(--border-danger,rgba(249,112,102,0.55))] focus:ring-[var(--border-danger,rgba(249,112,102,0.55))] focus:border-[var(--border-danger,rgba(249,112,102,0.55))]\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    VariantProps<typeof inputVariants> {}\n\nconst Input = forwardRef<HTMLInputElement, InputProps>(\n  ({ className, size, variant, ...props }, ref) => {\n    return (\n      <input className={cn(inputVariants({ size, variant, className }))} ref={ref} {...props} />\n    );\n  },\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };\n","import * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport { Check, ChevronDown } from \"lucide-react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst selectVariants = cva(\n  \"flex w-full items-center justify-between rounded-sm border bg-bg-muted px-3 py-2 text-sm text-fg transition-colors focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-brand-accent disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      size: {\n        sm: \"h-8 px-2 text-xs\",\n        md: \"h-9 px-3 text-sm\",\n        lg: \"h-10 px-4 text-base\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n    },\n  },\n);\n\nexport interface SelectProps\n  extends React.ComponentPropsWithoutRef<typeof SelectPrimitive.Root>,\n    VariantProps<typeof selectVariants> {\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Select = forwardRef<React.ElementRef<typeof SelectPrimitive.Trigger>, SelectProps>(\n  ({ className, size, children, ...props }, ref) => (\n    <SelectPrimitive.Root {...props}>\n      <SelectPrimitive.Trigger ref={ref} className={cn(selectVariants({ size, className }))}>\n        {children}\n        <SelectPrimitive.Icon asChild>\n          <ChevronDown className=\"h-4 w-4 opacity-50\" />\n        </SelectPrimitive.Icon>\n      </SelectPrimitive.Trigger>\n    </SelectPrimitive.Root>\n  ),\n);\n\nSelect.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectContent = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border border-border-subtle bg-bg-elevated shadow-lg\",\n        className,\n      )}\n      {...props}\n    >\n      <SelectPrimitive.Viewport className=\"p-1\">{children}</SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\n\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectItem = forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-bg-active focus:text-fg data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\n\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nexport { Select, SelectContent, SelectItem };\n","import * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport { Check } from \"lucide-react\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst checkboxVariants = cva(\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-border-subtle bg-bg-muted ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-brand-accent focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-brand-primary data-[state=checked]:text-brand-primary-foreground data-[state=checked]:border-brand-primary\",\n  {\n    variants: {\n      size: {\n        sm: \"h-3 w-3\",\n        md: \"h-4 w-4\",\n        lg: \"h-5 w-5\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n    },\n  },\n);\n\nexport interface CheckboxProps\n  extends Omit<React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>, \"size\">,\n    VariantProps<typeof checkboxVariants> {}\n\nconst Checkbox = forwardRef<React.ElementRef<typeof CheckboxPrimitive.Root>, CheckboxProps>(\n  ({ className, size, ...props }, ref) => (\n    <CheckboxPrimitive.Root\n      ref={ref}\n      className={cn(checkboxVariants({ size, className }))}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator className=\"flex items-center justify-center text-current\">\n        <Check className=\"h-3 w-3\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  ),\n);\n\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","import * as SliderPrimitive from \"@radix-ui/react-slider\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport { forwardRef } from \"react\";\nimport { cn } from \"../utils\";\n\nconst sliderVariants = cva(\"relative flex w-full touch-none select-none items-center\", {\n  variants: {\n    size: {\n      sm: \"h-4\",\n      md: \"h-5\",\n      lg: \"h-6\",\n    },\n  },\n  defaultVariants: {\n    size: \"md\",\n  },\n});\n\nexport interface SliderProps\n  extends Omit<React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>, \"size\">,\n    VariantProps<typeof sliderVariants> {}\n\nconst Slider = forwardRef<React.ElementRef<typeof SliderPrimitive.Root>, SliderProps>(\n  ({ className, size, ...props }, ref) => (\n    <SliderPrimitive.Root ref={ref} className={cn(sliderVariants({ size, className }))} {...props}>\n      <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-bg-muted\">\n        <SliderPrimitive.Range className=\"absolute h-full bg-brand-primary\" />\n      </SliderPrimitive.Track>\n      <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-brand-primary bg-bg-elevated ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-brand-accent focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n    </SliderPrimitive.Root>\n  ),\n);\n\nSlider.displayName = SliderPrimitive.Root.displayName;\n\nexport { Slider };\n","import { Slot } from \"@radix-ui/react-slot\";\nimport clsx from \"clsx\";\nimport type * as React from \"react\";\n\ntype Variant = \"primary\" | \"secondary\" | \"ghost\";\ntype Size = \"sm\" | \"md\" | \"lg\";\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: Variant;\n  size?: Size;\n  loading?: boolean;\n  asChild?: boolean;\n}\n\nconst base =\n  \"inline-flex items-center justify-center rounded-md font-medium transition focus:outline-none focus-visible:ring-2 focus-visible:ring-brand-accent disabled:opacity-50 disabled:pointer-events-none\";\nconst sizes: Record<Size, string> = {\n  sm: \"h-9 px-3 text-sm\",\n  md: \"h-10 px-4 text-base\",\n  lg: \"h-11 px-5 text-lg\",\n};\nconst variants: Record<Variant, string> = {\n  primary: \"bg-brand-primary text-bg hover:opacity-95\",\n  secondary: \"bg-bg-elevated text-fg hover:opacity-90 border border-white/10\",\n  ghost: \"bg-transparent text-fg hover:bg-white/5\",\n};\n\nexport function Button({\n  variant = \"primary\",\n  size = \"md\",\n  loading = false,\n  className,\n  asChild = false,\n  children,\n  ...rest\n}: ButtonProps) {\n  const Comp = asChild ? Slot : \"button\";\n  return (\n    <Comp\n      aria-busy={loading}\n      className={clsx(base, sizes[size], variants[variant], className)}\n      {...rest}\n    >\n      {loading ? \"…\" : children}\n    </Comp>\n  );\n}\n","\"use client\";\n\nimport type * as React from \"react\";\nimport { Button } from \"../Button\";\nimport { Badge } from \"../data/Badge\";\nimport { type VariantProps, cn, cva } from \"../utils\";\nimport { Checkbox } from \"./Checkbox\";\nimport { Select } from \"./Select\";\nimport { Slider } from \"./Slider\";\n\nexport interface FilterOption {\n  value: string;\n  label: string;\n  count?: number;\n}\n\nexport interface PriceRange {\n  min: number;\n  max: number;\n}\n\nexport interface CatalogFiltersProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof catalogFiltersVariants> {\n  /**\n   * Available genres for filtering\n   */\n  genres?: FilterOption[];\n  /**\n   * Selected genre values\n   */\n  selectedGenres?: string[];\n  /**\n   * Callback when genres change\n   */\n  onGenresChange?: (genres: string[]) => void;\n  /**\n   * Available BPM range\n   */\n  bpmRange?: { min: number; max: number };\n  /**\n   * Selected BPM range\n   */\n  selectedBpmRange?: { min: number; max: number };\n  /**\n   * Callback when BPM range changes\n   */\n  onBpmRangeChange?: (range: { min: number; max: number }) => void;\n  /**\n   * Available price range\n   */\n  priceRange?: PriceRange;\n  /**\n   * Selected price range\n   */\n  selectedPriceRange?: PriceRange;\n  /**\n   * Callback when price range changes\n   */\n  onPriceRangeChange?: (range: PriceRange) => void;\n  /**\n   * Available key signatures\n   */\n  keySignatures?: FilterOption[];\n  /**\n   * Selected key signatures\n   */\n  selectedKeySignatures?: string[];\n  /**\n   * Callback when key signatures change\n   */\n  onKeySignaturesChange?: (keys: string[]) => void;\n  /**\n   * Whether filters are loading\n   */\n  loading?: boolean;\n  /**\n   * Number of active filters\n   */\n  activeFilterCount?: number;\n  /**\n   * Callback to clear all filters\n   */\n  onClearAll?: () => void;\n  /**\n   * Whether to show the clear all button\n   */\n  showClearAll?: boolean;\n}\n\nconst catalogFiltersVariants = cva(\"space-y-6 p-4\", {\n  variants: {\n    variant: {\n      default: \"bg-bg-elevated border border-border-subtle rounded-lg\",\n      minimal: \"bg-transparent\",\n      sidebar: \"bg-bg-muted border-r border-border-subtle\",\n    },\n    size: {\n      sm: \"p-3 space-y-4\",\n      md: \"p-4 space-y-6\",\n      lg: \"p-6 space-y-8\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n});\n\nexport function CatalogFilters({\n  genres = [],\n  selectedGenres = [],\n  onGenresChange,\n  bpmRange = { min: 60, max: 200 },\n  selectedBpmRange,\n  onBpmRangeChange,\n  priceRange = { min: 0, max: 100 },\n  selectedPriceRange,\n  onPriceRangeChange,\n  keySignatures = [],\n  selectedKeySignatures = [],\n  onKeySignaturesChange,\n  loading = false,\n  activeFilterCount = 0,\n  onClearAll,\n  showClearAll = true,\n  variant,\n  size,\n  className,\n  ...props\n}: CatalogFiltersProps) {\n  const handleGenreToggle = (genre: string) => {\n    if (!onGenresChange) return;\n\n    const newGenres = selectedGenres.includes(genre)\n      ? selectedGenres.filter((g) => g !== genre)\n      : [...selectedGenres, genre];\n\n    onGenresChange(newGenres);\n  };\n\n  const handleKeySignatureToggle = (key: string) => {\n    if (!onKeySignaturesChange) return;\n\n    const newKeys = selectedKeySignatures.includes(key)\n      ? selectedKeySignatures.filter((k) => k !== key)\n      : [...selectedKeySignatures, key];\n\n    onKeySignaturesChange(newKeys);\n  };\n\n  if (loading) {\n    return (\n      <div className={cn(catalogFiltersVariants({ variant, size }), className)} {...props}>\n        <div className=\"animate-pulse space-y-4\">\n          <div className=\"h-4 bg-bg-muted/20 rounded w-1/4\" />\n          <div className=\"space-y-2\">\n            {Array.from({ length: 4 }, (_, i) => (\n              <div key={`skeleton-item-${i + 1}`} className=\"h-3 bg-bg-muted/20 rounded w-3/4\" />\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={cn(catalogFiltersVariants({ variant, size }), className)} {...props}>\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold text-fg-default\">Filters</h3>\n        {showClearAll && activeFilterCount > 0 && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={onClearAll}\n            className=\"text-fg-muted hover:text-fg-default\"\n          >\n            Clear all ({activeFilterCount})\n          </Button>\n        )}\n      </div>\n\n      {/* Genres */}\n      {genres.length > 0 && (\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium text-fg-default\">Genre</h4>\n          <div className=\"flex flex-wrap gap-2\">\n            {genres.map((genre) => (\n              <Badge\n                key={genre.value}\n                variant={selectedGenres.includes(genre.value) ? \"info\" : \"neutral\"}\n                className=\"cursor-pointer hover:bg-brand-primary/10\"\n                onClick={() => handleGenreToggle(genre.value)}\n              >\n                {genre.label}\n                {genre.count && <span className=\"ml-1 text-xs opacity-70\">({genre.count})</span>}\n              </Badge>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* BPM Range */}\n      {bpmRange && onBpmRangeChange && (\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium text-fg-default\">\n            BPM: {selectedBpmRange?.min || bpmRange.min} - {selectedBpmRange?.max || bpmRange.max}\n          </h4>\n          <Slider\n            min={bpmRange.min}\n            max={bpmRange.max}\n            value={[selectedBpmRange?.min || bpmRange.min, selectedBpmRange?.max || bpmRange.max]}\n            onValueChange={([min, max]) => onBpmRangeChange({ min, max })}\n            step={5}\n            className=\"w-full\"\n          />\n        </div>\n      )}\n\n      {/* Price Range */}\n      {priceRange && onPriceRangeChange && (\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium text-fg-default\">\n            Price: ${selectedPriceRange?.min || priceRange.min} - $\n            {selectedPriceRange?.max || priceRange.max}\n          </h4>\n          <Slider\n            min={priceRange.min}\n            max={priceRange.max}\n            value={[\n              selectedPriceRange?.min || priceRange.min,\n              selectedPriceRange?.max || priceRange.max,\n            ]}\n            onValueChange={([min, max]) => onPriceRangeChange({ min, max })}\n            step={1}\n            className=\"w-full\"\n          />\n        </div>\n      )}\n\n      {/* Key Signatures */}\n      {keySignatures.length > 0 && (\n        <div className=\"space-y-3\">\n          <h4 className=\"text-sm font-medium text-fg-default\">Key Signature</h4>\n          <div className=\"grid grid-cols-2 gap-2\">\n            {keySignatures.map((key) => (\n              <div key={key.value} className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id={`key-${key.value}`}\n                  checked={selectedKeySignatures.includes(key.value)}\n                  onCheckedChange={() => handleKeySignatureToggle(key.value)}\n                />\n                <label\n                  htmlFor={`key-${key.value}`}\n                  className=\"text-sm cursor-pointer text-fg-default\"\n                >\n                  {key.label}\n                  {key.count && <span className=\"ml-1 text-xs text-fg-muted\">({key.count})</span>}\n                </label>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Filter chip component for showing active filters\nexport function FilterChip({\n  label,\n  value,\n  onRemove,\n  className,\n}: {\n  label: string;\n  value: string;\n  onRemove?: (value: string) => void;\n  className?: string;\n}) {\n  return (\n    <Badge\n      variant=\"neutral\"\n      className={cn(\"cursor-pointer hover:bg-semantic-danger hover:text-fg-inverse\", className)}\n      onClick={() => onRemove?.(value)}\n    >\n      {label}\n      <span className=\"ml-1 text-xs\">×</span>\n    </Badge>\n  );\n}\n\n// Active filters display\nexport function ActiveFilters({\n  filters,\n  onRemove,\n  onClearAll,\n  className,\n}: {\n  filters: Array<{ label: string; value: string; type: string }>;\n  onRemove?: (value: string, type: string) => void;\n  onClearAll?: () => void;\n  className?: string;\n}) {\n  if (filters.length === 0) return null;\n\n  return (\n    <div className={cn(\"flex flex-wrap gap-2 items-center\", className)}>\n      <span className=\"text-sm text-fg-muted\">Active filters:</span>\n      {filters.map((filter) => (\n        <FilterChip\n          key={`${filter.type}-${filter.value}`}\n          label={filter.label}\n          value={filter.value}\n          onRemove={(value) => onRemove?.(value, filter.type)}\n        />\n      ))}\n      {onClearAll && (\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={onClearAll}\n          className=\"text-fg-muted hover:text-fg-default\"\n        >\n          Clear all\n        </Button>\n      )}\n    </div>\n  );\n}\n","\"use client\";\n\nimport { forwardRef, useCallback, useState } from \"react\";\nimport { AlertCircle, CheckCircle, File, Music, Upload, X } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface FileUploadProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\" | \"onError\" | \"onDrop\">,\n    VariantProps<typeof fileUploadVariants> {\n  /**\n   * Accepted file types (MIME types)\n   */\n  accept?: string;\n  /**\n   * Maximum file size in bytes\n   */\n  maxSize?: number;\n  /**\n   * Maximum number of files\n   */\n  maxFiles?: number;\n  /**\n   * Whether multiple files are allowed\n   */\n  multiple?: boolean;\n  /**\n   * Whether the upload area is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Current files\n   */\n  files?: File[];\n  /**\n   * Upload status\n   */\n  status?: \"idle\" | \"uploading\" | \"processing\" | \"success\" | \"error\";\n  /**\n   * Upload progress (0-100)\n   */\n  progress?: number;\n  /**\n   * Error message\n   */\n  error?: string;\n  /**\n   * Success message\n   */\n  success?: string;\n  /**\n   * Callback when files change\n   */\n  onChange?: (files: File[]) => void;\n  /**\n   * Callback when files are dropped\n   */\n  onDrop?: (files: File[]) => void;\n  /**\n   * Callback when upload starts\n   */\n  onUpload?: (files: File[]) => void;\n  /**\n   * Callback when upload completes\n   */\n  onComplete?: (files: File[]) => void;\n  /**\n   * Callback when upload fails\n   */\n  onError?: (error: string) => void;\n}\n\nconst fileUploadVariants = cva(\n  \"relative flex flex-col items-center justify-center border-2 border-dashed rounded-lg transition-all duration-200 focus-within:outline-none focus-within:ring-2 focus-within:ring-brand-ring focus-within:ring-offset-2 focus-within:ring-offset-bg-default\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-border-subtle bg-bg-elevated hover:border-brand-primary hover:bg-brand-primary/5\",\n        minimal: \"border-border-muted bg-transparent hover:border-border-subtle hover:bg-bg-muted\",\n        success: \"border-semantic-success bg-semantic-success/5 hover:border-semantic-success\",\n        error: \"border-semantic-danger bg-semantic-danger/5 hover:border-semantic-danger\",\n      },\n      size: {\n        sm: \"p-4 min-h-[120px]\",\n        md: \"p-6 min-h-[160px]\",\n        lg: \"p-8 min-h-[200px]\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst FileUpload = forwardRef<HTMLDivElement, FileUploadProps>(\n  (\n    {\n      className,\n      accept = \"audio/*\",\n      maxSize = 50 * 1024 * 1024, // 50MB default\n      maxFiles = 1,\n      multiple = false,\n      disabled = false,\n      files = [],\n      status = \"idle\",\n      progress = 0,\n      error,\n      success,\n      onChange,\n      onDrop,\n      onUpload,\n      onComplete,\n      onError,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isDragOver, setIsDragOver] = useState(false);\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    const validateFile = useCallback(\n      (file: File): string[] => {\n        const errors: string[] = [];\n\n        // Check file size\n        if (file.size > maxSize) {\n          errors.push(`File size must be less than ${Math.round(maxSize / 1024 / 1024)}MB`);\n        }\n\n        // Check file type\n        if (accept && !accept.split(\",\").some((type) => file.type.match(type.replace(\"*\", \".*\")))) {\n          errors.push(`File type must be one of: ${accept}`);\n        }\n\n        return errors;\n      },\n      [accept, maxSize],\n    );\n\n    const handleFiles = useCallback(\n      (newFiles: FileList | File[]) => {\n        if (disabled) return;\n\n        const fileArray = Array.from(newFiles);\n        const errors: string[] = [];\n\n        // Validate each file\n        for (const file of fileArray) {\n          const fileErrors = validateFile(file);\n          errors.push(...fileErrors);\n        }\n\n        // Check file count\n        if (files.length + fileArray.length > maxFiles) {\n          errors.push(`Maximum ${maxFiles} file${maxFiles > 1 ? \"s\" : \"\"} allowed`);\n        }\n\n        setValidationErrors(errors);\n\n        if (errors.length === 0) {\n          const updatedFiles = multiple ? [...files, ...fileArray] : fileArray;\n          onChange?.(updatedFiles);\n          onDrop?.(fileArray);\n        } else {\n          onError?.(errors.join(\", \"));\n        }\n      },\n      [disabled, files, maxFiles, multiple, onChange, onDrop, onError, validateFile],\n    );\n\n    const handleDragOver = useCallback(\n      (e: React.DragEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        if (!disabled) {\n          setIsDragOver(true);\n        }\n      },\n      [disabled],\n    );\n\n    const handleDragLeave = useCallback((e: React.DragEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n      setIsDragOver(false);\n    }, []);\n\n    const handleDrop = useCallback(\n      (e: React.DragEvent) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setIsDragOver(false);\n\n        if (disabled) return;\n\n        const droppedFiles = e.dataTransfer.files;\n        if (droppedFiles.length > 0) {\n          handleFiles(droppedFiles);\n        }\n      },\n      [disabled, handleFiles],\n    );\n\n    const handleFileInput = useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const selectedFiles = e.target.files;\n        if (selectedFiles && selectedFiles.length > 0) {\n          handleFiles(selectedFiles);\n        }\n      },\n      [handleFiles],\n    );\n\n    const removeFile = useCallback(\n      (index: number) => {\n        const updatedFiles = files.filter((_, i) => i !== index);\n        onChange?.(updatedFiles);\n      },\n      [files, onChange],\n    );\n\n    const formatFileSize = (bytes: number) => {\n      if (bytes === 0) return \"0 Bytes\";\n      const k = 1024;\n      const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return `${Number.parseFloat((bytes / k ** i).toFixed(2))} ${sizes[i]}`;\n    };\n\n    const getStatusIcon = () => {\n      switch (status) {\n        case \"success\":\n          return <CheckCircle className=\"h-8 w-8 text-semantic-success\" />;\n        case \"error\":\n          return <AlertCircle className=\"h-8 w-8 text-semantic-danger\" />;\n        case \"uploading\":\n        case \"processing\":\n          return (\n            <div className=\"h-8 w-8 animate-spin rounded-full border-2 border-brand-primary border-t-transparent\" />\n          );\n        default:\n          return <Upload className=\"h-8 w-8 text-fg-muted\" />;\n      }\n    };\n\n    const getStatusMessage = () => {\n      if (error) return error;\n      if (success) return success;\n      if (status === \"uploading\") return `Uploading... ${Math.round(progress)}%`;\n      if (status === \"processing\") return \"Processing files...\";\n      if (files.length > 0) return `${files.length} file${files.length > 1 ? \"s\" : \"\"} selected`;\n      return \"Drag and drop files here, or click to select\";\n    };\n\n    const getVariant = () => {\n      if (error || status === \"error\") return \"error\";\n      if (success || status === \"success\") return \"success\";\n      return variant;\n    };\n\n    return (\n      <div ref={ref} className={cn(\"w-full\", className)} {...props}>\n        {/* Upload Area */}\n        <div\n          className={cn(fileUploadVariants({ variant: getVariant(), size }), {\n            \"opacity-50 cursor-not-allowed\": disabled,\n            \"cursor-pointer\": !disabled,\n            \"border-brand-primary bg-brand-primary/10\": isDragOver && !disabled,\n          })}\n          onDragOver={handleDragOver}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <input\n            type=\"file\"\n            accept={accept}\n            multiple={multiple}\n            disabled={disabled}\n            onChange={handleFileInput}\n            className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer disabled:cursor-not-allowed\"\n            aria-label=\"File upload input\"\n          />\n\n          <div className=\"flex flex-col items-center gap-3 text-center\">\n            {getStatusIcon()}\n            <div className=\"space-y-1\">\n              <p className=\"text-sm font-medium text-fg-default\">{getStatusMessage()}</p>\n              <p className=\"text-xs text-fg-muted\">\n                {accept.includes(\"audio\") ? \"Audio files\" : \"Files\"} up to{\" \"}\n                {Math.round(maxSize / 1024 / 1024)}MB\n              </p>\n            </div>\n\n            {/* Progress Bar */}\n            {status === \"uploading\" && (\n              <div className=\"w-full max-w-xs\">\n                <div className=\"h-2 bg-bg-muted rounded-full overflow-hidden\">\n                  <div\n                    className=\"h-full bg-brand-primary transition-all duration-300\"\n                    style={{ width: `${progress}%` }}\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* File List */}\n        {files.length > 0 && (\n          <div className=\"mt-4 space-y-2\">\n            {files.map((file, index) => (\n              <div\n                key={`${file.name}-${index}`}\n                className=\"flex items-center gap-3 p-3 bg-bg-elevated border border-border-subtle rounded-lg\"\n              >\n                <div className=\"flex-shrink-0\">\n                  {file.type.startsWith(\"audio/\") ? (\n                    <Music className=\"h-5 w-5 text-brand-primary\" />\n                  ) : (\n                    <File className=\"h-5 w-5 text-fg-muted\" />\n                  )}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <p className=\"text-sm font-medium text-fg-default truncate\">{file.name}</p>\n                  <p className=\"text-xs text-fg-muted\">{formatFileSize(file.size)}</p>\n                </div>\n                {!disabled && (\n                  <button\n                    type=\"button\"\n                    onClick={() => removeFile(index)}\n                    className=\"flex-shrink-0 p-1 text-fg-muted hover:text-fg-default transition-colors\"\n                    aria-label={`Remove ${file.name}`}\n                  >\n                    <X className=\"h-4 w-4\" />\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n\n        {/* Validation Errors */}\n        {validationErrors.length > 0 && (\n          <div className=\"mt-3 space-y-1\">\n            {validationErrors.map((error, index) => (\n              <p\n                key={`error-${index}-${error.slice(0, 10)}`}\n                className=\"text-sm text-semantic-danger\"\n              >\n                {error}\n              </p>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nFileUpload.displayName = \"FileUpload\";\n\nexport { FileUpload };\n","\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { AlertCircle, CheckCircle, Clock, Spinner } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface UploadProgressProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof uploadProgressVariants> {\n  /**\n   * Upload progress (0-100)\n   */\n  progress?: number;\n  /**\n   * Upload status\n   */\n  status?: \"idle\" | \"uploading\" | \"processing\" | \"success\" | \"error\";\n  /**\n   * File name being uploaded\n   */\n  fileName?: string;\n  /**\n   * File size in bytes\n   */\n  fileSize?: number;\n  /**\n   * Upload speed in bytes per second\n   */\n  speed?: number;\n  /**\n   * Estimated time remaining in seconds\n   */\n  timeRemaining?: number;\n  /**\n   * Error message\n   */\n  error?: string;\n  /**\n   * Success message\n   */\n  success?: string;\n  /**\n   * Whether to show detailed information\n   */\n  showDetails?: boolean;\n  /**\n   * Whether to show speed and time estimates\n   */\n  showEstimates?: boolean;\n}\n\nconst uploadProgressVariants = cva(\"w-full\", {\n  variants: {\n    variant: {\n      default: \"bg-bg-elevated border border-border-subtle rounded-lg p-4\",\n      minimal: \"bg-transparent\",\n      inline: \"bg-bg-muted border border-border-muted rounded-md p-3\",\n    },\n    size: {\n      sm: \"p-3\",\n      md: \"p-4\",\n      lg: \"p-6\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n});\n\nconst UploadProgress = forwardRef<HTMLDivElement, UploadProgressProps>(\n  (\n    {\n      className,\n      progress = 0,\n      status = \"idle\",\n      fileName,\n      fileSize,\n      speed,\n      timeRemaining,\n      error,\n      success,\n      showDetails = true,\n      showEstimates = true,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const formatFileSize = (bytes: number) => {\n      if (bytes === 0) return \"0 Bytes\";\n      const k = 1024;\n      const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\"];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return `${Number.parseFloat((bytes / k ** i).toFixed(2))} ${sizes[i]}`;\n    };\n\n    const formatSpeed = (bytesPerSecond: number) => {\n      if (bytesPerSecond === 0) return \"0 B/s\";\n      const k = 1024;\n      const sizes = [\"B/s\", \"KB/s\", \"MB/s\", \"GB/s\"];\n      const i = Math.floor(Math.log(bytesPerSecond) / Math.log(k));\n      return `${Number.parseFloat((bytesPerSecond / k ** i).toFixed(1))} ${sizes[i]}`;\n    };\n\n    const formatTime = (seconds: number) => {\n      if (seconds === 0) return \"0s\";\n      if (seconds < 60) return `${Math.round(seconds)}s`;\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = Math.round(seconds % 60);\n      return `${minutes}m ${remainingSeconds}s`;\n    };\n\n    const getStatusIcon = () => {\n      switch (status) {\n        case \"success\":\n          return <CheckCircle className=\"h-5 w-5 text-semantic-success\" />;\n        case \"error\":\n          return <AlertCircle className=\"h-5 w-5 text-semantic-danger\" />;\n        case \"uploading\":\n          return <Spinner className=\"h-5 w-5 text-brand-primary animate-spin\" />;\n        case \"processing\":\n          return <Clock className=\"h-5 w-5 text-brand-primary animate-pulse\" />;\n        default:\n          return <Clock className=\"h-5 w-5 text-fg-muted\" />;\n      }\n    };\n\n    const getStatusMessage = () => {\n      if (error) return error;\n      if (success) return success;\n      if (status === \"uploading\") return `Uploading... ${Math.round(progress)}%`;\n      if (status === \"processing\") return \"Processing file...\";\n      if (status === \"success\") return \"Upload complete!\";\n      if (status === \"error\") return \"Upload failed\";\n      return \"Ready to upload\";\n    };\n\n    const getProgressColor = () => {\n      switch (status) {\n        case \"success\":\n          return \"bg-semantic-success\";\n        case \"error\":\n          return \"bg-semantic-danger\";\n        case \"uploading\":\n        case \"processing\":\n          return \"bg-brand-primary\";\n        default:\n          return \"bg-fg-muted\";\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(uploadProgressVariants({ variant, size }), className)}\n        {...props}\n      >\n        {/* Header */}\n        <div className=\"flex items-center gap-3 mb-3\">\n          {getStatusIcon()}\n          <div className=\"flex-1 min-w-0\">\n            {fileName && <p className=\"text-sm font-medium text-fg-default truncate\">{fileName}</p>}\n            <p className=\"text-sm text-fg-muted\">{getStatusMessage()}</p>\n          </div>\n          {showDetails && fileSize && (\n            <span className=\"text-xs text-fg-muted\">{formatFileSize(fileSize)}</span>\n          )}\n        </div>\n\n        {/* Progress Bar */}\n        <div className=\"space-y-2\">\n          <div className=\"w-full bg-bg-muted rounded-full h-2 overflow-hidden\">\n            <div\n              className={cn(\"h-full transition-all duration-300 ease-out\", getProgressColor())}\n              style={{ width: `${Math.min(100, Math.max(0, progress))}%` }}\n            />\n          </div>\n\n          {/* Progress Text */}\n          <div className=\"flex items-center justify-between text-xs text-fg-muted\">\n            <span>{Math.round(progress)}%</span>\n            {showEstimates && speed && timeRemaining && status === \"uploading\" && (\n              <div className=\"flex items-center gap-2\">\n                <span>{formatSpeed(speed)}</span>\n                <span>•</span>\n                <span>{formatTime(timeRemaining)} remaining</span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Additional Details */}\n        {showDetails && (\n          <div className=\"mt-3 pt-3 border-t border-border-subtle\">\n            <div className=\"flex items-center justify-between text-xs text-fg-muted\">\n              <span>Status: {status}</span>\n              {speed && <span>Speed: {formatSpeed(speed)}</span>}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nUploadProgress.displayName = \"UploadProgress\";\n\nexport { UploadProgress };\n","\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { AlertCircle, AlertTriangle, CheckCircle, Info, X } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface ValidationFeedbackProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof validationFeedbackVariants> {\n  /**\n   * Validation status\n   */\n  status?: \"valid\" | \"invalid\" | \"warning\" | \"info\";\n  /**\n   * Error messages\n   */\n  errors?: string[];\n  /**\n   * Warning messages\n   */\n  warnings?: string[];\n  /**\n   * Success messages\n   */\n  success?: string[];\n  /**\n   * Info messages\n   */\n  info?: string[];\n  /**\n   * Whether to show icons\n   */\n  showIcons?: boolean;\n  /**\n   * Whether to show close button\n   */\n  showClose?: boolean;\n  /**\n   * Callback when close button is clicked\n   */\n  onClose?: () => void;\n  /**\n   * Maximum number of messages to show\n   */\n  maxMessages?: number;\n}\n\nconst validationFeedbackVariants = cva(\"rounded-lg border p-3 space-y-2\", {\n  variants: {\n    variant: {\n      valid: \"bg-semantic-success/10 border-semantic-success text-semantic-success\",\n      invalid: \"bg-semantic-danger/10 border-semantic-danger text-semantic-danger\",\n      warning: \"bg-semantic-warning/10 border-semantic-warning text-semantic-warning\",\n      info: \"bg-semantic-info/10 border-semantic-info text-semantic-info\",\n    },\n    size: {\n      sm: \"p-2 text-sm\",\n      md: \"p-3 text-sm\",\n      lg: \"p-4 text-base\",\n    },\n  },\n  defaultVariants: {\n    variant: \"info\",\n    size: \"md\",\n  },\n});\n\nconst ValidationFeedback = forwardRef<HTMLDivElement, ValidationFeedbackProps>(\n  (\n    {\n      className,\n      status = \"info\",\n      errors = [],\n      warnings = [],\n      success = [],\n      info = [],\n      showIcons = true,\n      showClose = false,\n      onClose,\n      maxMessages = 5,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const getStatusIcon = () => {\n      switch (status) {\n        case \"valid\":\n          return <CheckCircle className=\"h-4 w-4\" />;\n        case \"invalid\":\n          return <AlertCircle className=\"h-4 w-4\" />;\n        case \"warning\":\n          return <AlertTriangle className=\"h-4 w-4\" />;\n        default:\n          return <Info className=\"h-4 w-4\" />;\n      }\n    };\n\n    const getStatusColor = () => {\n      switch (status) {\n        case \"valid\":\n          return \"text-semantic-success\";\n        case \"invalid\":\n          return \"text-semantic-danger\";\n        case \"warning\":\n          return \"text-semantic-warning\";\n        default:\n          return \"text-semantic-info\";\n      }\n    };\n\n    const getMessages = () => {\n      const allMessages = [\n        ...errors.map((msg) => ({ type: \"error\", message: msg })),\n        ...warnings.map((msg) => ({ type: \"warning\", message: msg })),\n        ...success.map((msg) => ({ type: \"success\", message: msg })),\n        ...info.map((msg) => ({ type: \"info\", message: msg })),\n      ];\n\n      return allMessages.slice(0, maxMessages);\n    };\n\n    const messages = getMessages();\n\n    if (messages.length === 0) {\n      return null;\n    }\n\n    const getVariant = () => {\n      if (errors.length > 0) return \"invalid\";\n      if (warnings.length > 0) return \"warning\";\n      if (success.length > 0) return \"valid\";\n      return variant || \"info\";\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(validationFeedbackVariants({ variant: getVariant(), size }), className)}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        {/* Header */}\n        <div className=\"flex items-start gap-2\">\n          {showIcons && <div className=\"flex-shrink-0 mt-0.5\">{getStatusIcon()}</div>}\n          <div className=\"flex-1 min-w-0\">\n            <div className=\"space-y-1\">\n              {messages.map((message, index) => (\n                <div\n                  key={`${message.type}-${index}-${message.message.slice(0, 10)}`}\n                  className=\"flex items-start gap-2\"\n                >\n                  {showIcons && (\n                    <div className=\"flex-shrink-0 mt-0.5\">\n                      {message.type === \"error\" && <AlertCircle className=\"h-3 w-3\" />}\n                      {message.type === \"warning\" && <AlertTriangle className=\"h-3 w-3\" />}\n                      {message.type === \"success\" && <CheckCircle className=\"h-3 w-3\" />}\n                      {message.type === \"info\" && <Info className=\"h-3 w-3\" />}\n                    </div>\n                  )}\n                  <p className=\"text-sm leading-relaxed\">{message.message}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n          {showClose && onClose && (\n            <button\n              type=\"button\"\n              onClick={onClose}\n              className=\"flex-shrink-0 p-1 hover:bg-bg-hover rounded transition-colors\"\n              aria-label=\"Close feedback\"\n            >\n              <X className=\"h-4 w-4\" />\n            </button>\n          )}\n        </div>\n\n        {/* Additional Messages Indicator */}\n        {messages.length >= maxMessages && (\n          <p className=\"text-xs opacity-75\">\n            {messages.length - maxMessages} more message\n            {messages.length - maxMessages > 1 ? \"s\" : \"\"}...\n          </p>\n        )}\n      </div>\n    );\n  },\n);\n\nValidationFeedback.displayName = \"ValidationFeedback\";\n\nexport { ValidationFeedback };\n","\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { Archive, Check, Clock, Edit, Globe, MoreHorizontal, X } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport type AssetStatus = \"draft\" | \"processing\" | \"ready\" | \"error\" | \"archived\" | \"published\";\n\nexport interface AssetTileData {\n  id: string;\n  title: string;\n  artist: string;\n  coverUrl?: string;\n  status: AssetStatus;\n  createdAt: Date;\n  updatedAt: Date;\n  isProcessing?: boolean;\n  hasError?: boolean;\n  progress?: number;\n  errorMessage?: string;\n  price?: { currency: string; amount: number };\n  duration?: number;\n  bpm?: number;\n  key?: string;\n  publishedAt?: Date;\n  archivedAt?: Date;\n  sales?: number;\n  views?: number;\n}\n\nexport interface AssetTileProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClick\" | \"onSelect\">,\n    VariantProps<typeof assetTileVariants> {\n  asset: AssetTileData;\n  isSelected?: boolean;\n  showActions?: boolean;\n  disabled?: boolean;\n  onSelect?: (id: string) => void;\n  onEdit?: (id: string) => void;\n  onDelete?: (id: string) => void;\n  onPublish?: (id: string) => void;\n  onArchive?: (id: string) => void;\n  onUnarchive?: (id: string) => void;\n  onDuplicate?: (id: string) => void;\n}\n\nconst assetTileVariants = cva(\n  \"relative flex flex-col rounded-lg border transition-all duration-200 cursor-pointer group\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-bg-elevated border-border-subtle hover:border-brand-primary\",\n        selected: \"bg-bg-elevated border-brand-primary ring-2 ring-brand-ring\",\n        disabled: \"bg-bg-muted border-border-subtle opacity-50 cursor-not-allowed\",\n      },\n      size: {\n        sm: \"w-48 h-64\",\n        md: \"w-56 h-72\",\n        lg: \"w-64 h-80\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst getStatusIcon = (status: AssetStatus) => {\n  switch (status) {\n    case \"draft\":\n      return <Edit className=\"w-4 h-4\" />;\n    case \"processing\":\n      return <Clock className=\"w-4 h-4\" />;\n    case \"ready\":\n      return <Check className=\"w-4 h-4\" />;\n    case \"error\":\n      return <X className=\"w-4 h-4\" />;\n    case \"archived\":\n      return <Archive className=\"w-4 h-4\" />;\n    case \"published\":\n      return <Globe className=\"w-4 h-4\" />;\n    default:\n      return null;\n  }\n};\n\nconst getStatusColor = (status: AssetStatus) => {\n  switch (status) {\n    case \"draft\":\n      return \"text-fg-muted\";\n    case \"processing\":\n      return \"text-warning\";\n    case \"ready\":\n      return \"text-semantic-success\";\n    case \"error\":\n      return \"text-semantic-danger\";\n    case \"archived\":\n      return \"text-fg-muted\";\n    case \"published\":\n      return \"text-semantic-success\";\n    default:\n      return \"text-fg-muted\";\n  }\n};\n\nconst formatDuration = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n};\n\nconst formatFileSize = (bytes: number) => {\n  const mb = bytes / (1024 * 1024);\n  return `${mb.toFixed(1)} MB`;\n};\n\nconst formatDate = (date: Date) => {\n  const now = new Date();\n  const diff = now.getTime() - date.getTime();\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n  if (days === 0) return \"Today\";\n  if (days === 1) return \"Yesterday\";\n  if (days < 7) return `${days} days ago`;\n  if (days < 30) return `${Math.floor(days / 7)} weeks ago`;\n  return `${Math.floor(days / 30)} months ago`;\n};\n\nconst AssetTile = forwardRef<HTMLDivElement, AssetTileProps>(\n  (\n    {\n      className,\n      asset,\n      isSelected = false,\n      showActions = true,\n      disabled = false,\n      variant,\n      size,\n      onSelect,\n      onEdit,\n      onDelete,\n      onPublish,\n      onArchive,\n      onUnarchive,\n      onDuplicate,\n      ...props\n    },\n    ref,\n  ) => {\n    const handleClick = () => {\n      if (asset.status === \"processing\") return;\n      onSelect?.(asset.id);\n    };\n\n    const handleActionClick = (e: React.MouseEvent) => {\n      e.stopPropagation();\n    };\n\n    const isDisabled = disabled || asset.status === \"processing\" || asset.hasError;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          assetTileVariants({ variant: isSelected ? \"selected\" : variant }),\n          size,\n          isDisabled && \"opacity-50 cursor-not-allowed\",\n          className,\n        )}\n        onClick={handleClick}\n        {...props}\n      >\n        {/* Cover Image */}\n        <div className=\"relative w-full h-3/5 rounded-t-lg overflow-hidden\">\n          {asset.coverUrl ? (\n            <img\n              src={asset.coverUrl}\n              alt={`${asset.title} cover`}\n              className=\"w-full h-full object-cover\"\n            />\n          ) : (\n            <div className=\"w-full h-full bg-bg-muted flex items-center justify-center\">\n              <div className=\"text-fg-muted text-4xl\">🎵</div>\n            </div>\n          )}\n\n          {/* Status Badge */}\n          <div className=\"absolute top-2 left-2\">\n            <div\n              className={cn(\n                \"flex items-center gap-1 px-2 py-1 rounded-full text-xs font-medium\",\n                \"bg-bg-elevated/90 backdrop-blur-sm\",\n                getStatusColor(asset.status),\n              )}\n            >\n              {getStatusIcon(asset.status)}\n              <span className=\"capitalize\">{asset.status}</span>\n            </div>\n          </div>\n\n          {/* Progress Bar (for processing) */}\n          {asset.isProcessing && asset.progress !== undefined && (\n            <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-bg-muted\">\n              <div\n                className=\"h-full bg-brand-primary transition-all duration-300\"\n                style={{ width: `${asset.progress}%` }}\n              />\n            </div>\n          )}\n\n          {/* Error Overlay */}\n          {asset.hasError && (\n            <div className=\"absolute inset-0 bg-semantic-danger/20 flex items-center justify-center\">\n              <div className=\"text-semantic-danger text-sm font-medium text-center\">\n                {asset.errorMessage || \"Upload failed\"}\n              </div>\n            </div>\n          )}\n\n          {/* Actions Menu */}\n          {showActions && !isDisabled && (\n            <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n              <button\n                type=\"button\"\n                onClick={handleActionClick}\n                className=\"p-1 rounded-full bg-bg-elevated/90 backdrop-blur-sm hover:bg-bg-hover\"\n                aria-label=\"Asset actions\"\n              >\n                <MoreHorizontal className=\"w-4 h-4 text-fg-muted\" />\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 p-3 space-y-2\">\n          {/* Title and Artist */}\n          <div className=\"space-y-1\">\n            <h3 className=\"font-medium text-fg truncate\" title={asset.title}>\n              {asset.title}\n            </h3>\n            <p className=\"text-sm text-fg-muted truncate\" title={asset.artist}>\n              {asset.artist}\n            </p>\n          </div>\n\n          {/* Metadata */}\n          <div className=\"space-y-1 text-xs text-fg-muted\">\n            {asset.duration && (\n              <div className=\"flex items-center justify-between\">\n                <span>Duration</span>\n                <span>{formatDuration(asset.duration)}</span>\n              </div>\n            )}\n            {asset.bpm && (\n              <div className=\"flex items-center justify-between\">\n                <span>BPM</span>\n                <span>{asset.bpm}</span>\n              </div>\n            )}\n            {asset.key && (\n              <div className=\"flex items-center justify-between\">\n                <span>Key</span>\n                <span>{asset.key}</span>\n              </div>\n            )}\n            {asset.price && (\n              <div className=\"flex items-center justify-between\">\n                <span>Price</span>\n                <span className=\"font-medium text-fg\">\n                  {asset.price.currency} {asset.price.amount}\n                </span>\n              </div>\n            )}\n          </div>\n\n          {/* Stats (for published assets) */}\n          {asset.status === \"published\" && (asset.sales || asset.views) && (\n            <div className=\"flex items-center gap-3 text-xs text-fg-muted\">\n              {asset.sales && <span>{asset.sales} sales</span>}\n              {asset.views && <span>{asset.views} views</span>}\n            </div>\n          )}\n\n          {/* Timestamp */}\n          <div className=\"text-xs text-fg-muted\">{formatDate(asset.updatedAt)}</div>\n        </div>\n      </div>\n    );\n  },\n);\n\nAssetTile.displayName = \"AssetTile\";\n\nexport { AssetTile };\n","\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { Archive, Check, Clock, Edit, Globe, X } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport type AssetStatusType = \"draft\" | \"processing\" | \"ready\" | \"error\" | \"archived\" | \"published\";\n\nexport interface AssetStatusProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof assetStatusVariants> {\n  status: AssetStatusType;\n  showIcon?: boolean;\n  showLabel?: boolean;\n  isProcessing?: boolean;\n  progress?: number;\n  errorMessage?: string;\n}\n\nconst assetStatusVariants = cva(\n  \"inline-flex items-center gap-1.5 px-2 py-1 rounded-full text-xs font-medium transition-colors\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-bg-elevated text-fg-muted\",\n        success: \"bg-semantic-success/20 text-semantic-success\",\n        warning: \"bg-warning/20 text-warning\",\n        destructive: \"bg-semantic-danger/20 text-semantic-danger\",\n        muted: \"bg-bg-muted text-fg-muted\",\n      },\n      size: {\n        sm: \"text-xs px-1.5 py-0.5\",\n        md: \"text-xs px-2 py-1\",\n        lg: \"text-sm px-2.5 py-1.5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst getStatusConfig = (status: AssetStatusType) => {\n  switch (status) {\n    case \"draft\":\n      return {\n        icon: Edit,\n        label: \"Draft\",\n        variant: \"muted\" as const,\n        color: \"text-fg-muted\",\n      };\n    case \"processing\":\n      return {\n        icon: Clock,\n        label: \"Processing\",\n        variant: \"warning\" as const,\n        color: \"text-warning\",\n      };\n    case \"ready\":\n      return {\n        icon: Check,\n        label: \"Ready\",\n        variant: \"success\" as const,\n        color: \"text-semantic-success\",\n      };\n    case \"error\":\n      return {\n        icon: X,\n        label: \"Error\",\n        variant: \"destructive\" as const,\n        color: \"text-semantic-danger\",\n      };\n    case \"archived\":\n      return {\n        icon: Archive,\n        label: \"Archived\",\n        variant: \"muted\" as const,\n        color: \"text-fg-muted\",\n      };\n    case \"published\":\n      return {\n        icon: Globe,\n        label: \"Published\",\n        variant: \"success\" as const,\n        color: \"text-semantic-success\",\n      };\n    default:\n      return {\n        icon: Edit,\n        label: \"Unknown\",\n        variant: \"muted\" as const,\n        color: \"text-fg-muted\",\n      };\n  }\n};\n\nconst AssetStatus = forwardRef<HTMLDivElement, AssetStatusProps>(\n  (\n    {\n      className,\n      status,\n      showIcon = true,\n      showLabel = true,\n      isProcessing = false,\n      progress,\n      errorMessage,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const config = getStatusConfig(status);\n    const Icon = config.icon;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(assetStatusVariants({ variant: variant || config.variant, size }), className)}\n        {...props}\n      >\n        {showIcon && <Icon className=\"w-3 h-3 flex-shrink-0\" aria-hidden=\"true\" />}\n        {showLabel && <span className=\"capitalize\">{config.label}</span>}\n        {isProcessing && progress !== undefined && (\n          <span className=\"ml-1 text-xs opacity-75\">{Math.round(progress)}%</span>\n        )}\n        {status === \"error\" && errorMessage && (\n          <span className=\"ml-1 text-xs opacity-75\" title={errorMessage}>\n            !\n          </span>\n        )}\n      </div>\n    );\n  },\n);\n\nAssetStatus.displayName = \"AssetStatus\";\n\nexport { AssetStatus };\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport { Save, X } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface AssetMetadata {\n  title: string;\n  artist: string;\n  bpm: number;\n  key: string;\n  genre: string;\n  mood: string;\n  tags: string[];\n  description: string;\n  duration: number;\n  fileSize: number;\n  sampleRate: number;\n  bitDepth: number;\n  channels: number;\n  tempo?: number;\n  timeSignature?: string;\n  energy?: number;\n  valence?: number;\n}\n\nexport interface MetadataPanelProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    VariantProps<typeof metadataPanelVariants> {\n  metadata: AssetMetadata;\n  isEditing?: boolean;\n  isSaving?: boolean;\n  hasError?: boolean;\n  errorMessage?: string;\n  validationErrors?: Record<string, string[]>;\n  onChange?: (metadata: AssetMetadata) => void;\n  onSave?: (metadata: AssetMetadata) => void;\n  onCancel?: () => void;\n  onEdit?: () => void;\n}\n\nconst metadataPanelVariants = cva(\"rounded-lg border transition-all duration-200\", {\n  variants: {\n    variant: {\n      default: \"bg-bg-elevated border-border-subtle\",\n      editing: \"bg-bg-elevated border-brand-primary ring-2 ring-brand-ring\",\n      error: \"bg-bg-elevated border-semantic-danger ring-2 ring-semantic-danger/20\",\n    },\n    size: {\n      sm: \"p-3\",\n      md: \"p-4\",\n      lg: \"p-6\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n});\n\nconst formatFileSize = (bytes: number) => {\n  const mb = bytes / (1024 * 1024);\n  return `${mb.toFixed(1)} MB`;\n};\n\nconst formatDuration = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n};\n\nconst MetadataPanel = forwardRef<HTMLDivElement, MetadataPanelProps>(\n  (\n    {\n      className,\n      metadata,\n      isEditing = false,\n      isSaving = false,\n      hasError = false,\n      errorMessage,\n      validationErrors = {},\n      onChange,\n      onSave,\n      onCancel,\n      onEdit,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [localMetadata, setLocalMetadata] = useState(metadata);\n\n    const handleFieldChange = (field: keyof AssetMetadata, value: string | number | string[]) => {\n      const updated = { ...localMetadata, [field]: value };\n      setLocalMetadata(updated);\n      onChange?.(updated);\n    };\n\n    const handleSave = () => {\n      onSave?.(localMetadata);\n    };\n\n    const handleCancel = () => {\n      setLocalMetadata(metadata);\n      onCancel?.();\n    };\n\n    const getFieldError = (field: string) => {\n      return validationErrors[field]?.[0] || null;\n    };\n\n    const currentVariant = hasError ? \"error\" : isEditing ? \"editing\" : variant;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(metadataPanelVariants({ variant: currentVariant, size }), className)}\n        {...props}\n      >\n        {/* Header */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <h3 className=\"text-lg font-semibold text-fg\">Asset Metadata</h3>\n          <div className=\"flex items-center gap-2\">\n            {isEditing ? (\n              <>\n                <button\n                  type=\"button\"\n                  onClick={handleSave}\n                  disabled={isSaving}\n                  className=\"flex items-center gap-1 px-3 py-1.5 text-sm font-medium rounded-md bg-brand-primary text-fg-inverse hover:bg-brand-primary-hover disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  <Save className=\"w-4 h-4\" />\n                  {isSaving ? \"Saving...\" : \"Save\"}\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleCancel}\n                  disabled={isSaving}\n                  className=\"flex items-center gap-1 px-3 py-1.5 text-sm font-medium rounded-md bg-bg-muted text-fg-muted hover:bg-bg-hover disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                >\n                  <X className=\"w-4 h-4\" />\n                  Cancel\n                </button>\n              </>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={onEdit}\n                className=\"px-3 py-1.5 text-sm font-medium rounded-md bg-bg-muted text-fg-muted hover:bg-bg-hover transition-colors\"\n              >\n                Edit\n              </button>\n            )}\n          </div>\n        </div>\n\n        {/* Error Message */}\n        {hasError && errorMessage && (\n          <div className=\"mb-4 p-3 rounded-md bg-semantic-danger/10 border border-semantic-danger/20\">\n            <p className=\"text-sm text-semantic-danger\">{errorMessage}</p>\n          </div>\n        )}\n\n        {/* Metadata Fields */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          {/* Basic Info */}\n          <div className=\"space-y-4\">\n            <div>\n              <label htmlFor=\"title\" className=\"block text-sm font-medium text-fg mb-1\">\n                Title\n              </label>\n              {isEditing ? (\n                <input\n                  id=\"title\"\n                  type=\"text\"\n                  value={localMetadata.title}\n                  onChange={(e) => handleFieldChange(\"title\", e.target.value)}\n                  className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                  placeholder=\"Enter track title\"\n                />\n              ) : (\n                <p className=\"text-sm text-fg-muted\">{metadata.title}</p>\n              )}\n              {getFieldError(\"title\") && (\n                <p className=\"text-xs text-semantic-danger mt-1\">{getFieldError(\"title\")}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"artist\" className=\"block text-sm font-medium text-fg mb-1\">\n                Artist\n              </label>\n              {isEditing ? (\n                <input\n                  id=\"artist\"\n                  type=\"text\"\n                  value={localMetadata.artist}\n                  onChange={(e) => handleFieldChange(\"artist\", e.target.value)}\n                  className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                  placeholder=\"Enter artist name\"\n                />\n              ) : (\n                <p className=\"text-sm text-fg-muted\">{metadata.artist}</p>\n              )}\n              {getFieldError(\"artist\") && (\n                <p className=\"text-xs text-semantic-danger mt-1\">{getFieldError(\"artist\")}</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"description\" className=\"block text-sm font-medium text-fg mb-1\">\n                Description\n              </label>\n              {isEditing ? (\n                <textarea\n                  id=\"description\"\n                  value={localMetadata.description}\n                  onChange={(e) => handleFieldChange(\"description\", e.target.value)}\n                  rows={3}\n                  className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent resize-none\"\n                  placeholder=\"Enter track description\"\n                />\n              ) : (\n                <p className=\"text-sm text-fg-muted\">{metadata.description || \"No description\"}</p>\n              )}\n              {getFieldError(\"description\") && (\n                <p className=\"text-xs text-semantic-danger mt-1\">{getFieldError(\"description\")}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Technical Info */}\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-3\">\n              <div>\n                <label htmlFor=\"bpm\" className=\"block text-sm font-medium text-fg mb-1\">\n                  BPM\n                </label>\n                {isEditing ? (\n                  <input\n                    id=\"bpm\"\n                    type=\"number\"\n                    value={localMetadata.bpm}\n                    onChange={(e) => handleFieldChange(\"bpm\", Number(e.target.value))}\n                    className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                    placeholder=\"120\"\n                  />\n                ) : (\n                  <p className=\"text-sm text-fg-muted\">{metadata.bpm || \"—\"}</p>\n                )}\n              </div>\n\n              <div>\n                <label htmlFor=\"key\" className=\"block text-sm font-medium text-fg mb-1\">\n                  Key\n                </label>\n                {isEditing ? (\n                  <input\n                    id=\"key\"\n                    type=\"text\"\n                    value={localMetadata.key}\n                    onChange={(e) => handleFieldChange(\"key\", e.target.value)}\n                    className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                    placeholder=\"C\"\n                  />\n                ) : (\n                  <p className=\"text-sm text-fg-muted\">{metadata.key || \"—\"}</p>\n                )}\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-3\">\n              <div>\n                <label htmlFor=\"genre\" className=\"block text-sm font-medium text-fg mb-1\">\n                  Genre\n                </label>\n                {isEditing ? (\n                  <input\n                    id=\"genre\"\n                    type=\"text\"\n                    value={localMetadata.genre}\n                    onChange={(e) => handleFieldChange(\"genre\", e.target.value)}\n                    className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                    placeholder=\"Hip-Hop\"\n                  />\n                ) : (\n                  <p className=\"text-sm text-fg-muted\">{metadata.genre || \"—\"}</p>\n                )}\n              </div>\n\n              <div>\n                <label htmlFor=\"mood\" className=\"block text-sm font-medium text-fg mb-1\">\n                  Mood\n                </label>\n                {isEditing ? (\n                  <input\n                    id=\"mood\"\n                    type=\"text\"\n                    value={localMetadata.mood}\n                    onChange={(e) => handleFieldChange(\"mood\", e.target.value)}\n                    className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                    placeholder=\"Dark\"\n                  />\n                ) : (\n                  <p className=\"text-sm text-fg-muted\">{metadata.mood || \"—\"}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"tags\" className=\"block text-sm font-medium text-fg mb-1\">\n                Tags\n              </label>\n              {isEditing ? (\n                <input\n                  id=\"tags\"\n                  type=\"text\"\n                  value={localMetadata.tags.join(\", \")}\n                  onChange={(e) =>\n                    handleFieldChange(\"tags\", e.target.value.split(\", \").filter(Boolean))\n                  }\n                  className=\"w-full px-3 py-2 text-sm rounded-md bg-bg-muted border border-border-subtle text-fg focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent\"\n                  placeholder=\"trap, dark, 808\"\n                />\n              ) : (\n                <div className=\"flex flex-wrap gap-1\">\n                  {metadata.tags.length > 0 ? (\n                    metadata.tags.map((tag) => (\n                      <span\n                        key={`tag-${tag}-${Date.now()}`}\n                        className=\"inline-flex items-center px-2 py-1 text-xs font-medium rounded-full bg-bg-muted text-fg-muted\"\n                      >\n                        {tag}\n                      </span>\n                    ))\n                  ) : (\n                    <span className=\"text-sm text-fg-muted\">No tags</span>\n                  )}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Technical Details */}\n        <div className=\"mt-6 pt-4 border-t border-border-subtle\">\n          <h4 className=\"text-sm font-medium text-fg mb-3\">Technical Details</h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"text-fg-muted\">Duration</span>\n              <p className=\"text-fg\">{formatDuration(metadata.duration)}</p>\n            </div>\n            <div>\n              <span className=\"text-fg-muted\">File Size</span>\n              <p className=\"text-fg\">{formatFileSize(metadata.fileSize)}</p>\n            </div>\n            <div>\n              <span className=\"text-fg-muted\">Sample Rate</span>\n              <p className=\"text-fg\">{metadata.sampleRate} Hz</p>\n            </div>\n            <div>\n              <span className=\"text-fg-muted\">Bit Depth</span>\n              <p className=\"text-fg\">{metadata.bitDepth}-bit</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\nMetadataPanel.displayName = \"MetadataPanel\";\n\nexport { MetadataPanel };\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport {\n  Archive,\n  Copy,\n  Edit,\n  Globe,\n  MoreHorizontal,\n  MoreVertical,\n  Trash2,\n  Unarchive,\n} from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport type AssetActionType = \"edit\" | \"delete\" | \"publish\" | \"archive\" | \"unarchive\" | \"duplicate\";\n\nexport interface AssetAction {\n  type: AssetActionType;\n  label: string;\n  icon: React.ComponentType<{ className?: string }>;\n  isDestructive?: boolean;\n  isDisabled?: boolean;\n  onClick: () => void;\n}\n\nexport interface AssetActionsProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onToggle\">,\n    VariantProps<typeof assetActionsVariants> {\n  actions: AssetAction[];\n  isOpen?: boolean;\n  onToggle?: (isOpen: boolean) => void;\n  trigger?: React.ReactNode;\n  placement?: \"top\" | \"bottom\" | \"left\" | \"right\";\n  align?: \"start\" | \"center\" | \"end\";\n}\n\nconst assetActionsVariants = cva(\"relative inline-flex items-center\", {\n  variants: {\n    variant: {\n      default: \"\",\n      compact: \"text-sm\",\n      minimal: \"text-xs\",\n    },\n    size: {\n      sm: \"h-8\",\n      md: \"h-10\",\n      lg: \"h-12\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n});\n\nconst getActionIcon = (type: AssetActionType) => {\n  switch (type) {\n    case \"edit\":\n      return Edit;\n    case \"delete\":\n      return Trash2;\n    case \"publish\":\n      return Globe;\n    case \"archive\":\n      return Archive;\n    case \"unarchive\":\n      return Unarchive;\n    case \"duplicate\":\n      return Copy;\n    default:\n      return MoreHorizontal;\n  }\n};\n\nconst getActionLabel = (type: AssetActionType) => {\n  switch (type) {\n    case \"edit\":\n      return \"Edit\";\n    case \"delete\":\n      return \"Delete\";\n    case \"publish\":\n      return \"Publish\";\n    case \"archive\":\n      return \"Archive\";\n    case \"unarchive\":\n      return \"Unarchive\";\n    case \"duplicate\":\n      return \"Duplicate\";\n    default:\n      return \"Action\";\n  }\n};\n\nconst AssetActions = forwardRef<HTMLDivElement, AssetActionsProps>(\n  (\n    {\n      className,\n      actions,\n      isOpen: controlledIsOpen,\n      onToggle,\n      trigger,\n      placement = \"bottom\",\n      align = \"end\",\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [internalIsOpen, setInternalIsOpen] = useState(false);\n    const isOpen = controlledIsOpen ?? internalIsOpen;\n\n    const handleToggle = () => {\n      const newIsOpen = !isOpen;\n      setInternalIsOpen(newIsOpen);\n      onToggle?.(newIsOpen);\n    };\n\n    const handleActionClick = (action: AssetAction) => {\n      if (!action.isDisabled) {\n        action.onClick();\n        setInternalIsOpen(false);\n        onToggle?.(false);\n      }\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === \"Escape\") {\n        setInternalIsOpen(false);\n        onToggle?.(false);\n      }\n    };\n\n    const getPlacementClasses = () => {\n      const baseClasses = \"absolute z-50 min-w-48\";\n\n      switch (placement) {\n        case \"top\":\n          return `${baseClasses} bottom-full mb-2`;\n        case \"bottom\":\n          return `${baseClasses} top-full mt-2`;\n        case \"left\":\n          return `${baseClasses} right-full mr-2`;\n        case \"right\":\n          return `${baseClasses} left-full ml-2`;\n        default:\n          return `${baseClasses} top-full mt-2`;\n      }\n    };\n\n    const getAlignClasses = () => {\n      switch (align) {\n        case \"start\":\n          return \"left-0\";\n        case \"center\":\n          return \"left-1/2 -translate-x-1/2\";\n        case \"end\":\n          return \"right-0\";\n        default:\n          return \"right-0\";\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(assetActionsVariants({ variant, size }), className)}\n        onKeyDown={handleKeyDown}\n        {...props}\n      >\n        {/* Trigger */}\n        <button\n          type=\"button\"\n          onClick={handleToggle}\n          className=\"flex items-center justify-center w-full h-full rounded-md bg-bg-elevated border border-border-subtle hover:bg-bg-hover focus:outline-none focus:ring-2 focus:ring-brand-accent focus:border-transparent transition-colors\"\n          aria-label=\"Asset actions\"\n          aria-expanded={isOpen}\n          aria-haspopup=\"true\"\n        >\n          {trigger || <MoreVertical className=\"w-4 h-4 text-fg-muted\" />}\n        </button>\n\n        {/* Actions Menu */}\n        {isOpen && (\n          <div\n            className={cn(\n              getPlacementClasses(),\n              getAlignClasses(),\n              \"bg-bg-elevated border border-border-subtle rounded-lg shadow-lg py-1\",\n            )}\n            role=\"menu\"\n            aria-orientation=\"vertical\"\n          >\n            {actions.map((action, index) => {\n              const Icon = action.icon;\n              const isDisabled = action.isDisabled;\n\n              return (\n                <button\n                  key={`action-${action.type}-${index}`}\n                  type=\"button\"\n                  onClick={() => handleActionClick(action)}\n                  disabled={isDisabled}\n                  className={cn(\n                    \"w-full flex items-center gap-3 px-3 py-2 text-sm text-left transition-colors\",\n                    \"hover:bg-bg-hover focus:bg-bg-hover focus:outline-none\",\n                    isDisabled && \"opacity-50 cursor-not-allowed\",\n                    action.isDestructive && \"text-semantic-danger hover:text-semantic-danger\",\n                  )}\n                  role=\"menuitem\"\n                  aria-disabled={isDisabled}\n                >\n                  <Icon className=\"w-4 h-4 flex-shrink-0\" />\n                  <span className=\"flex-1\">{action.label}</span>\n                </button>\n              );\n            })}\n          </div>\n        )}\n\n        {/* Backdrop */}\n        {isOpen && (\n          <div\n            className=\"fixed inset-0 z-40\"\n            onClick={() => {\n              setInternalIsOpen(false);\n              onToggle?.(false);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Escape\") {\n                setInternalIsOpen(false);\n                onToggle?.(false);\n              }\n            }}\n            aria-hidden=\"true\"\n          />\n        )}\n      </div>\n    );\n  },\n);\n\nAssetActions.displayName = \"AssetActions\";\n\nexport { AssetActions };\n","\"use client\";\n\nimport { forwardRef } from \"react\";\nimport { Pause, Play, Volume, VolumeX } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface AssetPreviewProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onVolumeChange\">,\n    VariantProps<typeof assetPreviewVariants> {\n  asset: {\n    id: string;\n    title: string;\n    artist: string;\n    coverUrl?: string;\n    duration?: number;\n    waveform?: number[];\n    isPlaying?: boolean;\n    currentTime?: number;\n    volume?: number;\n    isMuted?: boolean;\n  };\n  onPlay?: () => void;\n  onPause?: () => void;\n  onSeek?: (time: number) => void;\n  onVolumeChange?: (volume: number) => void;\n  onMute?: () => void;\n  onUnmute?: () => void;\n}\n\nconst assetPreviewVariants = cva(\n  \"relative flex flex-col rounded-lg border bg-bg-elevated border-border-subtle overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        compact: \"p-3\",\n        detailed: \"p-4\",\n      },\n      size: {\n        sm: \"w-64 h-48\",\n        md: \"w-80 h-60\",\n        lg: \"w-96 h-72\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst formatTime = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n};\n\nconst formatDuration = (seconds: number) => {\n  const mins = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${mins}:${secs.toString().padStart(2, \"0\")}`;\n};\n\nconst AssetPreview = forwardRef<HTMLDivElement, AssetPreviewProps>(\n  (\n    {\n      className,\n      asset,\n      onPlay,\n      onPause,\n      onSeek,\n      onVolumeChange,\n      onMute,\n      onUnmute,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const progress =\n      asset.duration && asset.currentTime ? (asset.currentTime / asset.duration) * 100 : 0;\n\n    const handlePlayPause = () => {\n      if (asset.isPlaying) {\n        onPause?.();\n      } else {\n        onPlay?.();\n      }\n    };\n\n    const handleSeek = (e: React.MouseEvent<HTMLDivElement>) => {\n      if (!asset.duration || !onSeek) return;\n\n      const rect = e.currentTarget.getBoundingClientRect();\n      const x = e.clientX - rect.left;\n      const percentage = x / rect.width;\n      const newTime = percentage * asset.duration;\n\n      onSeek(newTime);\n    };\n\n    const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const volume = Number.parseFloat(e.target.value);\n      onVolumeChange?.(volume);\n    };\n\n    const handleMuteToggle = () => {\n      if (asset.isMuted) {\n        onUnmute?.();\n      } else {\n        onMute?.();\n      }\n    };\n\n    return (\n      <div ref={ref} className={cn(assetPreviewVariants({ variant, size }), className)} {...props}>\n        {/* Cover/Thumbnail */}\n        <div className=\"relative w-full h-32 overflow-hidden\">\n          {asset.coverUrl ? (\n            <img\n              src={asset.coverUrl}\n              alt={`${asset.title} cover`}\n              className=\"w-full h-full object-cover\"\n            />\n          ) : (\n            <div className=\"w-full h-full bg-bg-muted flex items-center justify-center\">\n              <div className=\"text-fg-muted text-4xl\">🎵</div>\n            </div>\n          )}\n\n          {/* Play/Pause Overlay */}\n          <div className=\"absolute inset-0 flex items-center justify-center bg-black/20 opacity-0 hover:opacity-100 transition-opacity\">\n            <button\n              type=\"button\"\n              onClick={handlePlayPause}\n              className=\"flex items-center justify-center w-12 h-12 rounded-full bg-white/90 hover:bg-white transition-colors\"\n              aria-label={asset.isPlaying ? \"Pause\" : \"Play\"}\n            >\n              {asset.isPlaying ? (\n                <Pause className=\"w-6 h-6 text-fg\" />\n              ) : (\n                <Play className=\"w-6 h-6 text-fg ml-0.5\" />\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"flex-1 p-4 space-y-3\">\n          {/* Title and Artist */}\n          <div className=\"space-y-1\">\n            <h3 className=\"font-medium text-fg truncate\" title={asset.title}>\n              {asset.title}\n            </h3>\n            <p className=\"text-sm text-fg-muted truncate\" title={asset.artist}>\n              {asset.artist}\n            </p>\n          </div>\n\n          {/* Waveform */}\n          {asset.waveform && asset.waveform.length > 0 && (\n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between text-xs text-fg-muted\">\n                <span>{asset.currentTime ? formatTime(asset.currentTime) : \"0:00\"}</span>\n                <span>{asset.duration ? formatDuration(asset.duration) : \"0:00\"}</span>\n              </div>\n\n              <div\n                className=\"relative h-8 bg-bg-muted rounded cursor-pointer\"\n                onClick={handleSeek}\n                onKeyDown={(e) => {\n                  if (e.key === \"Enter\" || e.key === \" \") {\n                    e.preventDefault();\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    const x = rect.width / 2; // Center for keyboard navigation\n                    const percentage = x / rect.width;\n                    const newTime = percentage * (asset.duration || 0);\n                    onSeek?.(newTime);\n                  }\n                }}\n                role=\"progressbar\"\n                tabIndex={0}\n                aria-valuenow={progress}\n                aria-valuemin={0}\n                aria-valuemax={100}\n                aria-label=\"Seek bar\"\n              >\n                {/* Waveform */}\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <div className=\"flex items-center gap-0.5 h-4\">\n                    {asset.waveform.slice(0, 50).map((value, index) => (\n                      <div\n                        key={`wave-${value}-${index}-${Date.now()}`}\n                        className=\"bg-fg-muted rounded-sm transition-all duration-200\"\n                        style={{\n                          width: \"2px\",\n                          height: `${Math.max(2, value * 16)}px`,\n                          opacity: index / 50 < progress / 100 ? 1 : 0.3,\n                        }}\n                      />\n                    ))}\n                  </div>\n                </div>\n\n                {/* Progress */}\n                <div\n                  className=\"absolute top-0 left-0 h-full bg-brand-primary transition-all duration-200\"\n                  style={{ width: `${progress}%` }}\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Controls */}\n          <div className=\"flex items-center justify-between\">\n            {/* Play/Pause Button */}\n            <button\n              type=\"button\"\n              onClick={handlePlayPause}\n              className=\"flex items-center justify-center w-8 h-8 rounded-full bg-brand-primary hover:bg-brand-primary-hover text-fg-inverse transition-colors\"\n              aria-label={asset.isPlaying ? \"Pause\" : \"Play\"}\n            >\n              {asset.isPlaying ? (\n                <Pause className=\"w-4 h-4\" />\n              ) : (\n                <Play className=\"w-4 h-4 ml-0.5\" />\n              )}\n            </button>\n\n            {/* Volume Control */}\n            <div className=\"flex items-center gap-2\">\n              <button\n                type=\"button\"\n                onClick={handleMuteToggle}\n                className=\"p-1 rounded hover:bg-bg-hover transition-colors\"\n                aria-label={asset.isMuted ? \"Unmute\" : \"Mute\"}\n              >\n                {asset.isMuted ? (\n                  <VolumeX className=\"w-4 h-4 text-fg-muted\" />\n                ) : (\n                  <Volume className=\"w-4 h-4 text-fg-muted\" />\n                )}\n              </button>\n\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.01\"\n                value={asset.isMuted ? 0 : (asset.volume ?? 1)}\n                onChange={handleVolumeChange}\n                className=\"w-16 h-1 bg-bg-muted rounded-lg appearance-none cursor-pointer slider\"\n                aria-label=\"Volume\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\nAssetPreview.displayName = \"AssetPreview\";\n\nexport { AssetPreview };\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface PriceInputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"onChange\" | \"value\" | \"size\">,\n    VariantProps<typeof priceInputVariants> {\n  value?: number | null;\n  currency?: string;\n  locale?: string;\n  onChange?: (value: number | null) => void;\n  onCurrencyChange?: (currency: string) => void;\n  showCurrency?: boolean;\n  allowNegative?: boolean;\n  precision?: number;\n}\n\nconst priceInputVariants = cva(\n  \"flex items-center gap-2 px-3 py-2 border rounded-md bg-bg-elevated text-fg-default placeholder:text-fg-muted focus:outline-none focus:ring-2 focus:ring-brand-primary/20 focus:border-brand-primary transition-colors\",\n  {\n    variants: {\n      variant: {\n        default: \"border-border-subtle\",\n        error: \"border-semantic-danger focus:ring-semantic-danger/20 focus:border-semantic-danger\",\n        success:\n          \"border-semantic-success focus:ring-semantic-success/20 focus:border-semantic-success\",\n      },\n      size: {\n        sm: \"text-sm px-2 py-1\",\n        md: \"text-base px-3 py-2\",\n        lg: \"text-lg px-4 py-3\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst PriceInput = forwardRef<HTMLInputElement, PriceInputProps>(\n  (\n    {\n      className,\n      value,\n      currency = \"PYUSD\",\n      locale = \"en-US\",\n      onChange,\n      onCurrencyChange,\n      showCurrency = true,\n      allowNegative = false,\n      precision = 2,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [displayValue, setDisplayValue] = useState(\n      value !== undefined && value !== null ? value.toString() : \"\",\n    );\n\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const inputValue = e.target.value;\n      setDisplayValue(inputValue);\n\n      // Parse the numeric value\n      const numericValue = Number.parseFloat(inputValue);\n      if (Number.isNaN(numericValue)) {\n        onChange?.(null);\n        return;\n      }\n\n      // Check for negative values if not allowed\n      if (!allowNegative && numericValue < 0) {\n        return;\n      }\n\n      // Round to specified precision\n      const roundedValue = Math.round(numericValue * 10 ** precision) / 10 ** precision;\n      onChange?.(roundedValue);\n    };\n\n    const formatCurrency = (amount: number, currencyCode: string) => {\n      return new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: currencyCode,\n        minimumFractionDigits: precision,\n        maximumFractionDigits: precision,\n      }).format(amount);\n    };\n\n    return (\n      <div className={cn(priceInputVariants({ variant, size }), className)}>\n        <input\n          ref={ref}\n          type=\"number\"\n          value={displayValue}\n          onChange={handleInputChange}\n          step={1 / 10 ** precision}\n          min={allowNegative ? undefined : 0}\n          placeholder=\"0.00\"\n          className=\"flex-1 bg-transparent border-none outline-none text-fg-default placeholder:text-fg-muted\"\n          {...props}\n        />\n        {showCurrency && (\n          <span className=\"text-sm text-fg-muted font-medium uppercase tracking-wide\">\n            {currency}\n          </span>\n        )}\n      </div>\n    );\n  },\n);\n\nPriceInput.displayName = \"PriceInput\";\n\nexport { PriceInput };\n","\"use client\";\n\nimport { forwardRef, useState } from \"react\";\nimport { ChevronDown } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface CurrencyOption {\n  code: string;\n  name: string;\n  symbol: string;\n  flag?: string;\n}\n\nexport interface CurrencySelectorProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    VariantProps<typeof currencySelectorVariants> {\n  value?: string;\n  onChange?: (currency: string) => void;\n  options?: CurrencyOption[];\n  showFlag?: boolean;\n  showName?: boolean;\n  disabled?: boolean;\n}\n\nconst currencySelectorVariants = cva(\n  \"relative inline-flex items-center justify-between gap-2 px-3 py-2 border rounded-md bg-bg-elevated text-fg-default cursor-pointer hover:bg-bg-muted transition-colors focus:outline-none focus:ring-2 focus:ring-brand-primary/20 focus:border-brand-primary\",\n  {\n    variants: {\n      variant: {\n        default: \"border-border-subtle\",\n        error: \"border-semantic-danger focus:ring-semantic-danger/20 focus:border-semantic-danger\",\n        success:\n          \"border-semantic-success focus:ring-semantic-success/20 focus:border-semantic-success\",\n      },\n      size: {\n        sm: \"text-sm px-2 py-1\",\n        md: \"text-base px-3 py-2\",\n        lg: \"text-lg px-4 py-3\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nconst defaultCurrencies: CurrencyOption[] = [\n  { code: \"PYUSD\", name: \"PayPal USD\", symbol: \"$\", flag: \"🇺🇸\" },\n  { code: \"USD\", name: \"US Dollar\", symbol: \"$\", flag: \"🇺🇸\" },\n  { code: \"EUR\", name: \"Euro\", symbol: \"€\", flag: \"🇪🇺\" },\n  { code: \"GBP\", name: \"British Pound\", symbol: \"£\", flag: \"🇬🇧\" },\n  { code: \"JPY\", name: \"Japanese Yen\", symbol: \"¥\", flag: \"🇯🇵\" },\n  { code: \"CAD\", name: \"Canadian Dollar\", symbol: \"C$\", flag: \"🇨🇦\" },\n  { code: \"AUD\", name: \"Australian Dollar\", symbol: \"A$\", flag: \"🇦🇺\" },\n];\n\nconst CurrencySelector = forwardRef<HTMLDivElement, CurrencySelectorProps>(\n  (\n    {\n      className,\n      value = \"PYUSD\",\n      onChange,\n      options = defaultCurrencies,\n      showFlag = true,\n      showName = false,\n      disabled = false,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const selectedCurrency = options.find((option) => option.code === value) || options[0];\n    const filteredOptions = options.filter(\n      (option) =>\n        option.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        option.code.toLowerCase().includes(searchTerm.toLowerCase()),\n    );\n\n    const handleSelect = (currency: CurrencyOption) => {\n      onChange?.(currency.code);\n      setIsOpen(false);\n      setSearchTerm(\"\");\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (disabled) return;\n\n      switch (e.key) {\n        case \"Enter\":\n        case \" \":\n          e.preventDefault();\n          setIsOpen(!isOpen);\n          break;\n        case \"Escape\":\n          setIsOpen(false);\n          setSearchTerm(\"\");\n          break;\n        case \"ArrowDown\":\n          e.preventDefault();\n          if (!isOpen) {\n            setIsOpen(true);\n          }\n          break;\n        case \"ArrowUp\":\n          e.preventDefault();\n          if (isOpen) {\n            setIsOpen(false);\n          }\n          break;\n      }\n    };\n\n    return (\n      <div ref={ref} className={cn(\"relative\", className)} {...props}>\n        <div\n          className={cn(\n            currencySelectorVariants({ variant, size }),\n            disabled && \"opacity-50 cursor-not-allowed\",\n          )}\n          onClick={() => !disabled && setIsOpen(!isOpen)}\n          onKeyDown={handleKeyDown}\n          tabIndex={disabled ? -1 : 0}\n          // biome-ignore lint/a11y/useSemanticElements: custom dropdown requires ARIA roles for advanced accessibility\n          role=\"combobox\"\n          aria-expanded={isOpen}\n          aria-haspopup=\"listbox\"\n          aria-controls=\"currency-options\"\n          aria-label=\"Select currency\"\n        >\n          <div className=\"flex items-center gap-2\">\n            {showFlag && selectedCurrency.flag && (\n              <span className=\"text-lg\" role=\"img\" aria-label={selectedCurrency.name}>\n                {selectedCurrency.flag}\n              </span>\n            )}\n            <span className=\"font-medium\">{selectedCurrency.code}</span>\n            {showName && <span className=\"text-sm text-fg-muted\">{selectedCurrency.name}</span>}\n          </div>\n          <ChevronDown\n            className={cn(\"h-4 w-4 text-fg-muted transition-transform\", isOpen && \"rotate-180\")}\n          />\n        </div>\n\n        {isOpen && (\n          <div\n            id=\"currency-options\"\n            className=\"absolute top-full left-0 right-0 z-50 mt-1 bg-bg-elevated border border-border-subtle rounded-md shadow-lg\"\n          >\n            <div className=\"p-2 border-b border-border-subtle\">\n              <input\n                type=\"text\"\n                placeholder=\"Search currencies...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full px-2 py-1 text-sm bg-bg-default border border-border-subtle rounded text-fg-default placeholder:text-fg-muted focus:outline-none focus:ring-2 focus:ring-brand-primary/20 focus:border-brand-primary\"\n              />\n            </div>\n            <div className=\"max-h-48 overflow-y-auto\">\n              {filteredOptions.map((option) => (\n                <button\n                  key={option.code}\n                  type=\"button\"\n                  onClick={() => handleSelect(option)}\n                  className={cn(\n                    \"w-full flex items-center gap-2 px-3 py-2 text-left text-fg-default hover:bg-bg-muted transition-colors\",\n                    option.code === value && \"bg-brand-primary/10 text-brand-primary\",\n                  )}\n                  // biome-ignore lint/a11y/useSemanticElements: custom dropdown requires ARIA roles for advanced accessibility\n                  role=\"option\"\n                  aria-selected={option.code === value}\n                >\n                  {showFlag && option.flag && (\n                    <span className=\"text-lg\" role=\"img\" aria-label={option.name}>\n                      {option.flag}\n                    </span>\n                  )}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-medium\">{option.code}</span>\n                    {showName && <span className=\"text-xs text-fg-muted\">{option.name}</span>}\n                  </div>\n                </button>\n              ))}\n              {filteredOptions.length === 0 && (\n                <div className=\"px-3 py-2 text-sm text-fg-muted text-center\">\n                  No currencies found\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n\n        {isOpen && (\n          <div\n            className=\"fixed inset-0 z-40\"\n            onClick={() => {\n              setIsOpen(false);\n              setSearchTerm(\"\");\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Escape\") {\n                setIsOpen(false);\n                setSearchTerm(\"\");\n              }\n            }}\n            aria-hidden=\"true\"\n          />\n        )}\n      </div>\n    );\n  },\n);\n\nCurrencySelector.displayName = \"CurrencySelector\";\n\nexport { CurrencySelector };\n","\"use client\";\n\nimport { forwardRef, useEffect, useState } from \"react\";\nimport { AlertCircle, CheckCircle, XCircle } from \"../icons\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface PriceValidationRule {\n  type: \"min\" | \"max\" | \"step\" | \"custom\";\n  value?: number;\n  message: string;\n  validator?: (value: number) => boolean;\n}\n\nexport interface PriceValidatorProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof priceValidatorVariants> {\n  value: number | null;\n  rules: PriceValidationRule[];\n  showIcon?: boolean;\n  showMessage?: boolean;\n  inline?: boolean;\n}\n\nconst priceValidatorVariants = cva(\"flex items-center gap-2\", {\n  variants: {\n    variant: {\n      default: \"text-fg-default\",\n      error: \"text-semantic-danger\",\n      success: \"text-semantic-success\",\n      warning: \"text-semantic-warning\",\n    },\n    size: {\n      sm: \"text-sm\",\n      md: \"text-base\",\n      lg: \"text-lg\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n});\n\nconst PriceValidator = forwardRef<HTMLDivElement, PriceValidatorProps>(\n  (\n    {\n      className,\n      value,\n      rules,\n      showIcon = true,\n      showMessage = true,\n      inline = false,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [validationState, setValidationState] = useState<{\n      isValid: boolean;\n      message: string;\n      variant: \"default\" | \"error\" | \"success\" | \"warning\";\n    }>({\n      isValid: true,\n      message: \"\",\n      variant: \"default\",\n    });\n\n    useEffect(() => {\n      if (value === null || value === undefined) {\n        setValidationState({\n          isValid: true,\n          message: \"\",\n          variant: \"default\",\n        });\n        return;\n      }\n\n      // Check all rules\n      for (const rule of rules) {\n        let isValid = true;\n\n        switch (rule.type) {\n          case \"min\":\n            isValid = value >= (rule.value || 0);\n            break;\n          case \"max\":\n            isValid = value <= (rule.value || Number.POSITIVE_INFINITY);\n            break;\n          case \"step\": {\n            const step = rule.value || 1;\n            isValid = Math.abs(value % step) < 0.0001 || Math.abs((value % step) - step) < 0.0001;\n            break;\n          }\n          case \"custom\":\n            isValid = rule.validator ? rule.validator(value) : true;\n            break;\n        }\n\n        if (!isValid) {\n          setValidationState({\n            isValid: false,\n            message: rule.message,\n            variant: \"error\",\n          });\n          return;\n        }\n      }\n\n      // All rules passed\n      setValidationState({\n        isValid: true,\n        message: \"Price is valid\",\n        variant: \"success\",\n      });\n    }, [value, rules]);\n\n    const getIcon = () => {\n      if (!showIcon) return null;\n\n      switch (validationState.variant) {\n        case \"error\":\n          return <XCircle className=\"h-4 w-4\" />;\n        case \"success\":\n          return <CheckCircle className=\"h-4 w-4\" />;\n        case \"warning\":\n          return <AlertCircle className=\"h-4 w-4\" />;\n        default:\n          return null;\n      }\n    };\n\n    if (!showMessage && !showIcon) {\n      return null;\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          priceValidatorVariants({ variant: validationState.variant, size }),\n          inline ? \"flex-row\" : \"flex-col items-start\",\n          className,\n        )}\n        {...props}\n      >\n        {showIcon && (\n          <div className=\"flex items-center gap-2\">\n            {getIcon()}\n            {showMessage && <span className=\"text-sm\">{validationState.message}</span>}\n          </div>\n        )}\n        {showMessage && !showIcon && <span className=\"text-sm\">{validationState.message}</span>}\n      </div>\n    );\n  },\n);\n\nPriceValidator.displayName = \"PriceValidator\";\n\nexport { PriceValidator };\n","\"use client\";\n\nimport { forwardRef, useCallback, useState } from \"react\";\nimport { type VariantProps, cn, cva } from \"../utils\";\n\nexport interface PriceRangeProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    VariantProps<typeof priceRangeVariants> {\n  min?: number;\n  max?: number;\n  value?: [number, number];\n  onChange?: (range: [number, number]) => void;\n  step?: number;\n  currency?: string;\n  locale?: string;\n  showLabels?: boolean;\n  showValues?: boolean;\n  disabled?: boolean;\n}\n\nconst priceRangeVariants = cva(\"flex flex-col gap-4\", {\n  variants: {\n    variant: {\n      default: \"text-fg-default\",\n      muted: \"text-fg-muted\",\n    },\n    size: {\n      sm: \"text-sm\",\n      md: \"text-base\",\n      lg: \"text-lg\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n  },\n});\n\nconst PriceRange = forwardRef<HTMLDivElement, PriceRangeProps>(\n  (\n    {\n      className,\n      min = 0,\n      max = 1000,\n      value = [min, max],\n      onChange,\n      step = 1,\n      currency = \"PYUSD\",\n      locale = \"en-US\",\n      showLabels = true,\n      showValues = true,\n      disabled = false,\n      variant,\n      size,\n      ...props\n    },\n    ref,\n  ) => {\n    const [localValue, setLocalValue] = useState<[number, number]>(value);\n\n    const formatCurrency = (amount: number) => {\n      return new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: currency,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2,\n      }).format(amount);\n    };\n\n    const handleMinChange = useCallback(\n      (newMin: number) => {\n        const newValue: [number, number] = [Math.min(newMin, localValue[1]), localValue[1]];\n        setLocalValue(newValue);\n        onChange?.(newValue);\n      },\n      [localValue, onChange],\n    );\n\n    const handleMaxChange = useCallback(\n      (newMax: number) => {\n        const newValue: [number, number] = [localValue[0], Math.max(newMax, localValue[0])];\n        setLocalValue(newValue);\n        onChange?.(newValue);\n      },\n      [localValue, onChange],\n    );\n\n    const handleRangeChange = useCallback(\n      (newMin: number, newMax: number) => {\n        const newValue: [number, number] = [newMin, newMax];\n        setLocalValue(newValue);\n        onChange?.(newValue);\n      },\n      [onChange],\n    );\n\n    const percentage = {\n      min: ((localValue[0] - min) / (max - min)) * 100,\n      max: ((localValue[1] - min) / (max - min)) * 100,\n    };\n\n    return (\n      <div ref={ref} className={cn(priceRangeVariants({ variant, size }), className)} {...props}>\n        {showLabels && (\n          <div className=\"flex justify-between items-center\">\n            <label htmlFor=\"price-range-slider\" className=\"text-sm font-medium text-fg-default\">\n              Price Range\n            </label>\n            {showValues && (\n              <div className=\"text-sm text-fg-muted\">\n                {formatCurrency(localValue[0])} - {formatCurrency(localValue[1])}\n              </div>\n            )}\n          </div>\n        )}\n\n        <div className=\"relative\">\n          {/* Track */}\n          <div className=\"h-2 bg-bg-muted rounded-full\">\n            <div\n              className=\"absolute h-2 bg-brand-primary rounded-full transition-all duration-200\"\n              style={{\n                left: `${percentage.min}%`,\n                width: `${percentage.max - percentage.min}%`,\n              }}\n            />\n          </div>\n\n          {/* Min Thumb */}\n          <input\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={localValue[0]}\n            onChange={(e) => handleMinChange(Number(e.target.value))}\n            disabled={disabled}\n            className=\"absolute top-0 w-full h-2 opacity-0 cursor-pointer\"\n            style={{ zIndex: localValue[0] > localValue[1] - 10 ? 1 : 2 }}\n          />\n\n          {/* Max Thumb */}\n          <input\n            type=\"range\"\n            min={min}\n            max={max}\n            step={step}\n            value={localValue[1]}\n            onChange={(e) => handleMaxChange(Number(e.target.value))}\n            disabled={disabled}\n            className=\"absolute top-0 w-full h-2 opacity-0 cursor-pointer\"\n            style={{ zIndex: localValue[1] < localValue[0] + 10 ? 1 : 2 }}\n          />\n\n          {/* Thumb indicators */}\n          <div\n            className=\"absolute top-1/2 w-4 h-4 bg-brand-primary border-2 border-bg-elevated rounded-full transform -translate-y-1/2 cursor-pointer hover:scale-110 transition-transform\"\n            style={{ left: `calc(${percentage.min}% - 8px)` }}\n          />\n          <div\n            className=\"absolute top-1/2 w-4 h-4 bg-brand-primary border-2 border-bg-elevated rounded-full transform -translate-y-1/2 cursor-pointer hover:scale-110 transition-transform\"\n            style={{ left: `calc(${percentage.max}% - 8px)` }}\n          />\n        </div>\n\n        {/* Value inputs */}\n        <div className=\"flex gap-2\">\n          <div className=\"flex-1\">\n            <label htmlFor=\"price-range-min\" className=\"block text-xs text-fg-muted mb-1\">\n              Min\n            </label>\n            <input\n              id=\"price-range-min\"\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={localValue[0]}\n              onChange={(e) => handleMinChange(Number(e.target.value))}\n              disabled={disabled}\n              className=\"w-full px-2 py-1 text-sm bg-bg-elevated border border-border-subtle rounded text-fg-default focus:outline-none focus:ring-2 focus:ring-brand-primary/20 focus:border-brand-primary disabled:opacity-50\"\n            />\n          </div>\n          <div className=\"flex-1\">\n            <label htmlFor=\"price-range-max\" className=\"block text-xs text-fg-muted mb-1\">\n              Max\n            </label>\n            <input\n              id=\"price-range-max\"\n              type=\"number\"\n              min={min}\n              max={max}\n              step={step}\n              value={localValue[1]}\n              onChange={(e) => handleMaxChange(Number(e.target.value))}\n              disabled={disabled}\n              className=\"w-full px-2 py-1 text-sm bg-bg-elevated border border-border-subtle rounded text-fg-default focus:outline-none focus:ring-2 focus:ring-brand-primary/20 focus:border-brand-primary disabled:opacity-50\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\nPriceRange.displayName = \"PriceRange\";\n\nexport { PriceRange };\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst featureFlagVariants = cva(\n  \"inline-flex items-center gap-2 px-3 py-1.5 rounded-full text-sm font-medium transition-colors\",\n  {\n    variants: {\n      status: {\n        enabled: \"bg-success-100 text-success-800 border border-success-200\",\n        disabled: \"bg-neutral-100 text-neutral-600 border border-neutral-200\",\n        experimental: \"bg-warning-100 text-warning-800 border border-warning-200\",\n        deprecated: \"bg-error-100 text-error-800 border border-error-200\",\n      },\n      size: {\n        sm: \"px-2 py-1 text-xs\",\n        md: \"px-3 py-1.5 text-sm\",\n        lg: \"px-4 py-2 text-base\",\n      },\n    },\n    defaultVariants: {\n      status: \"disabled\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface FeatureFlagProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onToggle\">,\n    VariantProps<typeof featureFlagVariants> {\n  name: string;\n  description?: string;\n  enabled?: boolean;\n  experimental?: boolean;\n  deprecated?: boolean;\n  onToggle?: (enabled: boolean) => void;\n  showToggle?: boolean;\n}\n\nexport const FeatureFlag = React.forwardRef<HTMLDivElement, FeatureFlagProps>(\n  (\n    {\n      name,\n      description,\n      enabled = false,\n      experimental = false,\n      deprecated = false,\n      onToggle,\n      showToggle = false,\n      status,\n      size,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    // Determine status based on props\n    const actualStatus =\n      status ||\n      (() => {\n        if (deprecated) return \"deprecated\";\n        if (experimental) return \"experimental\";\n        return enabled ? \"enabled\" : \"disabled\";\n      })();\n\n    const handleToggle = () => {\n      if (onToggle && !deprecated) {\n        onToggle(!enabled);\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-between gap-3 p-4 rounded-lg border bg-bg-elevated\",\n          className,\n        )}\n        {...props}\n      >\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            <span className=\"font-medium text-fg-default truncate\">{name}</span>\n            <span className={cn(featureFlagVariants({ status: actualStatus, size }))}>\n              {actualStatus === \"enabled\" && \"Enabled\"}\n              {actualStatus === \"disabled\" && \"Disabled\"}\n              {actualStatus === \"experimental\" && \"Experimental\"}\n              {actualStatus === \"deprecated\" && \"Deprecated\"}\n            </span>\n          </div>\n          {description && <p className=\"text-sm text-fg-muted line-clamp-2\">{description}</p>}\n        </div>\n\n        {showToggle && !deprecated && (\n          <button\n            type=\"button\"\n            onClick={handleToggle}\n            className={cn(\n              \"relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2\",\n              enabled ? \"bg-primary-600\" : \"bg-neutral-300\",\n            )}\n            role=\"switch\"\n            aria-checked={enabled}\n            aria-label={`Toggle ${name} feature flag`}\n          >\n            <span\n              className={cn(\n                \"inline-block h-4 w-4 transform rounded-full bg-white transition-transform\",\n                enabled ? \"translate-x-6\" : \"translate-x-1\",\n              )}\n            />\n          </button>\n        )}\n      </div>\n    );\n  },\n);\n\nFeatureFlag.displayName = \"FeatureFlag\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst auditLogVariants = cva(\n  \"inline-flex items-center gap-1.5 px-2 py-1 rounded text-xs font-medium\",\n  {\n    variants: {\n      action: {\n        create: \"bg-success-100 text-success-700 border border-success-200\",\n        update: \"bg-primary-100 text-primary-700 border border-primary-200\",\n        delete: \"bg-error-100 text-error-700 border border-error-200\",\n        login: \"bg-info-100 text-info-700 border border-info-200\",\n        logout: \"bg-neutral-100 text-neutral-700 border border-neutral-200\",\n        error: \"bg-warning-100 text-warning-700 border border-warning-200\",\n      },\n      size: {\n        sm: \"px-1.5 py-0.5 text-xs\",\n        md: \"px-2 py-1 text-xs\",\n        lg: \"px-3 py-1.5 text-sm\",\n      },\n    },\n    defaultVariants: {\n      action: \"update\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface AuditLogEntry {\n  id: string;\n  timestamp: Date;\n  action: \"create\" | \"update\" | \"delete\" | \"login\" | \"logout\" | \"error\";\n  resource: string;\n  userId: string;\n  userName: string;\n  details?: string;\n  ipAddress?: string;\n  userAgent?: string;\n}\n\nexport interface AuditLogProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof auditLogVariants> {\n  entries: AuditLogEntry[];\n  loading?: boolean;\n  emptyMessage?: string;\n  showUserInfo?: boolean;\n  showTechnicalDetails?: boolean;\n  onEntryClick?: (entry: AuditLogEntry) => void;\n  maxHeight?: string;\n}\n\nexport const AuditLog = React.forwardRef<HTMLDivElement, AuditLogProps>(\n  (\n    {\n      entries,\n      loading = false,\n      emptyMessage = \"No audit entries found\",\n      showUserInfo = true,\n      showTechnicalDetails = false,\n      onEntryClick,\n      maxHeight = \"400px\",\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const formatTimestamp = (timestamp: Date) => {\n      return new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n      }).format(timestamp);\n    };\n\n    const getActionIcon = (action: AuditLogEntry[\"action\"]) => {\n      switch (action) {\n        case \"create\":\n          return \"➕\";\n        case \"update\":\n          return \"✏️\";\n        case \"delete\":\n          return \"🗑️\";\n        case \"login\":\n          return \"🔐\";\n        case \"logout\":\n          return \"🚪\";\n        case \"error\":\n          return \"⚠️\";\n        default:\n          return \"📝\";\n      }\n    };\n\n    if (loading) {\n      return (\n        <div\n          ref={ref}\n          className={cn(\"flex items-center justify-center p-8 text-fg-muted\", className)}\n          {...props}\n        >\n          <div className=\"flex items-center gap-2\">\n            <div className=\"animate-spin h-4 w-4 border-2 border-primary-600 border-t-transparent rounded-full\" />\n            <span>Loading audit log...</span>\n          </div>\n        </div>\n      );\n    }\n\n    if (entries.length === 0) {\n      return (\n        <div\n          ref={ref}\n          className={cn(\"flex items-center justify-center p-8 text-fg-muted\", className)}\n          {...props}\n        >\n          <span>{emptyMessage}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"border border-border-default rounded-lg bg-bg-elevated overflow-hidden\",\n          className,\n        )}\n        {...props}\n      >\n        <div className=\"px-4 py-3 border-b border-border-default bg-bg-subtle\">\n          <h3 className=\"text-sm font-medium text-fg-default\">Audit Log</h3>\n          <p className=\"text-xs text-fg-muted\">\n            {entries.length} {entries.length === 1 ? \"entry\" : \"entries\"}\n          </p>\n        </div>\n\n        <div className=\"overflow-y-auto\" style={{ maxHeight }}>\n          {entries.map((entry) => (\n            <div\n              key={entry.id}\n              className={cn(\n                \"px-4 py-3 border-b border-border-subtle last:border-b-0 hover:bg-bg-subtle transition-colors\",\n                onEntryClick && \"cursor-pointer\",\n              )}\n              onClick={() => onEntryClick?.(entry)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\" || e.key === \" \") {\n                  e.preventDefault();\n                  onEntryClick?.(entry);\n                }\n              }}\n              tabIndex={onEntryClick ? 0 : undefined}\n              role={onEntryClick ? \"button\" : undefined}\n              aria-label={\n                onEntryClick ? `View details for ${entry.action} on ${entry.resource}` : undefined\n              }\n            >\n              <div className=\"flex items-start justify-between gap-3\">\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <span className=\"text-sm\">{getActionIcon(entry.action)}</span>\n                    <span className={cn(auditLogVariants({ action: entry.action }))}>\n                      {entry.action.toUpperCase()}\n                    </span>\n                    <span className=\"text-sm font-medium text-fg-default\">{entry.resource}</span>\n                  </div>\n\n                  {showUserInfo && (\n                    <div className=\"flex items-center gap-2 text-xs text-fg-muted mb-1\">\n                      <span>by {entry.userName}</span>\n                      <span>•</span>\n                      <span>{formatTimestamp(entry.timestamp)}</span>\n                    </div>\n                  )}\n\n                  {entry.details && (\n                    <p className=\"text-sm text-fg-default line-clamp-2\">{entry.details}</p>\n                  )}\n\n                  {showTechnicalDetails && (entry.ipAddress || entry.userAgent) && (\n                    <div className=\"mt-2 text-xs text-fg-muted\">\n                      {entry.ipAddress && <div>IP: {entry.ipAddress}</div>}\n                      {entry.userAgent && <div className=\"truncate\">UA: {entry.userAgent}</div>}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n\nAuditLog.displayName = \"AuditLog\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst healthStatusVariants = cva(\n  \"inline-flex items-center gap-1.5 px-2 py-1 rounded text-xs font-medium\",\n  {\n    variants: {\n      status: {\n        healthy: \"bg-success-100 text-success-700 border border-success-200\",\n        warning: \"bg-warning-100 text-warning-700 border border-warning-200\",\n        critical: \"bg-error-100 text-error-700 border border-error-200\",\n        unknown: \"bg-neutral-100 text-neutral-700 border border-neutral-200\",\n      },\n      size: {\n        sm: \"px-1.5 py-0.5 text-xs\",\n        md: \"px-2 py-1 text-xs\",\n        lg: \"px-3 py-1.5 text-sm\",\n      },\n    },\n    defaultVariants: {\n      status: \"unknown\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface HealthCheck {\n  id: string;\n  name: string;\n  status: \"healthy\" | \"warning\" | \"critical\" | \"unknown\";\n  message?: string;\n  lastChecked: Date;\n  responseTime?: number;\n  details?: Record<string, unknown>;\n}\n\nexport interface HealthStatusProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof healthStatusVariants> {\n  checks: HealthCheck[];\n  overallStatus?: \"healthy\" | \"warning\" | \"critical\" | \"unknown\";\n  lastUpdated?: Date;\n  autoRefresh?: boolean;\n  refreshInterval?: number;\n  onRefresh?: () => void;\n  showResponseTime?: boolean;\n  showLastChecked?: boolean;\n  compact?: boolean;\n}\n\nexport const HealthStatus = React.forwardRef<HTMLDivElement, HealthStatusProps>(\n  (\n    {\n      checks,\n      overallStatus,\n      lastUpdated,\n      autoRefresh = false,\n      refreshInterval = 30000,\n      onRefresh,\n      showResponseTime = true,\n      showLastChecked = true,\n      compact = false,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isRefreshing, setIsRefreshing] = React.useState(false);\n\n    // Auto-refresh effect\n    React.useEffect(() => {\n      if (!autoRefresh || !onRefresh) return;\n\n      const interval = setInterval(async () => {\n        setIsRefreshing(true);\n        await onRefresh();\n        setIsRefreshing(false);\n      }, refreshInterval);\n\n      return () => clearInterval(interval);\n    }, [autoRefresh, onRefresh, refreshInterval]);\n\n    const getStatusIcon = (status: HealthCheck[\"status\"]) => {\n      switch (status) {\n        case \"healthy\":\n          return \"✅\";\n        case \"warning\":\n          return \"⚠️\";\n        case \"critical\":\n          return \"❌\";\n        case \"unknown\":\n          return \"❓\";\n        default:\n          return \"❓\";\n      }\n    };\n\n    const getOverallStatusIcon = (status?: HealthStatusProps[\"overallStatus\"]) => {\n      switch (status) {\n        case \"healthy\":\n          return \"🟢\";\n        case \"warning\":\n          return \"🟡\";\n        case \"critical\":\n          return \"🔴\";\n        case \"unknown\":\n          return \"⚪\";\n        default:\n          return \"⚪\";\n      }\n    };\n\n    const formatResponseTime = (ms?: number) => {\n      if (!ms) return \"N/A\";\n      return ms < 1000 ? `${ms}ms` : `${(ms / 1000).toFixed(1)}s`;\n    };\n\n    const formatLastChecked = (date: Date) => {\n      const now = new Date();\n      const diff = now.getTime() - date.getTime();\n      const seconds = Math.floor(diff / 1000);\n      const minutes = Math.floor(seconds / 60);\n      const hours = Math.floor(minutes / 60);\n\n      if (seconds < 60) return `${seconds}s ago`;\n      if (minutes < 60) return `${minutes}m ago`;\n      if (hours < 24) return `${hours}h ago`;\n      return date.toLocaleDateString();\n    };\n\n    const handleRefresh = async () => {\n      if (!onRefresh || isRefreshing) return;\n\n      setIsRefreshing(true);\n      await onRefresh();\n      setIsRefreshing(false);\n    };\n\n    const healthyCount = checks.filter((c) => c.status === \"healthy\").length;\n    const warningCount = checks.filter((c) => c.status === \"warning\").length;\n    const criticalCount = checks.filter((c) => c.status === \"critical\").length;\n    const unknownCount = checks.filter((c) => c.status === \"unknown\").length;\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\"border border-border-default rounded-lg bg-bg-elevated\", className)}\n        {...props}\n      >\n        {/* Header */}\n        <div className=\"px-4 py-3 border-b border-border-default bg-bg-subtle\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-lg\">{getOverallStatusIcon(overallStatus)}</span>\n              <h3 className=\"text-sm font-medium text-fg-default\">System Health</h3>\n              {overallStatus && (\n                <span className={cn(healthStatusVariants({ status: overallStatus }))}>\n                  {overallStatus.toUpperCase()}\n                </span>\n              )}\n            </div>\n\n            <div className=\"flex items-center gap-2\">\n              {showLastChecked && lastUpdated && (\n                <span className=\"text-xs text-fg-muted\">\n                  Updated {formatLastChecked(lastUpdated)}\n                </span>\n              )}\n\n              {onRefresh && (\n                <button\n                  type=\"button\"\n                  onClick={handleRefresh}\n                  disabled={isRefreshing}\n                  className=\"p-1 text-fg-muted hover:text-fg-default transition-colors disabled:opacity-50\"\n                  aria-label=\"Refresh health status\"\n                >\n                  <div className={cn(\"h-4 w-4\", isRefreshing && \"animate-spin\")}>🔄</div>\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Summary */}\n          <div className=\"flex items-center gap-4 mt-2 text-xs text-fg-muted\">\n            <span>✅ {healthyCount} healthy</span>\n            <span>⚠️ {warningCount} warning</span>\n            <span>❌ {criticalCount} critical</span>\n            <span>❓ {unknownCount} unknown</span>\n          </div>\n        </div>\n\n        {/* Health Checks */}\n        <div className={cn(compact ? \"divide-y divide-border-subtle\" : \"p-4 space-y-3\")}>\n          {checks.map((check) => (\n            <div\n              key={check.id}\n              className={cn(\n                \"flex items-start justify-between gap-3\",\n                !compact && \"p-3 rounded-lg border border-border-subtle bg-bg-subtle\",\n              )}\n            >\n              <div className=\"flex-1 min-w-0\">\n                <div className=\"flex items-center gap-2 mb-1\">\n                  <span className=\"text-sm\">{getStatusIcon(check.status)}</span>\n                  <span className=\"text-sm font-medium text-fg-default\">{check.name}</span>\n                  <span className={cn(healthStatusVariants({ status: check.status }))}>\n                    {check.status.toUpperCase()}\n                  </span>\n                </div>\n\n                {check.message && (\n                  <p className=\"text-sm text-fg-muted line-clamp-2\">{check.message}</p>\n                )}\n\n                <div className=\"flex items-center gap-4 mt-2 text-xs text-fg-muted\">\n                  {showResponseTime && check.responseTime && (\n                    <span>Response: {formatResponseTime(check.responseTime)}</span>\n                  )}\n                  <span>Checked: {formatLastChecked(check.lastChecked)}</span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  },\n);\n\nHealthStatus.displayName = \"HealthStatus\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst userRoleVariants = cva(\n  \"inline-flex items-center gap-1.5 px-2 py-1 rounded text-xs font-medium\",\n  {\n    variants: {\n      role: {\n        admin: \"bg-error-100 text-error-700 border border-error-200\",\n        moderator: \"bg-warning-100 text-warning-700 border border-warning-200\",\n        user: \"bg-primary-100 text-primary-700 border border-primary-200\",\n        guest: \"bg-neutral-100 text-neutral-700 border border-neutral-200\",\n        banned: \"bg-neutral-200 text-neutral-500 border border-neutral-300\",\n      },\n      size: {\n        sm: \"px-1.5 py-0.5 text-xs\",\n        md: \"px-2 py-1 text-xs\",\n        lg: \"px-3 py-1.5 text-sm\",\n      },\n    },\n    defaultVariants: {\n      role: \"user\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface UserRoleProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\" | \"role\">,\n    VariantProps<typeof userRoleVariants> {\n  role: \"admin\" | \"moderator\" | \"user\" | \"guest\" | \"banned\";\n  displayName?: string;\n  description?: string;\n  editable?: boolean;\n  onChange?: (newRole: UserRoleProps[\"role\"]) => void;\n  showDescription?: boolean;\n  showIcon?: boolean;\n}\n\nexport const UserRole = React.forwardRef<HTMLDivElement, UserRoleProps>(\n  (\n    {\n      role,\n      displayName,\n      description,\n      editable = false,\n      onChange,\n      showDescription = false,\n      showIcon = true,\n      size,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const getRoleIcon = (roleType: UserRoleProps[\"role\"]) => {\n      switch (roleType) {\n        case \"admin\":\n          return \"👑\";\n        case \"moderator\":\n          return \"🛡️\";\n        case \"user\":\n          return \"👤\";\n        case \"guest\":\n          return \"👥\";\n        case \"banned\":\n          return \"🚫\";\n        default:\n          return \"👤\";\n      }\n    };\n\n    const getRoleDisplayName = (roleType: UserRoleProps[\"role\"]) => {\n      if (displayName) return displayName;\n\n      switch (roleType) {\n        case \"admin\":\n          return \"Administrator\";\n        case \"moderator\":\n          return \"Moderator\";\n        case \"user\":\n          return \"User\";\n        case \"guest\":\n          return \"Guest\";\n        case \"banned\":\n          return \"Banned\";\n        default:\n          return \"User\";\n      }\n    };\n\n    const getRoleDescription = (roleType: UserRoleProps[\"role\"]) => {\n      if (description) return description;\n\n      switch (roleType) {\n        case \"admin\":\n          return \"Full system access and administrative privileges\";\n        case \"moderator\":\n          return \"Content moderation and user management capabilities\";\n        case \"user\":\n          return \"Standard user with basic platform access\";\n        case \"guest\":\n          return \"Limited access for unregistered users\";\n        case \"banned\":\n          return \"Account suspended or banned from platform\";\n        default:\n          return \"Standard user access\";\n      }\n    };\n\n    const handleClick = () => {\n      if (editable && onChange) {\n        // Cycle through roles (for demo purposes)\n        const roles: UserRoleProps[\"role\"][] = [\"admin\", \"moderator\", \"user\", \"guest\", \"banned\"];\n        const currentIndex = roles.indexOf(role);\n        const nextIndex = (currentIndex + 1) % roles.length;\n        onChange(roles[nextIndex]);\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center gap-2 p-3 rounded-lg border bg-bg-elevated\",\n          editable && \"cursor-pointer hover:bg-bg-subtle transition-colors\",\n          className,\n        )}\n        onClick={handleClick}\n        {...props}\n      >\n        <div className=\"flex items-center gap-2\">\n          {showIcon && (\n            <span className=\"text-sm\" aria-hidden=\"true\">\n              {getRoleIcon(role)}\n            </span>\n          )}\n          <span className={cn(userRoleVariants({ role, size }))}>{getRoleDisplayName(role)}</span>\n        </div>\n\n        {showDescription && (\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm text-fg-muted line-clamp-2\">{getRoleDescription(role)}</p>\n          </div>\n        )}\n\n        {editable && (\n          <div className=\"flex items-center gap-1 text-xs text-fg-muted\">\n            <span>Click to change</span>\n            <span>↻</span>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nUserRole.displayName = \"UserRole\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst permissionVariants = cva(\n  \"inline-flex items-center justify-center w-6 h-6 rounded text-xs font-medium transition-colors\",\n  {\n    variants: {\n      permission: {\n        granted: \"bg-success-100 text-success-700 border border-success-200\",\n        denied: \"bg-error-100 text-error-700 border border-error-200\",\n        inherited: \"bg-primary-100 text-primary-700 border border-primary-200\",\n        conditional: \"bg-warning-100 text-warning-700 border border-warning-200\",\n        unknown: \"bg-neutral-100 text-neutral-500 border border-neutral-200\",\n      },\n      size: {\n        sm: \"w-5 h-5 text-xs\",\n        md: \"w-6 h-6 text-xs\",\n        lg: \"w-8 h-8 text-sm\",\n      },\n    },\n    defaultVariants: {\n      permission: \"unknown\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface Permission {\n  id: string;\n  name: string;\n  description: string;\n  category: string;\n  level: \"read\" | \"write\" | \"admin\" | \"system\";\n}\n\nexport interface RolePermission {\n  roleId: string;\n  permissionId: string;\n  status: \"granted\" | \"denied\" | \"inherited\" | \"conditional\" | \"unknown\";\n  grantedBy?: string;\n  grantedAt?: Date;\n  expiresAt?: Date;\n}\n\nexport interface PermissionMatrixProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof permissionVariants> {\n  permissions: Permission[];\n  rolePermissions: RolePermission[];\n  roles: Array<{ id: string; name: string; color?: string }>;\n  selectedRole?: string;\n  onPermissionChange?: (\n    roleId: string,\n    permissionId: string,\n    status: RolePermission[\"status\"],\n  ) => void;\n  showDescriptions?: boolean;\n  showCategories?: boolean;\n  compact?: boolean;\n  editable?: boolean;\n}\n\nexport const PermissionMatrix = React.forwardRef<HTMLDivElement, PermissionMatrixProps>(\n  (\n    {\n      permissions,\n      rolePermissions,\n      roles,\n      selectedRole,\n      onPermissionChange,\n      showDescriptions = true,\n      showCategories = true,\n      compact = false,\n      editable = false,\n      size,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const getPermissionStatus = (\n      roleId: string,\n      permissionId: string,\n    ): RolePermission[\"status\"] => {\n      const rolePermission = rolePermissions.find(\n        (rp) => rp.roleId === roleId && rp.permissionId === permissionId,\n      );\n      return rolePermission?.status || \"unknown\";\n    };\n\n    const getPermissionIcon = (status: RolePermission[\"status\"]) => {\n      switch (status) {\n        case \"granted\":\n          return \"✓\";\n        case \"denied\":\n          return \"✗\";\n        case \"inherited\":\n          return \"↗\";\n        case \"conditional\":\n          return \"?\";\n        case \"unknown\":\n          return \"?\";\n        default:\n          return \"?\";\n      }\n    };\n\n    const handlePermissionClick = (roleId: string, permissionId: string) => {\n      if (!editable || !onPermissionChange) return;\n\n      const currentStatus = getPermissionStatus(roleId, permissionId);\n      const statuses: RolePermission[\"status\"][] = [\n        \"granted\",\n        \"denied\",\n        \"inherited\",\n        \"conditional\",\n        \"unknown\",\n      ];\n      const currentIndex = statuses.indexOf(currentStatus);\n      const nextIndex = (currentIndex + 1) % statuses.length;\n\n      onPermissionChange(roleId, permissionId, statuses[nextIndex]);\n    };\n\n    const groupedPermissions = permissions.reduce(\n      (acc, permission) => {\n        if (!acc[permission.category]) {\n          acc[permission.category] = [];\n        }\n        acc[permission.category].push(permission);\n        return acc;\n      },\n      {} as Record<string, Permission[]>,\n    );\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"border border-border-default rounded-lg bg-bg-elevated overflow-hidden\",\n          className,\n        )}\n        {...props}\n      >\n        {/* Header */}\n        <div className=\"px-4 py-3 border-b border-border-default bg-bg-subtle\">\n          <h3 className=\"text-sm font-medium text-fg-default\">Permission Matrix</h3>\n          <p className=\"text-xs text-fg-muted\">\n            {roles.length} roles × {permissions.length} permissions\n          </p>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead>\n              <tr className=\"border-b border-border-subtle\">\n                <th className=\"text-left p-3 text-xs font-medium text-fg-muted\">Permission</th>\n                {roles.map((role) => (\n                  <th\n                    key={role.id}\n                    className={cn(\n                      \"text-center p-3 text-xs font-medium\",\n                      selectedRole === role.id && \"bg-primary-50 text-primary-700\",\n                    )}\n                  >\n                    {role.name}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {Object.entries(groupedPermissions).map(([category, categoryPermissions]) => (\n                <React.Fragment key={category}>\n                  {showCategories && (\n                    <tr className=\"bg-bg-subtle\">\n                      <td\n                        colSpan={roles.length + 1}\n                        className=\"px-3 py-2 text-xs font-medium text-fg-muted uppercase tracking-wide\"\n                      >\n                        {category}\n                      </td>\n                    </tr>\n                  )}\n                  {categoryPermissions.map((permission) => (\n                    <tr\n                      key={permission.id}\n                      className=\"border-b border-border-subtle last:border-b-0 hover:bg-bg-subtle\"\n                    >\n                      <td className=\"p-3\">\n                        <div className=\"flex flex-col gap-1\">\n                          <span className=\"text-sm font-medium text-fg-default\">\n                            {permission.name}\n                          </span>\n                          {showDescriptions && (\n                            <span className=\"text-xs text-fg-muted line-clamp-2\">\n                              {permission.description}\n                            </span>\n                          )}\n                          <span className=\"text-xs text-fg-muted\">Level: {permission.level}</span>\n                        </div>\n                      </td>\n                      {roles.map((role) => {\n                        const status = getPermissionStatus(role.id, permission.id);\n                        return (\n                          <td key={role.id} className=\"text-center p-3\">\n                            <button\n                              type=\"button\"\n                              onClick={() => handlePermissionClick(role.id, permission.id)}\n                              disabled={!editable}\n                              className={cn(\n                                permissionVariants({ permission: status, size }),\n                                editable && \"cursor-pointer hover:opacity-80\",\n                                !editable && \"cursor-default\",\n                              )}\n                              aria-label={`${permission.name} for ${role.name}: ${status}`}\n                              title={`${permission.name} for ${role.name}: ${status}`}\n                            >\n                              {getPermissionIcon(status)}\n                            </button>\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  ))}\n                </React.Fragment>\n              ))}\n            </tbody>\n          </table>\n        </div>\n\n        {/* Legend */}\n        <div className=\"px-4 py-3 border-t border-border-default bg-bg-subtle\">\n          <div className=\"flex items-center gap-4 text-xs text-fg-muted\">\n            <div className=\"flex items-center gap-1\">\n              <span className={cn(permissionVariants({ permission: \"granted\", size: \"sm\" }))}>\n                ✓\n              </span>\n              <span>Granted</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className={cn(permissionVariants({ permission: \"denied\", size: \"sm\" }))}>\n                ✗\n              </span>\n              <span>Denied</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className={cn(permissionVariants({ permission: \"inherited\", size: \"sm\" }))}>\n                ↗\n              </span>\n              <span>Inherited</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className={cn(permissionVariants({ permission: \"conditional\", size: \"sm\" }))}>\n                ?\n              </span>\n              <span>Conditional</span>\n            </div>\n            <div className=\"flex items-center gap-1\">\n              <span className={cn(permissionVariants({ permission: \"unknown\", size: \"sm\" }))}>\n                ?\n              </span>\n              <span>Unknown</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\nPermissionMatrix.displayName = \"PermissionMatrix\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst userStatusVariants = cva(\n  \"inline-flex items-center gap-1.5 px-2 py-1 rounded text-xs font-medium\",\n  {\n    variants: {\n      status: {\n        active: \"bg-success-100 text-success-700 border border-success-200\",\n        inactive: \"bg-neutral-100 text-neutral-600 border border-neutral-200\",\n        pending: \"bg-warning-100 text-warning-700 border border-warning-200\",\n        suspended: \"bg-error-100 text-error-700 border border-error-200\",\n        banned: \"bg-error-200 text-error-800 border border-error-300\",\n        offline: \"bg-neutral-200 text-neutral-500 border border-neutral-300\",\n      },\n      size: {\n        sm: \"px-1.5 py-0.5 text-xs\",\n        md: \"px-2 py-1 text-xs\",\n        lg: \"px-3 py-1.5 text-sm\",\n      },\n    },\n    defaultVariants: {\n      status: \"inactive\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface UserStatusProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onChange\">,\n    VariantProps<typeof userStatusVariants> {\n  status: \"active\" | \"inactive\" | \"pending\" | \"suspended\" | \"banned\" | \"offline\";\n  displayName?: string;\n  description?: string;\n  lastSeen?: Date;\n  showLastSeen?: boolean;\n  showDescription?: boolean;\n  showIcon?: boolean;\n  editable?: boolean;\n  onChange?: (newStatus: UserStatusProps[\"status\"]) => void;\n  compact?: boolean;\n}\n\nexport const UserStatus = React.forwardRef<HTMLDivElement, UserStatusProps>(\n  (\n    {\n      status,\n      displayName,\n      description,\n      lastSeen,\n      showLastSeen = true,\n      showDescription = false,\n      showIcon = true,\n      editable = false,\n      onChange,\n      compact = false,\n      size,\n      className,\n      ...props\n    },\n    ref,\n  ) => {\n    const getStatusIcon = (statusType: UserStatusProps[\"status\"]) => {\n      switch (statusType) {\n        case \"active\":\n          return \"🟢\";\n        case \"inactive\":\n          return \"⚪\";\n        case \"pending\":\n          return \"🟡\";\n        case \"suspended\":\n          return \"🔴\";\n        case \"banned\":\n          return \"🚫\";\n        case \"offline\":\n          return \"⚫\";\n        default:\n          return \"⚪\";\n      }\n    };\n\n    const getStatusDisplayName = (statusType: UserStatusProps[\"status\"]) => {\n      if (displayName) return displayName;\n\n      switch (statusType) {\n        case \"active\":\n          return \"Active\";\n        case \"inactive\":\n          return \"Inactive\";\n        case \"pending\":\n          return \"Pending\";\n        case \"suspended\":\n          return \"Suspended\";\n        case \"banned\":\n          return \"Banned\";\n        case \"offline\":\n          return \"Offline\";\n        default:\n          return \"Inactive\";\n      }\n    };\n\n    const getStatusDescription = (statusType: UserStatusProps[\"status\"]) => {\n      if (description) return description;\n\n      switch (statusType) {\n        case \"active\":\n          return \"User is active and can access all features\";\n        case \"inactive\":\n          return \"User account is inactive\";\n        case \"pending\":\n          return \"Account activation is pending approval\";\n        case \"suspended\":\n          return \"Account has been temporarily suspended\";\n        case \"banned\":\n          return \"Account has been permanently banned\";\n        case \"offline\":\n          return \"User is currently offline\";\n        default:\n          return \"Account status unknown\";\n      }\n    };\n\n    const formatLastSeen = (date: Date) => {\n      const now = new Date();\n      const diff = now.getTime() - date.getTime();\n      const seconds = Math.floor(diff / 1000);\n      const minutes = Math.floor(seconds / 60);\n      const hours = Math.floor(minutes / 60);\n      const days = Math.floor(hours / 24);\n\n      if (seconds < 60) return \"Just now\";\n      if (minutes < 60) return `${minutes}m ago`;\n      if (hours < 24) return `${hours}h ago`;\n      if (days < 7) return `${days}d ago`;\n      return date.toLocaleDateString();\n    };\n\n    const handleClick = () => {\n      if (editable && onChange) {\n        // Cycle through statuses (for demo purposes)\n        const statuses: UserStatusProps[\"status\"][] = [\n          \"active\",\n          \"inactive\",\n          \"pending\",\n          \"suspended\",\n          \"banned\",\n          \"offline\",\n        ];\n        const currentIndex = statuses.indexOf(status);\n        const nextIndex = (currentIndex + 1) % statuses.length;\n        onChange(statuses[nextIndex]);\n      }\n    };\n\n    if (compact) {\n      return (\n        <div\n          ref={ref}\n          className={cn(\n            \"flex items-center gap-1.5\",\n            editable && \"cursor-pointer hover:opacity-80 transition-opacity\",\n            className,\n          )}\n          onClick={handleClick}\n          {...props}\n        >\n          {showIcon && (\n            <span className=\"text-sm\" aria-hidden=\"true\">\n              {getStatusIcon(status)}\n            </span>\n          )}\n          <span className={cn(userStatusVariants({ status, size }))}>\n            {getStatusDisplayName(status)}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-between gap-3 p-3 rounded-lg border bg-bg-elevated\",\n          editable && \"cursor-pointer hover:bg-bg-subtle transition-colors\",\n          className,\n        )}\n        onClick={handleClick}\n        {...props}\n      >\n        <div className=\"flex items-center gap-2\">\n          {showIcon && (\n            <span className=\"text-sm\" aria-hidden=\"true\">\n              {getStatusIcon(status)}\n            </span>\n          )}\n          <span className={cn(userStatusVariants({ status, size }))}>\n            {getStatusDisplayName(status)}\n          </span>\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          {showDescription && (\n            <p className=\"text-sm text-fg-muted line-clamp-2\">{getStatusDescription(status)}</p>\n          )}\n          {showLastSeen && lastSeen && (\n            <p className=\"text-xs text-fg-muted\">Last seen: {formatLastSeen(lastSeen)}</p>\n          )}\n        </div>\n\n        {editable && (\n          <div className=\"flex items-center gap-1 text-xs text-fg-muted\">\n            <span>Click to change</span>\n            <span>↻</span>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nUserStatus.displayName = \"UserStatus\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        primary: \"bg-primary text-fg-inverse hover:bg-primary/90 focus-visible:ring-primary\",\n        secondary: \"bg-secondary text-fg hover:bg-secondary/80 focus-visible:ring-secondary\",\n        danger: \"bg-error text-fg-inverse hover:bg-error/90 focus-visible:ring-error\",\n        ghost: \"text-fg hover:bg-bg-subtle focus-visible:ring-primary\",\n        outline:\n          \"border border-border-default text-fg hover:bg-bg-subtle focus-visible:ring-primary\",\n      },\n      size: {\n        sm: \"h-8 px-3 text-sm\",\n        md: \"h-10 px-4 text-sm\",\n        lg: \"h-11 px-8 text-base\",\n        icon: \"h-10 w-10\",\n      },\n      loading: {\n        true: \"cursor-wait\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"md\",\n      loading: false,\n    },\n  },\n);\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  loading?: boolean;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      loading = false,\n      leftIcon,\n      rightIcon,\n      children,\n      disabled,\n      ...props\n    },\n    ref,\n  ) => {\n    const isDisabled = disabled || loading;\n\n    return (\n      <button\n        className={cn(buttonVariants({ variant, size, loading }), className)}\n        disabled={isDisabled}\n        ref={ref}\n        {...props}\n      >\n        {loading && (\n          <svg\n            className=\"h-4 w-4 animate-spin\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            role=\"img\"\n            aria-label=\"Loading\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              fill=\"currentColor\"\n            />\n          </svg>\n        )}\n        {!loading && leftIcon && <span className=\"flex-shrink-0\">{leftIcon}</span>}\n        {children && <span>{children}</span>}\n        {!loading && rightIcon && <span className=\"flex-shrink-0\">{rightIcon}</span>}\n      </button>\n    );\n  },\n);\n\nButton.displayName = \"Button\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst cardVariants = cva(\"rounded-lg border bg-bg-elevated transition-colors\", {\n  variants: {\n    variant: {\n      default: \"border-border-default\",\n      elevated: \"border-border-subtle shadow-sm\",\n      interactive:\n        \"border-border-default hover:border-border-strong hover:shadow-sm cursor-pointer\",\n      disabled: \"border-border-subtle bg-bg-subtle opacity-60 cursor-not-allowed\",\n    },\n    padding: {\n      none: \"p-0\",\n      sm: \"p-3\",\n      md: \"p-4\",\n      lg: \"p-6\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    padding: \"md\",\n  },\n});\n\nexport interface CardProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClick\">,\n    VariantProps<typeof cardVariants> {\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant, padding, onClick, disabled = false, children, ...props }, ref) => {\n    const isInteractive = variant === \"interactive\" && !disabled;\n    const isDisabled = disabled || variant === \"disabled\";\n\n    return (\n      <div\n        className={cn(\n          cardVariants({ variant, padding }),\n          isInteractive && \"hover:bg-bg-subtle\",\n          isDisabled && \"pointer-events-none\",\n          className,\n        )}\n        onClick={isInteractive ? onClick : undefined}\n        ref={ref}\n        role={isInteractive ? \"button\" : undefined}\n        tabIndex={isInteractive ? 0 : undefined}\n        onKeyDown={(e) => {\n          if (isInteractive && (e.key === \"Enter\" || e.key === \" \")) {\n            e.preventDefault();\n            onClick?.();\n          }\n        }}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n\nCard.displayName = \"Card\";\n\n// Card sub-components\nexport const CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex flex-col space-y-1.5 p-6\", className)} {...props} />\n  ),\n);\nCardHeader.displayName = \"CardHeader\";\n\nexport const CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"text-lg font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nexport const CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p ref={ref} className={cn(\"text-sm text-fg-muted\", className)} {...props} />\n));\nCardDescription.displayName = \"CardDescription\";\n\nexport const CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n  ),\n);\nCardContent.displayName = \"CardContent\";\n\nexport const CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div ref={ref} className={cn(\"flex items-center p-6 pt-0\", className)} {...props} />\n  ),\n);\nCardFooter.displayName = \"CardFooter\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst inputVariants = cva(\n  \"flex h-10 w-full rounded-md border bg-bg-elevated px-3 py-2 text-sm ring-offset-bg transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-fg-muted focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"border-border-default focus-visible:ring-primary\",\n        error: \"border-error focus-visible:ring-error\",\n        success: \"border-success focus-visible:ring-success\",\n      },\n      size: {\n        sm: \"h-8 px-2 text-xs\",\n        md: \"h-10 px-3 text-sm\",\n        lg: \"h-11 px-4 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\n    VariantProps<typeof inputVariants> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  (\n    { className, variant, size, label, error, helperText, leftIcon, rightIcon, id, ...props },\n    ref,\n  ) => {\n    const hasError = Boolean(error);\n    const inputVariant = hasError ? \"error\" : variant;\n    const inputId = id || `input-${Math.random().toString(36).substr(2, 9)}`;\n\n    return (\n      <div className=\"space-y-1\">\n        {label && (\n          <label htmlFor={inputId} className=\"text-sm font-medium text-fg\">\n            {label}\n            {props.required && <span className=\"text-error ml-1\">*</span>}\n          </label>\n        )}\n        <div className=\"relative\">\n          {leftIcon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-fg-muted\">{leftIcon}</div>\n          )}\n          <input\n            id={inputId}\n            className={cn(\n              inputVariants({ variant: inputVariant, size }),\n              leftIcon && \"pl-10\",\n              rightIcon && \"pr-10\",\n              className,\n            )}\n            ref={ref}\n            {...props}\n          />\n          {rightIcon && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-fg-muted\">\n              {rightIcon}\n            </div>\n          )}\n        </div>\n        {error && <p className=\"text-sm text-error\">{error}</p>}\n        {helperText && !error && <p className=\"text-sm text-fg-muted\">{helperText}</p>}\n      </div>\n    );\n  },\n);\n\nInput.displayName = \"Input\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst selectVariants = cva(\n  \"flex h-10 w-full items-center justify-between rounded-md border bg-bg-elevated px-3 py-2 text-sm ring-offset-bg transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"border-border-default focus-visible:ring-primary\",\n        error: \"border-error focus-visible:ring-error\",\n        success: \"border-success focus-visible:ring-success\",\n      },\n      size: {\n        sm: \"h-8 px-2 text-xs\",\n        md: \"h-10 px-3 text-sm\",\n        lg: \"h-11 px-4 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface SelectOption {\n  value: string;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps\n  extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"size\">,\n    VariantProps<typeof selectVariants> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  placeholder?: string;\n  options: SelectOption[];\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nexport const Select = React.forwardRef<HTMLSelectElement, SelectProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      label,\n      error,\n      helperText,\n      placeholder,\n      options,\n      leftIcon,\n      rightIcon,\n      id,\n      ...props\n    },\n    ref,\n  ) => {\n    const hasError = Boolean(error);\n    const selectVariant = hasError ? \"error\" : variant;\n    const selectId = id || `select-${Math.random().toString(36).substr(2, 9)}`;\n\n    return (\n      <div className=\"space-y-1\">\n        {label && (\n          <label htmlFor={selectId} className=\"text-sm font-medium text-fg\">\n            {label}\n            {props.required && <span className=\"text-error ml-1\">*</span>}\n          </label>\n        )}\n        <div className=\"relative\">\n          {leftIcon && (\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-fg-muted\">{leftIcon}</div>\n          )}\n          <select\n            id={selectId}\n            className={cn(\n              selectVariants({ variant: selectVariant, size }),\n              leftIcon && \"pl-10\",\n              rightIcon && \"pr-10\",\n              className,\n            )}\n            ref={ref}\n            {...props}\n          >\n            {placeholder && (\n              <option value=\"\" disabled>\n                {placeholder}\n              </option>\n            )}\n            {options.map((option) => (\n              <option key={option.value} value={option.value} disabled={option.disabled}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n          {rightIcon && (\n            <div className=\"absolute right-3 top-1/2 -translate-y-1/2 text-fg-muted\">\n              {rightIcon}\n            </div>\n          )}\n        </div>\n        {error && <p className=\"text-sm text-error\">{error}</p>}\n        {helperText && !error && <p className=\"text-sm text-fg-muted\">{helperText}</p>}\n      </div>\n    );\n  },\n);\n\nSelect.displayName = \"Select\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst checkboxVariants = cva(\n  \"peer h-4 w-4 shrink-0 rounded-sm border border-border-default ring-offset-bg focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-fg-inverse data-[state=checked]:border-primary\",\n  {\n    variants: {\n      size: {\n        sm: \"h-3 w-3\",\n        md: \"h-4 w-4\",\n        lg: \"h-5 w-5\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n    },\n  },\n);\n\nexport interface CheckboxProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\" | \"type\">,\n    VariantProps<typeof checkboxVariants> {\n  label?: string;\n  error?: string;\n  helperText?: string;\n  indeterminate?: boolean;\n}\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  ({ className, size, label, error, helperText, indeterminate = false, id, ...props }, ref) => {\n    const checkboxId = id || `checkbox-${Math.random().toString(36).substr(2, 9)}`;\n    const hasError = Boolean(error);\n\n    return (\n      <div className=\"space-y-1\">\n        <div className=\"flex items-start space-x-2\">\n          <div className=\"relative\">\n            <input\n              type=\"checkbox\"\n              id={checkboxId}\n              ref={ref}\n              className={cn(checkboxVariants({ size }), className)}\n              data-state={indeterminate ? \"indeterminate\" : undefined}\n              {...props}\n            />\n            {indeterminate && (\n              <div className=\"absolute inset-0 flex items-center justify-center\">\n                <svg\n                  className=\"h-3 w-3 text-fg-inverse\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  role=\"img\"\n                  aria-label=\"Indeterminate\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n            )}\n          </div>\n          {label && (\n            <label\n              htmlFor={checkboxId}\n              className={cn(\n                \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n                hasError && \"text-error\",\n              )}\n            >\n              {label}\n              {props.required && <span className=\"text-error ml-1\">*</span>}\n            </label>\n          )}\n        </div>\n        {error && <p className=\"text-sm text-error\">{error}</p>}\n        {helperText && !error && <p className=\"text-sm text-fg-muted\">{helperText}</p>}\n      </div>\n    );\n  },\n);\n\nCheckbox.displayName = \"Checkbox\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst toastVariants = cva(\n  \"relative flex w-full items-center gap-3 rounded-lg border p-4 shadow-lg transition-all\",\n  {\n    variants: {\n      variant: {\n        success: \"border-success bg-success/10 text-success-foreground\",\n        error: \"border-error bg-error/10 text-error-foreground\",\n        warning: \"border-warning bg-warning/10 text-warning-foreground\",\n        info: \"border-primary bg-primary/10 text-primary-foreground\",\n      },\n      size: {\n        sm: \"p-3 text-sm\",\n        md: \"p-4 text-sm\",\n        lg: \"p-5 text-base\",\n      },\n    },\n    defaultVariants: {\n      variant: \"info\",\n      size: \"md\",\n    },\n  },\n);\n\nexport interface ToastProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClose\">,\n    VariantProps<typeof toastVariants> {\n  title?: string;\n  description?: string;\n  onClose?: () => void;\n  autoClose?: boolean;\n  duration?: number;\n  persistent?: boolean;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n}\n\nexport const Toast = React.forwardRef<HTMLDivElement, ToastProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      title,\n      description,\n      onClose,\n      autoClose = true,\n      duration = 5000,\n      persistent = false,\n      icon,\n      action,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isVisible, setIsVisible] = React.useState(true);\n\n    React.useEffect(() => {\n      if (autoClose && !persistent && duration > 0) {\n        const timer = setTimeout(() => {\n          setIsVisible(false);\n          setTimeout(() => onClose?.(), 300); // Allow fade out animation\n        }, duration);\n\n        return () => clearTimeout(timer);\n      }\n    }, [autoClose, persistent, duration, onClose]);\n\n    const handleClose = () => {\n      setIsVisible(false);\n      setTimeout(() => onClose?.(), 300);\n    };\n\n    if (!isVisible) return null;\n\n    const getDefaultIcon = () => {\n      switch (variant) {\n        case \"success\":\n          return \"✓\";\n        case \"error\":\n          return \"✕\";\n        case \"warning\":\n          return \"⚠\";\n        default:\n          return \"ℹ\";\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          toastVariants({ variant, size }),\n          \"animate-in slide-in-from-right-full\",\n          className,\n        )}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        <div className=\"flex-shrink-0\">\n          {icon || <span className=\"text-lg\">{getDefaultIcon()}</span>}\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          {title && <div className=\"font-medium text-fg\">{title}</div>}\n          {description && <div className=\"text-sm text-fg-muted mt-1\">{description}</div>}\n          {children && <div className=\"mt-2\">{children}</div>}\n        </div>\n\n        {action && <div className=\"flex-shrink-0 ml-2\">{action}</div>}\n\n        {!persistent && onClose && (\n          <button\n            type=\"button\"\n            onClick={handleClose}\n            className=\"flex-shrink-0 ml-2 p-1 rounded-md hover:bg-bg-subtle transition-colors\"\n            aria-label=\"Close notification\"\n          >\n            <span className=\"text-lg\">×</span>\n          </button>\n        )}\n      </div>\n    );\n  },\n);\n\nToast.displayName = \"Toast\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst modalVariants = cva(\n  \"relative bg-bg-elevated border border-border-default rounded-lg shadow-lg transition-all\",\n  {\n    variants: {\n      size: {\n        sm: \"max-w-sm\",\n        md: \"max-w-md\",\n        lg: \"max-w-lg\",\n        xl: \"max-w-xl\",\n        \"2xl\": \"max-w-2xl\",\n        fullscreen: \"max-w-none w-full h-full rounded-none\",\n      },\n    },\n    defaultVariants: {\n      size: \"md\",\n    },\n  },\n);\n\nexport interface ModalProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClose\">,\n    VariantProps<typeof modalVariants> {\n  open?: boolean;\n  onClose?: () => void;\n  title?: string;\n  description?: string;\n  showCloseButton?: boolean;\n  closeOnBackdropClick?: boolean;\n  closeOnEscape?: boolean;\n}\n\nexport const Modal = React.forwardRef<HTMLDivElement, ModalProps>(\n  (\n    {\n      className,\n      size,\n      open = false,\n      onClose,\n      title,\n      description,\n      showCloseButton = true,\n      closeOnBackdropClick = true,\n      closeOnEscape = true,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const [isVisible, setIsVisible] = React.useState(open);\n\n    React.useEffect(() => {\n      setIsVisible(open);\n    }, [open]);\n\n    React.useEffect(() => {\n      if (!closeOnEscape || !onClose) return;\n\n      const handleEscape = (e: KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n          onClose();\n        }\n      };\n\n      if (isVisible) {\n        document.addEventListener(\"keydown\", handleEscape);\n        document.body.style.overflow = \"hidden\";\n      }\n\n      return () => {\n        document.removeEventListener(\"keydown\", handleEscape);\n        document.body.style.overflow = \"unset\";\n      };\n    }, [isVisible, closeOnEscape, onClose]);\n\n    const handleBackdropClick = (e: React.MouseEvent) => {\n      if (closeOnBackdropClick && e.target === e.currentTarget) {\n        onClose?.();\n      }\n    };\n\n    if (!isVisible) return null;\n\n    return (\n      <div\n        className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-black/50 backdrop-blur-sm\"\n        onClick={handleBackdropClick}\n        onKeyDown={(e) => {\n          if (e.key === \"Escape\" && closeOnEscape) {\n            onClose?.();\n          }\n        }}\n        tabIndex={-1}\n      >\n        <div\n          ref={ref}\n          className={cn(modalVariants({ size }), \"w-full max-h-[90vh] overflow-hidden\", className)}\n          // biome-ignore lint/a11y/useSemanticElements: Using div with role=\"dialog\" for better styling control\n          role=\"dialog\"\n          aria-modal=\"true\"\n          aria-labelledby={title ? \"modal-title\" : undefined}\n          aria-describedby={description ? \"modal-description\" : undefined}\n          {...props}\n        >\n          {(title || showCloseButton) && (\n            <div className=\"flex items-center justify-between p-6 border-b border-border-subtle\">\n              <div className=\"flex-1\">\n                {title && (\n                  <h2 id=\"modal-title\" className=\"text-lg font-semibold text-fg\">\n                    {title}\n                  </h2>\n                )}\n                {description && (\n                  <p id=\"modal-description\" className=\"text-sm text-fg-muted mt-1\">\n                    {description}\n                  </p>\n                )}\n              </div>\n              {showCloseButton && onClose && (\n                <button\n                  type=\"button\"\n                  onClick={onClose}\n                  className=\"ml-4 p-2 rounded-md hover:bg-bg-subtle transition-colors\"\n                  aria-label=\"Close modal\"\n                >\n                  <span className=\"text-lg\">×</span>\n                </button>\n              )}\n            </div>\n          )}\n\n          <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-8rem)]\">{children}</div>\n        </div>\n      </div>\n    );\n  },\n);\n\nModal.displayName = \"Modal\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst alertVariants = cva(\"relative flex w-full items-start gap-3 rounded-lg border p-4\", {\n  variants: {\n    variant: {\n      info: \"border-primary bg-primary/5 text-primary\",\n      success: \"border-success bg-success/5 text-success\",\n      warning: \"border-warning bg-warning/5 text-warning\",\n      error: \"border-error bg-error/5 text-error\",\n    },\n    size: {\n      sm: \"p-3 text-sm\",\n      md: \"p-4 text-sm\",\n      lg: \"p-5 text-base\",\n    },\n  },\n  defaultVariants: {\n    variant: \"info\",\n    size: \"md\",\n  },\n});\n\nexport interface AlertProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClose\">,\n    VariantProps<typeof alertVariants> {\n  title?: string;\n  description?: string;\n  onClose?: () => void;\n  dismissible?: boolean;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n}\n\nexport const Alert = React.forwardRef<HTMLDivElement, AlertProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      title,\n      description,\n      onClose,\n      dismissible = false,\n      icon,\n      action,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const getDefaultIcon = () => {\n      switch (variant) {\n        case \"success\":\n          return \"✓\";\n        case \"error\":\n          return \"✕\";\n        case \"warning\":\n          return \"⚠\";\n        default:\n          return \"ℹ\";\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(alertVariants({ variant, size }), className)}\n        role=\"alert\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        <div className=\"flex-shrink-0 mt-0.5\">\n          {icon || <span className=\"text-lg\">{getDefaultIcon()}</span>}\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          {title && <div className=\"font-medium text-fg\">{title}</div>}\n          {description && <div className=\"text-sm text-fg-muted mt-1\">{description}</div>}\n          {children && <div className=\"mt-2\">{children}</div>}\n        </div>\n\n        {action && <div className=\"flex-shrink-0 ml-2\">{action}</div>}\n\n        {dismissible && onClose && (\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"flex-shrink-0 ml-2 p-1 rounded-md hover:bg-bg-subtle transition-colors\"\n            aria-label=\"Dismiss alert\"\n          >\n            <span className=\"text-lg\">×</span>\n          </button>\n        )}\n      </div>\n    );\n  },\n);\n\nAlert.displayName = \"Alert\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst bannerVariants = cva(\"relative flex w-full items-center gap-3 border-b px-4 py-3\", {\n  variants: {\n    variant: {\n      announcement: \"border-primary bg-primary/5 text-primary\",\n      warning: \"border-warning bg-warning/5 text-warning\",\n      maintenance: \"border-error bg-error/5 text-error\",\n    },\n    size: {\n      sm: \"px-3 py-2 text-sm\",\n      md: \"px-4 py-3 text-sm\",\n      lg: \"px-6 py-4 text-base\",\n    },\n  },\n  defaultVariants: {\n    variant: \"announcement\",\n    size: \"md\",\n  },\n});\n\nexport interface BannerProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClose\">,\n    VariantProps<typeof bannerVariants> {\n  title?: string;\n  description?: string;\n  onClose?: () => void;\n  dismissible?: boolean;\n  icon?: React.ReactNode;\n  action?: React.ReactNode;\n  link?: {\n    href: string;\n    text: string;\n  };\n}\n\nexport const Banner = React.forwardRef<HTMLDivElement, BannerProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      title,\n      description,\n      onClose,\n      dismissible = false,\n      icon,\n      action,\n      link,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const getDefaultIcon = () => {\n      switch (variant) {\n        case \"announcement\":\n          return \"📢\";\n        case \"warning\":\n          return \"⚠\";\n        case \"maintenance\":\n          return \"🔧\";\n        default:\n          return \"📢\";\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(bannerVariants({ variant, size }), className)}\n        role=\"banner\"\n        aria-live=\"polite\"\n        {...props}\n      >\n        <div className=\"flex-shrink-0\">\n          {icon || <span className=\"text-lg\">{getDefaultIcon()}</span>}\n        </div>\n\n        <div className=\"flex-1 min-w-0\">\n          {title && <div className=\"font-medium text-fg\">{title}</div>}\n          {description && <div className=\"text-sm text-fg-muted mt-1\">{description}</div>}\n          {children && <div className=\"mt-2\">{children}</div>}\n          {link && (\n            <div className=\"mt-2\">\n              <a\n                href={link.href}\n                className=\"text-sm underline hover:no-underline transition-all\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {link.text}\n              </a>\n            </div>\n          )}\n        </div>\n\n        {action && <div className=\"flex-shrink-0 ml-2\">{action}</div>}\n\n        {dismissible && onClose && (\n          <button\n            type=\"button\"\n            onClick={onClose}\n            className=\"flex-shrink-0 ml-2 p-1 rounded-md hover:bg-bg-subtle transition-colors\"\n            aria-label=\"Dismiss banner\"\n          >\n            <span className=\"text-lg\">×</span>\n          </button>\n        )}\n      </div>\n    );\n  },\n);\n\nBanner.displayName = \"Banner\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst emptyStateVariants = cva(\"flex flex-col items-center justify-center text-center p-8\", {\n  variants: {\n    variant: {\n      \"no-data\": \"text-fg-muted\",\n      error: \"text-error\",\n      loading: \"text-fg-muted\",\n      success: \"text-success\",\n    },\n    size: {\n      sm: \"p-4\",\n      md: \"p-8\",\n      lg: \"p-12\",\n    },\n  },\n  defaultVariants: {\n    variant: \"no-data\",\n    size: \"md\",\n  },\n});\n\nexport interface EmptyStateProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onAction\">,\n    VariantProps<typeof emptyStateVariants> {\n  title?: string;\n  description?: string;\n  icon?: React.ReactNode;\n  action?: {\n    label: string;\n    onClick: () => void;\n  };\n  secondaryAction?: {\n    label: string;\n    onClick: () => void;\n  };\n}\n\nexport const EmptyState = React.forwardRef<HTMLDivElement, EmptyStateProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      title,\n      description,\n      icon,\n      action,\n      secondaryAction,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const getDefaultIcon = () => {\n      switch (variant) {\n        case \"no-data\":\n          return \"📭\";\n        case \"error\":\n          return \"❌\";\n        case \"loading\":\n          return \"⏳\";\n        case \"success\":\n          return \"✅\";\n        default:\n          return \"📭\";\n      }\n    };\n\n    const getDefaultTitle = () => {\n      switch (variant) {\n        case \"no-data\":\n          return \"No data available\";\n        case \"error\":\n          return \"Something went wrong\";\n        case \"loading\":\n          return \"Loading...\";\n        case \"success\":\n          return \"All done!\";\n        default:\n          return \"No data available\";\n      }\n    };\n\n    const getDefaultDescription = () => {\n      switch (variant) {\n        case \"no-data\":\n          return \"There's nothing to show here yet.\";\n        case \"error\":\n          return \"We encountered an error while loading your data.\";\n        case \"loading\":\n          return \"Please wait while we load your content.\";\n        case \"success\":\n          return \"Everything looks good!\";\n        default:\n          return \"There's nothing to show here yet.\";\n      }\n    };\n\n    return (\n      <div ref={ref} className={cn(emptyStateVariants({ variant, size }), className)} {...props}>\n        <div className=\"mb-4\">{icon || <span className=\"text-6xl\">{getDefaultIcon()}</span>}</div>\n\n        <div className=\"max-w-md\">\n          <h3 className=\"text-lg font-semibold text-fg mb-2\">{title || getDefaultTitle()}</h3>\n          <p className=\"text-sm text-fg-muted mb-6\">{description || getDefaultDescription()}</p>\n\n          {children && <div className=\"mb-6\">{children}</div>}\n\n          <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n            {action && (\n              <button\n                type=\"button\"\n                onClick={action.onClick}\n                className=\"px-4 py-2 bg-primary text-fg-inverse rounded-md hover:bg-primary/90 transition-colors\"\n              >\n                {action.label}\n              </button>\n            )}\n            {secondaryAction && (\n              <button\n                type=\"button\"\n                onClick={secondaryAction.onClick}\n                className=\"px-4 py-2 border border-border-default text-fg rounded-md hover:bg-bg-subtle transition-colors\"\n              >\n                {secondaryAction.label}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n\nEmptyState.displayName = \"EmptyState\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst buyButtonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md font-medium transition-all focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none\",\n  {\n    variants: {\n      variant: {\n        primary: \"bg-primary text-fg-inverse hover:bg-primary/90 focus:ring-primary\",\n        secondary: \"bg-secondary text-fg-inverse hover:bg-secondary/90 focus:ring-secondary\",\n        success: \"bg-success text-fg-inverse hover:bg-success/90 focus:ring-success\",\n        danger: \"bg-error text-fg-inverse hover:bg-error/90 focus:ring-error\",\n      },\n      size: {\n        sm: \"px-3 py-1.5 text-sm\",\n        md: \"px-4 py-2 text-sm\",\n        lg: \"px-6 py-3 text-base\",\n      },\n      state: {\n        idle: \"\",\n        processing: \"animate-pulse\",\n        success: \"\",\n        error: \"\",\n        disabled: \"opacity-50 cursor-not-allowed\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"md\",\n      state: \"idle\",\n    },\n  },\n);\n\nexport interface BuyButtonProps\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"onClick\">,\n    VariantProps<typeof buyButtonVariants> {\n  price?: string;\n  currency?: string;\n  loading?: boolean;\n  success?: boolean;\n  error?: boolean;\n  disabled?: boolean;\n  onClick?: () => void;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nexport const BuyButton = React.forwardRef<HTMLButtonElement, BuyButtonProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      state,\n      price,\n      currency = \"USD\",\n      loading = false,\n      success = false,\n      error = false,\n      disabled = false,\n      onClick,\n      leftIcon,\n      rightIcon,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const [currentState, setCurrentState] = React.useState<\n      \"idle\" | \"processing\" | \"success\" | \"error\"\n    >(\"idle\");\n\n    React.useEffect(() => {\n      if (loading) setCurrentState(\"processing\");\n      else if (success) setCurrentState(\"success\");\n      else if (error) setCurrentState(\"error\");\n      else setCurrentState(\"idle\");\n    }, [loading, success, error]);\n\n    const handleClick = () => {\n      if (disabled || loading) return;\n      onClick?.();\n    };\n\n    const getButtonText = () => {\n      if (currentState === \"processing\") return \"Processing...\";\n      if (currentState === \"success\") return \"Purchased\";\n      if (currentState === \"error\") return \"Retry\";\n      if (price) return `Buy ${price} ${currency}`;\n      return children || \"Buy Now\";\n    };\n\n    const getButtonVariant = () => {\n      if (currentState === \"success\") return \"success\";\n      if (currentState === \"error\") return \"danger\";\n      return variant;\n    };\n\n    const getButtonState = () => {\n      if (disabled) return \"disabled\";\n      return currentState;\n    };\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={cn(\n          buyButtonVariants({\n            variant: getButtonVariant(),\n            size,\n            state: getButtonState(),\n          }),\n          className,\n        )}\n        disabled={disabled || loading}\n        onClick={handleClick}\n        aria-label={String(getButtonText())}\n        {...props}\n      >\n        {currentState === \"processing\" && (\n          <svg\n            className=\"h-4 w-4 animate-spin\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            role=\"img\"\n            aria-label=\"Loading\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n        )}\n\n        {currentState === \"success\" && (\n          <svg\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            role=\"img\"\n            aria-label=\"Success\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>\n        )}\n\n        {currentState === \"error\" && (\n          <svg\n            className=\"h-4 w-4\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            role=\"img\"\n            aria-label=\"Error\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M6 18L18 6M6 6l12 12\"\n            />\n          </svg>\n        )}\n\n        {leftIcon && currentState === \"idle\" && leftIcon}\n\n        <span>{getButtonText()}</span>\n\n        {rightIcon && currentState === \"idle\" && rightIcon}\n      </button>\n    );\n  },\n);\n\nBuyButton.displayName = \"BuyButton\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst priceDisplayVariants = cva(\"\", {\n  variants: {\n    variant: {\n      default: \"text-fg\",\n      muted: \"text-fg-muted\",\n      success: \"text-success\",\n      error: \"text-error\",\n      warning: \"text-warning\",\n    },\n    size: {\n      sm: \"text-sm\",\n      md: \"text-base\",\n      lg: \"text-lg\",\n      xl: \"text-xl\",\n      \"2xl\": \"text-2xl\",\n    },\n    weight: {\n      normal: \"font-normal\",\n      medium: \"font-medium\",\n      semibold: \"font-semibold\",\n      bold: \"font-bold\",\n    },\n  },\n  defaultVariants: {\n    variant: \"default\",\n    size: \"md\",\n    weight: \"medium\",\n  },\n});\n\nexport interface PriceDisplayProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\">,\n    VariantProps<typeof priceDisplayVariants> {\n  amount: number;\n  currency?: string;\n  locale?: string;\n  showCurrency?: boolean;\n  originalPrice?: number;\n  discount?: number;\n  discountPercentage?: number;\n  showDiscount?: boolean;\n  prefix?: string;\n  suffix?: string;\n  formatOptions?: Intl.NumberFormatOptions;\n}\n\nexport const PriceDisplay = React.forwardRef<HTMLDivElement, PriceDisplayProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      weight,\n      amount,\n      currency = \"USD\",\n      locale = \"en-US\",\n      showCurrency = true,\n      originalPrice,\n      discount,\n      discountPercentage,\n      showDiscount = true,\n      prefix,\n      suffix,\n      formatOptions,\n      ...props\n    },\n    ref,\n  ) => {\n    const formatPrice = (value: number) => {\n      const options: Intl.NumberFormatOptions = {\n        style: showCurrency ? \"currency\" : \"decimal\",\n        currency: showCurrency ? currency : undefined,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n        ...formatOptions,\n      };\n\n      return new Intl.NumberFormat(locale, options).format(value);\n    };\n\n    const hasDiscount = Boolean(originalPrice && originalPrice > amount);\n    const displayDiscount = discount || (originalPrice ? originalPrice - amount : 0);\n    const displayDiscountPercentage =\n      discountPercentage ||\n      (originalPrice ? Math.round(((originalPrice - amount) / originalPrice) * 100) : 0);\n\n    return (\n      <div ref={ref} className={cn(\"flex items-center gap-2\", className)} {...props}>\n        {prefix && <span className=\"text-fg-muted\">{prefix}</span>}\n\n        <div className=\"flex items-center gap-2\">\n          {hasDiscount && showDiscount && (\n            <span\n              className={cn(\n                priceDisplayVariants({ variant: \"muted\", size: \"sm\", weight: \"normal\" }),\n              )}\n            >\n              {formatPrice(originalPrice ?? 0)}\n            </span>\n          )}\n\n          <span className={cn(priceDisplayVariants({ variant, size, weight }))}>\n            {formatPrice(amount)}\n          </span>\n\n          {hasDiscount && showDiscount && (\n            <span\n              className={cn(\n                priceDisplayVariants({\n                  variant: \"success\",\n                  size: \"sm\",\n                  weight: \"medium\",\n                }),\n                \"bg-success/10 px-2 py-1 rounded-md\",\n              )}\n            >\n              -{displayDiscountPercentage}%\n            </span>\n          )}\n        </div>\n\n        {suffix && <span className=\"text-fg-muted\">{suffix}</span>}\n      </div>\n    );\n  },\n);\n\nPriceDisplay.displayName = \"PriceDisplay\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst checkoutCTAVariants = cva(\n  \"inline-flex items-center justify-center gap-2 rounded-md font-medium transition-all focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none\",\n  {\n    variants: {\n      variant: {\n        primary: \"bg-primary text-fg-inverse hover:bg-primary/90 focus:ring-primary\",\n        secondary: \"bg-secondary text-fg-inverse hover:bg-secondary/90 focus:ring-secondary\",\n        outline:\n          \"border border-primary text-primary hover:bg-primary hover:text-fg-inverse focus:ring-primary\",\n        ghost: \"text-primary hover:bg-primary/10 focus:ring-primary\",\n      },\n      size: {\n        sm: \"px-3 py-1.5 text-sm\",\n        md: \"px-4 py-2 text-sm\",\n        lg: \"px-6 py-3 text-base\",\n        xl: \"px-8 py-4 text-lg\",\n      },\n      checkoutType: {\n        single: \"\",\n        cart: \"\",\n        subscription: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"primary\",\n      size: \"md\",\n      checkoutType: \"single\",\n    },\n  },\n);\n\nexport interface CheckoutCTAProps\n  extends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"onClick\" | \"type\">,\n    VariantProps<typeof checkoutCTAVariants> {\n  checkoutType: \"single\" | \"cart\" | \"subscription\";\n  totalAmount?: number;\n  currency?: string;\n  itemCount?: number;\n  loading?: boolean;\n  disabled?: boolean;\n  onClick?: () => void;\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n}\n\nexport const CheckoutCTA = React.forwardRef<HTMLButtonElement, CheckoutCTAProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      checkoutType,\n      totalAmount,\n      currency = \"USD\",\n      itemCount,\n      loading = false,\n      disabled = false,\n      onClick,\n      leftIcon,\n      rightIcon,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const formatPrice = (amount: number) => {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }).format(amount);\n    };\n\n    const getButtonText = () => {\n      if (children) return children;\n\n      switch (checkoutType) {\n        case \"single\":\n          return totalAmount ? `Buy for ${formatPrice(totalAmount)}` : \"Buy Now\";\n        case \"cart\":\n          return itemCount\n            ? `Checkout (${itemCount} ${itemCount === 1 ? \"item\" : \"items\"})`\n            : \"Checkout\";\n        case \"subscription\":\n          return totalAmount ? `Subscribe for ${formatPrice(totalAmount)}/month` : \"Subscribe\";\n        default:\n          return \"Checkout\";\n      }\n    };\n\n    const getButtonIcon = () => {\n      if (loading) {\n        return (\n          <svg\n            className=\"h-4 w-4 animate-spin\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            role=\"img\"\n            aria-label=\"Loading\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n        );\n      }\n\n      switch (checkoutType) {\n        case \"single\":\n          return (\n            <svg\n              className=\"h-4 w-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Buy\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01\"\n              />\n            </svg>\n          );\n        case \"cart\":\n          return (\n            <svg\n              className=\"h-4 w-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Cart\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m6-5v6a2 2 0 01-2 2H9a2 2 0 01-2-2v-6m8 0V9a2 2 0 00-2-2H9a2 2 0 00-2 2v4.01\"\n              />\n            </svg>\n          );\n        case \"subscription\":\n          return (\n            <svg\n              className=\"h-4 w-4\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Subscribe\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n          );\n        default:\n          return null;\n      }\n    };\n\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        className={cn(checkoutCTAVariants({ variant, size, checkoutType }), className)}\n        disabled={disabled || loading}\n        onClick={onClick}\n        aria-label={String(getButtonText())}\n        {...props}\n      >\n        {leftIcon && !loading && leftIcon}\n\n        {loading ? getButtonIcon() : leftIcon || getButtonIcon()}\n\n        <span>{getButtonText()}</span>\n\n        {rightIcon && !loading && rightIcon}\n      </button>\n    );\n  },\n);\n\nCheckoutCTA.displayName = \"CheckoutCTA\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst paymentMethodVariants = cva(\n  \"flex items-center gap-3 p-4 border rounded-lg cursor-pointer transition-all hover:border-border-strong focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        card: \"border-border-default\",\n        crypto: \"border-border-default\",\n        wallet: \"border-border-default\",\n      },\n      selected: {\n        true: \"border-primary bg-primary/5\",\n        false: \"border-border-default\",\n      },\n      disabled: {\n        true: \"opacity-50 cursor-not-allowed\",\n        false: \"\",\n      },\n    },\n    defaultVariants: {\n      variant: \"card\",\n      selected: false,\n      disabled: false,\n    },\n  },\n);\n\nexport interface PaymentMethodProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClick\">,\n    VariantProps<typeof paymentMethodVariants> {\n  type: \"card\" | \"crypto\" | \"wallet\";\n  name: string;\n  description?: string;\n  icon?: React.ReactNode;\n  selected?: boolean;\n  disabled?: boolean;\n  onClick?: () => void;\n  onSelect?: () => void;\n}\n\nexport const PaymentMethod = React.forwardRef<HTMLDivElement, PaymentMethodProps>(\n  (\n    {\n      className,\n      variant,\n      selected,\n      disabled,\n      type,\n      name,\n      description,\n      icon,\n      onClick,\n      onSelect,\n      ...props\n    },\n    ref,\n  ) => {\n    const handleClick = () => {\n      if (disabled) return;\n      onClick?.();\n      onSelect?.();\n    };\n\n    const handleKeyDown = (e: React.KeyboardEvent) => {\n      if (e.key === \"Enter\" || e.key === \" \") {\n        e.preventDefault();\n        handleClick();\n      }\n    };\n\n    const getDefaultIcon = () => {\n      switch (type) {\n        case \"card\":\n          return (\n            <svg\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Credit Card\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\n              />\n            </svg>\n          );\n        case \"crypto\":\n          return (\n            <svg\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Cryptocurrency\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n              />\n            </svg>\n          );\n        case \"wallet\":\n          return (\n            <svg\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Digital Wallet\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"\n              />\n            </svg>\n          );\n        default:\n          return null;\n      }\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={cn(paymentMethodVariants({ variant, selected, disabled }), className)}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        tabIndex={disabled ? -1 : 0}\n        // biome-ignore lint/a11y/useSemanticElements: Using div with role=\"button\" for better styling control\n        role=\"button\"\n        aria-pressed={selected}\n        aria-disabled={disabled}\n        {...props}\n      >\n        <div className=\"flex-shrink-0\">{icon || getDefaultIcon()}</div>\n\n        <div className=\"flex-1 min-w-0\">\n          <div className=\"font-medium text-fg\">{name}</div>\n          {description && <div className=\"text-sm text-fg-muted mt-1\">{description}</div>}\n        </div>\n\n        <div className=\"flex-shrink-0\">\n          {selected ? (\n            <div className=\"h-5 w-5 rounded-full bg-primary flex items-center justify-center\">\n              <svg\n                className=\"h-3 w-3 text-fg-inverse\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                role=\"img\"\n                aria-label=\"Selected\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n                  clipRule=\"evenodd\"\n                />\n              </svg>\n            </div>\n          ) : (\n            <div className=\"h-5 w-5 rounded-full border-2 border-border-default\" />\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nPaymentMethod.displayName = \"PaymentMethod\";\n","import { type VariantProps, cva } from \"class-variance-authority\";\nimport React from \"react\";\nimport { cn } from \"../utils/cn\";\n\nconst receiptPanelVariants = cva(\"rounded-lg border p-6 space-y-4\", {\n  variants: {\n    variant: {\n      success: \"border-success bg-success/5 text-success\",\n      error: \"border-error bg-error/5 text-error\",\n      pending: \"border-warning bg-warning/5 text-warning\",\n    },\n    size: {\n      sm: \"p-4\",\n      md: \"p-6\",\n      lg: \"p-8\",\n    },\n  },\n  defaultVariants: {\n    variant: \"success\",\n    size: \"md\",\n  },\n});\n\nexport interface ReceiptPanelProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"children\">,\n    VariantProps<typeof receiptPanelVariants> {\n  status: \"success\" | \"error\" | \"pending\";\n  transactionId?: string;\n  amount?: number;\n  currency?: string;\n  description?: string;\n  timestamp?: Date;\n  paymentMethod?: string;\n  onRetry?: () => void;\n  onDownload?: () => void;\n  onShare?: () => void;\n}\n\nexport const ReceiptPanel = React.forwardRef<HTMLDivElement, ReceiptPanelProps>(\n  (\n    {\n      className,\n      variant,\n      size,\n      status,\n      transactionId,\n      amount,\n      currency = \"USD\",\n      description,\n      timestamp,\n      paymentMethod,\n      onRetry,\n      onDownload,\n      onShare,\n      ...props\n    },\n    ref,\n  ) => {\n    const formatPrice = (value: number) => {\n      return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency,\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      }).format(value);\n    };\n\n    const formatDate = (date: Date) => {\n      return new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }).format(date);\n    };\n\n    const getStatusIcon = () => {\n      switch (status) {\n        case \"success\":\n          return (\n            <svg\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Success\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          );\n        case \"error\":\n          return (\n            <svg\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Error\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          );\n        case \"pending\":\n          return (\n            <svg\n              className=\"h-6 w-6 animate-spin\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              role=\"img\"\n              aria-label=\"Processing\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n          );\n        default:\n          return null;\n      }\n    };\n\n    const getStatusText = () => {\n      switch (status) {\n        case \"success\":\n          return \"Payment Successful\";\n        case \"error\":\n          return \"Payment Failed\";\n        case \"pending\":\n          return \"Processing Payment\";\n        default:\n          return \"Unknown Status\";\n      }\n    };\n\n    return (\n      <div ref={ref} className={cn(receiptPanelVariants({ variant, size }), className)} {...props}>\n        <div className=\"flex items-center gap-3\">\n          {getStatusIcon()}\n          <h3 className=\"text-lg font-semibold\">{getStatusText()}</h3>\n        </div>\n\n        {description && <p className=\"text-sm text-fg-muted\">{description}</p>}\n\n        <div className=\"space-y-2\">\n          {transactionId && (\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-fg-muted\">Transaction ID:</span>\n              <span className=\"font-mono text-fg\">{transactionId}</span>\n            </div>\n          )}\n\n          {amount && (\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-fg-muted\">Amount:</span>\n              <span className=\"font-semibold text-fg\">{formatPrice(amount)}</span>\n            </div>\n          )}\n\n          {paymentMethod && (\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-fg-muted\">Payment Method:</span>\n              <span className=\"text-fg\">{paymentMethod}</span>\n            </div>\n          )}\n\n          {timestamp && (\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-fg-muted\">Date:</span>\n              <span className=\"text-fg\">{formatDate(timestamp)}</span>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex gap-2 pt-4 border-t border-border-subtle\">\n          {status === \"error\" && onRetry && (\n            <button\n              type=\"button\"\n              onClick={onRetry}\n              className=\"px-4 py-2 bg-error text-fg-inverse rounded-md hover:bg-error/90 transition-colors\"\n            >\n              Retry Payment\n            </button>\n          )}\n\n          {status === \"success\" && onDownload && (\n            <button\n              type=\"button\"\n              onClick={onDownload}\n              className=\"px-4 py-2 bg-primary text-fg-inverse rounded-md hover:bg-primary/90 transition-colors\"\n            >\n              Download Receipt\n            </button>\n          )}\n\n          {status === \"success\" && onShare && (\n            <button\n              type=\"button\"\n              onClick={onShare}\n              className=\"px-4 py-2 border border-border-default text-fg rounded-md hover:bg-bg-subtle transition-colors\"\n            >\n              Share\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  },\n);\n\nReceiptPanel.displayName = \"ReceiptPanel\";\n","import clsx from \"clsx\";\nimport type React from \"react\";\n\nexport function Card({ className, children }: React.PropsWithChildren<{ className?: string }>) {\n  return (\n    <div\n      className={clsx(\n        \"rounded-md border border-white/10 bg-bg-elevated p-4 shadow-elev-1\",\n        className,\n      )}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function CardTitle({ children }: React.PropsWithChildren) {\n  return <h3 className=\"mb-1 text-lg font-semibold text-fg\">{children}</h3>;\n}\n\nexport function CardMeta({ children }: React.PropsWithChildren) {\n  return <p className=\"text-sm text-fg/70\">{children}</p>;\n}\n"],"mappings":"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","names":["jsx","jsx","createContext","useContext","useEffect","useState","jsx","cva","jsx","cva","Slot","cva","forwardRef","jsx","jsxs","cva","forwardRef","Slot","jsx","jsxs","cva","forwardRef","jsx","cva","forwardRef","forwardRef","jsx","jsxs","forwardRef","forwardRef","jsx","base","forwardRef","forwardRef","useEffect","useState","Tag","VolumeX","Archive","Play","jsx","jsxs","forwardRef","useState","useEffect","formatTime","forwardRef","useState","jsx","jsxs","forwardRef","useState","formatTime","VolumeX","forwardRef","useState","jsx","jsxs","forwardRef","useState","formatTime","VolumeX","forwardRef","useState","jsx","jsxs","forwardRef","isInteractive","useState","formatTime","jsx","jsxs","cva","forwardRef","jsx","cva","forwardRef","cva","forwardRef","jsx","jsxs","cva","forwardRef","cva","forwardRef","jsx","cva","forwardRef","cva","Check","ChevronDown","forwardRef","jsx","jsxs","cva","forwardRef","ChevronDown","Check","cva","Check","forwardRef","jsx","cva","forwardRef","Check","cva","forwardRef","jsx","jsxs","cva","forwardRef","Slot","clsx","jsx","Button","jsx","jsxs","Button","forwardRef","useCallback","useState","jsx","jsxs","forwardRef","useState","useCallback","formatFileSize","sizes","getStatusIcon","error","forwardRef","jsx","jsxs","forwardRef","formatFileSize","sizes","formatTime","getStatusIcon","forwardRef","jsx","jsxs","forwardRef","getStatusIcon","getStatusColor","forwardRef","jsx","jsxs","forwardRef","jsxs","jsx","forwardRef","jsx","jsxs","forwardRef","Icon","forwardRef","useState","Fragment","jsx","jsxs","formatDuration","forwardRef","useState","forwardRef","useState","jsx","jsxs","forwardRef","useState","jsxs","jsx","Icon","forwardRef","jsx","jsxs","formatDuration","forwardRef","VolumeX","forwardRef","useState","jsx","jsxs","forwardRef","useState","forwardRef","useState","jsx","jsxs","forwardRef","useState","forwardRef","useEffect","useState","jsx","jsxs","forwardRef","useState","useEffect","forwardRef","useCallback","useState","jsx","jsxs","forwardRef","useState","useCallback","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","getStatusIcon","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","getStatusIcon","cva","React","jsx","jsxs","buttonVariants","cva","Button","React","cva","React","jsx","cardVariants","cva","Card","React","isInteractive","cva","React","jsx","jsxs","inputVariants","cva","Input","React","cva","React","jsx","jsxs","selectVariants","cva","Select","React","cva","React","jsx","jsxs","checkboxVariants","cva","Checkbox","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","cva","React","jsx","jsxs","cva","React","formatDate","getStatusIcon","clsx","jsx","Card","CardTitle"]}