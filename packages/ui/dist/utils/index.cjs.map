{"version":3,"sources":["../../src/utils/index.ts","../../src/utils/cn.ts","../../src/utils/cva.ts"],"sourcesContent":["export { cn } from \"./cn\";\nexport { cva, type VariantProps } from \"./cva\";\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\n/**\n * Utility for merging Tailwind CSS classes\n *\n * Combines clsx for conditional classes with tailwind-merge for proper precedence.\n *\n * @example\n * cn(\"px-2 py-1\", isActive && \"bg-primary\", className)\n * // → \"px-2 py-1 bg-primary <additional-classes>\"\n *\n * @example\n * cn(\"px-2\", \"px-4\") // → \"px-4\" (tailwind-merge handles conflicts)\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import { type VariantProps, cva } from \"class-variance-authority\";\n\n/**\n * CVA (Class Variance Authority) utility for consistent component variants\n *\n * This utility provides a standardized way to create component variants\n * using the GotMusic design token system.\n *\n * Usage:\n * ```tsx\n * const buttonVariants = cva(\"base-classes\", {\n *   variants: {\n *     variant: { primary: \"bg-brand-primary\", secondary: \"bg-bg-elevated\" },\n *     size: { sm: \"h-9\", md: \"h-10\", lg: \"h-11\" }\n *   }\n * });\n * ```\n */\nexport { cva, type VariantProps };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,kBAAsC;AACtC,4BAAwB;AAcjB,SAAS,MAAM,QAAsB;AAC1C,aAAO,mCAAQ,kBAAK,MAAM,CAAC;AAC7B;;;ACjBA,sCAAuC;","names":[]}